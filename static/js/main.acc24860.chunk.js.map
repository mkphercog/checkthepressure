{"version":3,"sources":["styles/variables.ts","components/Navigation/Navigation.css.ts","components/Navigation/Navigation.tsx","components/UserPressureBar/UserPressureBar.css.ts","components/UserPressureBar/UserPressureBar.tsx","store/types/index.ts","store/actions/profilesAction.ts","components/Buttons/SharedBasicButton/SharedBasicButton.css.ts","components/Buttons/SharedBasicButton/SharedBasicButton.tsx","components/Buttons/SharedDeleteButton/SharedDeleteButton.css.ts","components/Buttons/SharedDeleteButton/SharedDeleteButton.tsx","styles/mixins/LiElement.ts","components/ProfilesSelector/UserProfile/UserProfile.css.ts","components/ProfilesSelector/UserProfile/UserProfile.tsx","styles/mixins/Popups.ts","components/Popups/AddUser/AddUser.css.ts","components/Buttons/SharedApplyButton/SharedApplyButton.css.ts","components/Buttons/SharedApplyButton/SharedApplyButton.tsx","components/Buttons/SharedDenyButton/SharedDenyButton.css.ts","components/Buttons/SharedDenyButton/SharedDenyButton.tsx","components/Popups/Warnings/Warnings.css.ts","common/constants.ts","components/Popups/Warnings/Warnings.tsx","common/bloodPressureTable.ts","common/Portal/Portal.css.ts","common/Portal/Portal.tsx","components/Buttons/SharedExitButton/SharedExitButton.css.ts","components/Buttons/SharedExitButton/SharedExitButton.tsx","components/Popups/AddUser/AddUser.tsx","styles/mixins/Fieldset.ts","components/ProfilesSelector/ProfilesSelector.css.ts","images/BG.jpg","components/SharedPageWrapper/SharedPageWrapper.css.ts","components/SharedPageWrapper/SharedPageWrapper.tsx","components/Buttons/SharedAddButton/SharedAddButton.css.ts","components/Buttons/SharedAddButton/SharedAddButton.tsx","components/ProfilesSelector/ProfilesSelector.tsx","components/Popups/AddPeriodicTest/AddPeriodicTest.css.ts","components/Popups/AddPeriodicTest/AddPeriodicTest.tsx","common/optionsForSelectTag.tsx","components/Popups/AddPeriodicTest/AddPeriodicTestFunctions.ts","components/Measurements/PeriodicTestsList/PeriodicTestsList.css.ts","components/Measurements/PeriodicTestsList/PeriodicTest/PeriodicTest.css.ts","components/Measurements/PeriodicTestsList/PeriodicTest/PeriodicTest.tsx","components/Measurements/PeriodicTestsList/PeriodicTestsList.tsx","components/Popups/EditDailyTest/EditDailyTest.css.ts","components/Popups/EditDailyTest/EditDailyTestFunctions.ts","components/Popups/Information/Information.css.ts","components/Popups/Information/Information.tsx","components/Buttons/SharedInfoButton/SharedInfoButton.css.ts","components/Popups/EditDailyTest/EditDailyTest.tsx","components/Buttons/SharedInfoButton/SharedInfoButton.tsx","components/Measurements/PeriodicTestDetails/DailyTest/DailyTest.css.ts","components/Measurements/PeriodicTestDetails/DailyTest/MorningEveningDetails.tsx","components/Measurements/PeriodicTestDetails/DailyTest/DailyTest.tsx","components/Measurements/PeriodicTestDetails/PeriodicTestDetails.css.ts","components/Popups/AverageResults/AverageResults.css.ts","components/Popups/AverageResults/ResultsInFieldset.tsx","common/PDF/PDF_Fonts/OpenSans-Regular.ttf","common/PDF/PDF_Fonts/OpenSans-Bold.ttf","common/PDF/PdfPage.styles.ts","common/PDF/PageViews/AverageResultsView.tsx","common/PDF/PageViews/LogoView.tsx","common/PDF/PageViews/UserDataView.tsx","common/PDF/PageViews/PeriodicTestInfoView.tsx","common/PDF/PageViews/DailyTestsTableView.tsx","common/PDF/PageViews/FooterView.tsx","common/PDF/PdfPage.tsx","common/PDF/PdfPageGenerator.css.ts","components/Popups/AverageResults/AverageResults.tsx","common/PDF/PdfPageGenerator.tsx","components/Measurements/PeriodicTestDetails/PeriodicTestDetails.tsx","components/Measurements/Measurements.tsx","components/Info/Info.css.ts","components/Info/Info.tsx","App.css.ts","index.css.ts","App.tsx","reportWebVitals.ts","common/localStorage.ts","store/reducers/profilesReducerFunctions.ts","store/reducers/profilesReducer.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["COLORS","CORNER_RADIUS","TRANSITION_TIME","widthWithoutMenuIcon","opacityAnimation","keyframes","Header","styled","header","Logo","h1","Nav","nav","MenuIcon","i","BackArrowIcon","Navigation","useState","menuVisibility","setMenuVisibility","window","innerWidth","windowWidth","setWindowWidth","history","useHistory","document","body","onresize","useEffect","onClick","location","pathname","push","to","exact","className","Bar","div","UserData","PressureMin","PressureNormal","PressureMax","UserPressureBar","name","age","userBloodPressureBasedOnAge","MIN","NORMAL","MAX","SYS","DIA","ADD_PROFILE","DELETE_PROFILE","SET_SELECTED_USER_ID","ADD_PERIODIC_PRESSURE_TEST","DELETE_PERIODIC_PRESSURE_TEST","EDIT_DAILY_VALUES","SET_OMITTED_DAILY_TEST","UPDATE_NUMBER_OF_TOTAL_AND_DONE_TESTS_AND_STATE","CALCULATE_AVERAGE_RESULTS","updateNumberOfTotalAndDoneTestsAndState","userID","periodicID","type","BasicButtonStyled","button","SharedBasicButton","isDisabled","children","disabled","DeleteButtonStyled","SharedDeleteButton","deleteFunction","LiElement","li","Wrapper","Options","UserProfile","id","deleteProfile","selectUserID","PopupWrapper","PopupTitleGreen","PopupTitleRed","PopupTitleBlue","PopupContentWrapper","PopupForm","form","PopupSelect","select","PopupSelectOption","option","FormStyled","SharedApplyButtonType","ApplyButtonStyled","SharedApplyButton","basic","setIsOpen","getResponse","submitFunction","e","DenyButtonStyled","SharedDenyButton","PeriodicTestStates","TimeOfDayStates","BtnWrapper","Warnings","message","WarningsYesNo","response","bloodPressureTable","MAX_SYS_DIA_PULSE_VALUE","emptyPeriodicTest","start","end","days","state","totalNumberOfTests","numberOfTestsDone","averageResults","morning","PULSE","evening","total","list","anonymous","nextAvailablePeriodicTestID","periodicPressureTests","TEST_VALUES_INFO","PortalTarget","PortalBG","Portal","target","domElement","getElementById","ReactDom","createPortal","ExitButtonStyled","SharedExitButton","AddUser","setIsOpenAddUserPopup","setName","setAge","dispatch","useDispatch","nextAvailableUserID","useSelector","profiles","isOpenPortal","setIsOpenPortal","Object","popup","setPopup","htmlFor","value","onChange","autoFocus","submit","preventDefault","parsedAge","parseInt","length","test","getUserBloodPressure","find","bloodTable","findUserBloodPressureBasedOnAge","newProfile","newUser","addProfile","MODAL","Fieldset","fieldset","Legend","legend","ProfilesSelectorStyled","PageWrapperStyled","SharedPageWrapper","src","BackGround","alt","AddButtonStyled","SharedAddButton","addFunction","hoverDescription","ProfilesSelector","users","handleDeleteProfile","res","idToDelete","handleSelectUserID","selectedUserID","setSelectedUserID","renderUsers","map","legendTitle","today","Date","AddPeriodicTest","setIsOpenAddPeriodicTestPopup","toISOString","slice","startDay","setStartDay","setDays","renderOptionsDays","minValue","maxValue","numbers","item","numRangeOptions","Number","getDateArray","startDashDate","numOfDays","arrDate","split","year","month","day","dateList","date","UTC","dateWithDots","Intl","DateTimeFormat","format","generateDateArray","getDailyTestList","index","timeOfDay","MORNING","omitted","EVENING","newPeriodicTest","IN_PROGRESS","newTest","addPeriodicPressureTest","FieldsetStyled","Title","h2","Subtitle","Info","p","Btns","PeriodicTest","openPeriodicTestDetails","deletePeriodicTest","PeriodicTestsList","tests","handleDeletePeriodicTest","deletePeriodicPressureTest","renderPeriodicTests","ValidateStateTypes","Information","SysDiaPulse","InfoButtonStyled","SharedInfoButton","EditDailyTest","dailyID","setIsOpenEditDailyTestPopup","currentTestValuesToRender","testValues","forEach","user","periodicTest","currentSys","toString","currentDia","currentPulse","getDailyTimeOfDayTestValues","sys","setSys","dia","setDia","pulse","setPulse","handleShowInfo","messageType","messageToShow","checkValues","notEnough","tooMuch","badSign","correct","validateValues","editDailyValues","sysDiaType","MorningEvening","SysDiaPuls","SysAndDiaColored","span","props","color","timeOfDayType","MorningEveningDetails","dailyTest","editDailyTest","setOmittedDaily","getSysDiaColor","DailyTest","evenign","ControlPanel","BackArrow","resultNameType","Content","ResultsInFieldset","timeOfDayName","resultName","Font","register","family","OpenSansRegular","OpenSansBold","PropNames","styles","StyleSheet","create","page","flexDirection","padding","fontFamily","backgroundColor","logoView","marginBottom","logoText","fontSize","userDataView","periodicTestInfoView","display","justifyContent","alignItems","marginTop","periodicText","tableHeaderView","tableHeaderText","width","textAlign","tableContentView","borderBottomWidth","borderBottomStyle","borderBottomColor","tableContentText","averageTitleView","averageTitleText","freeSpaceView","flexGrow","footerView","borderTopWidth","borderTopStyle","borderTopColor","fotterText","normalText","boldText","LogoView","style","UserDataView","PeriodicTestInfoView","DailyTestsTableView","renderDailyTests","isOmmitedMorning","isOmmitedEvenign","AverageResultsView","getAverage","prop","renderAverageMorning","renderAverageEvening","renderAverageTotal","renderAllAverageResults","FooterView","MyDocument","size","PDFDownloadLinkStyled","PDFDownloadLink","PdfPageGenerator","startDate","endDate","fileName","blob","url","loading","error","AverageResults","setIsOpenAverageResultsPopup","morninig","PeriodicTestDetails","backToPeriodicTestsList","testIsDone","DONE","renderList","setOmittedDailyTest","calculateAverageResults","Measurements","selectedUser","openedPeriodicTest","setOpenedPeriodicTest","isOpenPeriodicTestDetails","setIsOpenPeriodicTestDetails","getOpenedPeriodicTest","href","rel","AppBG","AppWrapper","AppBottomBar","GlobalStyles","createGlobalStyle","App","getProfiles","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","LOCAL_PROFILES","LOCAL_SELECTED_USER_ID","updateLocalStorageProfiles","localStorage","setItem","JSON","stringify","updateLocalSelectedUserID","usersList","action","filter","editDailyTestValues","daily","done","calculateAverageValue","arr","Math","round","reduce","acu","morningValuesOfSys","morningValuesOfDia","morningValuesOfPulse","eveningValuesOfSys","eveningValuesOfDia","eveningValuesOfPulse","initialState","localProfiles","localID","localSelectedUserID","isLocalList","getItem","checkLocalProfiles","parse","configInitialStateWithLocalStorage","rootReducer","combineReducers","updatedProfiles","availableID","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","basename"],"mappings":"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","file":"static/js/main.acc24860.chunk.js","sourcesContent":["export const COLORS = {\r\n  blue: \"#315aeb\",\r\n  green: \"#86db51\",\r\n  darkGreen: \"#5e963b\",\r\n  orange: \"#ffbb0d\",\r\n  red: \"#eb601a\",\r\n  darkRed: \"#a34312\",\r\n  white: \"#ffffff\",\r\n  whiteOpacity: \"rgba(255,255,255,0.4)\",\r\n  lightGray: \"#e6e6e6\",\r\n  gray: \"#969696\",\r\n  grayWithOpacity: \"rgba(150, 150, 150, 0.45)\",\r\n  darkGray: \"#505050\",\r\n  black: \"#000000\",\r\n  transparent: \"transparent\",\r\n};\r\n\r\nexport const CORNER_RADIUS = \"15px\";\r\nexport const TRANSITION_TIME = \"0.3s\";\r\n","import styled, { keyframes } from \"styled-components\";\r\nimport {\r\n  COLORS,\r\n  CORNER_RADIUS,\r\n  TRANSITION_TIME,\r\n} from \"./../../styles/variables\";\r\n\r\nconst widthWithoutMenuIcon = \"640px\";\r\nconst opacityAnimation = keyframes`\r\n  from {\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    opacity: 100%;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  flex-shrink: 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 8px 0;\r\n  background-color: ${COLORS.blue};\r\n  border-top-right-radius: ${CORNER_RADIUS};\r\n  border-top-left-radius: ${CORNER_RADIUS};\r\n`;\r\n\r\nexport const Logo = styled.h1`\r\n  margin-left: 10px;\r\n  font-size: 18px;\r\n  text-transform: uppercase;\r\n  color: ${COLORS.white};\r\n  animation: ${opacityAnimation} linear 0.5s;\r\n\r\n  @media (min-width: ${widthWithoutMenuIcon}) {\r\n    animation: none;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 24px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    margin-left: 20px;\r\n    font-size: 28px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  span {\r\n    color: ${COLORS.orange};\r\n  }\r\n`;\r\n\r\nexport const Nav = styled.nav`\r\n  flex-basis: 60%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  height: 100%;\r\n  margin: 0 10px;\r\n  animation: ${opacityAnimation} linear 0.5s;\r\n\r\n  @media (min-width: ${widthWithoutMenuIcon}) {\r\n    animation: none;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    margin-right: 20px;\r\n  }\r\n\r\n  li {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    list-style: none;\r\n\r\n    a {\r\n      padding: 0 15px;\r\n      text-transform: uppercase;\r\n      text-decoration: none;\r\n      font-weight: bold;\r\n      font-size: 12px;\r\n      color: ${COLORS.white};\r\n      transition: ${TRANSITION_TIME};\r\n\r\n      @media (min-width: 768px) {\r\n        font-size: 16px;\r\n      }\r\n\r\n      @media (min-width: 1024px) {\r\n        font-size: 18px;\r\n        cursor: pointer;\r\n        transition: ${TRANSITION_TIME};\r\n\r\n        :hover {\r\n          color: ${COLORS.orange};\r\n        }\r\n      }\r\n    }\r\n\r\n    .active {\r\n      border-bottom: 3px solid ${COLORS.orange};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MenuIcon = styled.i`\r\n  margin-right: 15px;\r\n  font-size: 22px;\r\n  color: ${COLORS.white};\r\n  cursor: pointer;\r\n  animation: ${opacityAnimation} linear 0.5s;\r\n\r\n  @media (min-width: ${widthWithoutMenuIcon}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const BackArrowIcon = styled.i`\r\n  margin-right: 15px;\r\n  color: ${COLORS.orange};\r\n  font-size: 25px;\r\n  transform: rotate(180deg);\r\n  cursor: pointer;\r\n  animation: ${opacityAnimation} linear 0.5s;\r\n\r\n  @media (min-width: ${widthWithoutMenuIcon}) {\r\n    display: none;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Header, Logo, Nav, MenuIcon, BackArrowIcon } from \"./Navigation.css\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\nexport const Navigation: React.FC = () => {\r\n  const [menuVisibility, setMenuVisibility] = useState(false);\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  const history = useHistory();\r\n\r\n  document.body.onresize = () => setWindowWidth(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    if (windowWidth >= 640) {\r\n      setMenuVisibility(false);\r\n    }\r\n  }, [windowWidth]);\r\n\r\n  return (\r\n    <Header>\r\n      {menuVisibility ? null : (\r\n        <Logo\r\n          onClick={() => {\r\n            if (history.location.pathname !== \"/\") history.push(\"/\");\r\n          }}\r\n        >\r\n          Badaj <span>ciśnienie</span>\r\n        </Logo>\r\n      )}\r\n      {menuVisibility || windowWidth >= 640 ? (\r\n        <>\r\n          <Nav>\r\n            <li>\r\n              <NavLink to=\"/\" exact>\r\n                Profile\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/measurements\">Pomiary</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/info\">Info</NavLink>\r\n            </li>\r\n          </Nav>\r\n          <BackArrowIcon\r\n            className=\"fas fa-long-arrow-alt-left back\"\r\n            onClick={() => setMenuVisibility(false)}\r\n          ></BackArrowIcon>\r\n        </>\r\n      ) : (\r\n        <MenuIcon\r\n          className=\"fas fa-ellipsis-v menu\"\r\n          onClick={() => setMenuVisibility(true)}\r\n        ></MenuIcon>\r\n      )}\r\n    </Header>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { COLORS, TRANSITION_TIME } from \"../../styles/variables\";\r\n\r\nexport const Bar = styled.div`\r\n  flex-shrink: 0;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  padding: 4px 0;\r\n  border-bottom: 2px solid ${COLORS.blue};\r\n  background-color: ${COLORS.white};\r\n  animation: show ${TRANSITION_TIME} linear both;\r\n\r\n  @keyframes show {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UserData = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-bottom: 5px;\r\n\r\n  @media (orientation: landscape) {\r\n    width: auto;\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  p {\r\n    font-size: 10px;\r\n\r\n    @media (min-width: 411px) {\r\n      font-size: 11px;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 12px;\r\n    }\r\n\r\n    span {\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PressureMin = styled.div`\r\n  p {\r\n    font-size: 10px;\r\n    color: ${COLORS.blue};\r\n\r\n    @media (min-width: 411px) {\r\n      font-size: 11px;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PressureNormal = styled.div`\r\n  p {\r\n    font-size: 10px;\r\n    color: ${COLORS.darkGreen};\r\n    font-weight: bold;\r\n\r\n    @media (min-width: 411px) {\r\n      font-size: 11px;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PressureMax = styled.div`\r\n  p {\r\n    font-size: 10px;\r\n    color: ${COLORS.red};\r\n\r\n    @media (min-width: 411px) {\r\n      font-size: 11px;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { IBloodPressureBasedOnAge } from \"../../common/interfaces\";\r\nimport {\r\n  Bar,\r\n  UserData,\r\n  PressureMin,\r\n  PressureNormal,\r\n  PressureMax,\r\n} from \"./UserPressureBar.css\";\r\n\r\nexport const UserPressureBar: React.FC<IProps> = ({\r\n  name,\r\n  age,\r\n  userBloodPressureBasedOnAge,\r\n}) => {\r\n  const { MIN, NORMAL, MAX } = userBloodPressureBasedOnAge;\r\n\r\n  return (\r\n    <Bar>\r\n      <UserData>\r\n        <p>\r\n          <span>{name}, </span>\r\n          wiek: {age}\r\n        </p>\r\n      </UserData>\r\n      <PressureMin>\r\n        <p>\r\n          MIN: {MIN.SYS}/{MIN.DIA}\r\n        </p>\r\n      </PressureMin>\r\n\r\n      <PressureNormal>\r\n        <p>\r\n          NORMA: {NORMAL.SYS}/{NORMAL.DIA}\r\n        </p>\r\n      </PressureNormal>\r\n\r\n      <PressureMax>\r\n        <p>\r\n          MAX: {MAX.SYS}/{MAX.DIA}\r\n        </p>\r\n      </PressureMax>\r\n    </Bar>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  name: string;\r\n  age: number;\r\n  userBloodPressureBasedOnAge: IBloodPressureBasedOnAge;\r\n}\r\n","export const ADD_PROFILE = \"ADD_PROFILE\";\r\nexport const DELETE_PROFILE = \"DELETE_PROFILE\";\r\n\r\nexport const SET_SELECTED_USER_ID = \"SET_SELECTED_USER_ID\";\r\n\r\nexport const ADD_PERIODIC_PRESSURE_TEST = \"ADD_PERIODIC_PRESSURE_TEST\";\r\nexport const DELETE_PERIODIC_PRESSURE_TEST = \"DELETE_PERIODIC_PRESSURE_TEST\";\r\n\r\nexport const EDIT_DAILY_VALUES = \"EDIT_DAILY_VALUES\";\r\nexport const SET_OMITTED_DAILY_TEST = \"SET_OMITTED_DAILY_TEST\";\r\nexport const UPDATE_NUMBER_OF_TOTAL_AND_DONE_TESTS_AND_STATE =\r\n  \"UPDATE_NUMBER_OF_TOTAL_AND_DONE_TESTS_AND_STATE\";\r\n\r\nexport const CALCULATE_AVERAGE_RESULTS = \"CALCULATE_AVERAGE_RESULTS\";\r\n","import {\r\n  ADD_PROFILE,\r\n  DELETE_PROFILE,\r\n  SET_SELECTED_USER_ID,\r\n  ADD_PERIODIC_PRESSURE_TEST,\r\n  DELETE_PERIODIC_PRESSURE_TEST,\r\n  EDIT_DAILY_VALUES,\r\n  SET_OMITTED_DAILY_TEST,\r\n  UPDATE_NUMBER_OF_TOTAL_AND_DONE_TESTS_AND_STATE,\r\n  CALCULATE_AVERAGE_RESULTS,\r\n} from \"./../types/\";\r\nimport { IUser, IPeriodicPressureTests } from \"./../../common/interfaces\";\r\nimport { TimeOfDayStates } from \"../../common/constants\";\r\n\r\nexport const addProfile = (newProfile: IUser) => ({\r\n  type: ADD_PROFILE,\r\n  newUser: newProfile,\r\n});\r\n\r\nexport const deleteProfile = (deletedProfileID: number) => ({\r\n  type: DELETE_PROFILE,\r\n  idToDelete: deletedProfileID,\r\n});\r\n\r\nexport const setSelectedUserID = (id: number) => ({\r\n  type: SET_SELECTED_USER_ID,\r\n  selectedUserID: id,\r\n});\r\n\r\nexport const addPeriodicPressureTest = (\r\n  userID: number,\r\n  newTest: IPeriodicPressureTests\r\n) => ({\r\n  type: ADD_PERIODIC_PRESSURE_TEST,\r\n  userID,\r\n  newPeriodicTest: newTest,\r\n});\r\n\r\nexport const deletePeriodicPressureTest = (\r\n  userID: number,\r\n  idToDelete: number\r\n) => ({ type: DELETE_PERIODIC_PRESSURE_TEST, userID, idToDelete });\r\n\r\nexport const editDailyValues = (\r\n  userID: number,\r\n  periodicID: number,\r\n  dailyID: number,\r\n  timeOfDay: TimeOfDayStates,\r\n  sys: number,\r\n  dia: number,\r\n  pulse: number\r\n) => ({\r\n  type: EDIT_DAILY_VALUES,\r\n  userID,\r\n  periodicID,\r\n  dailyID,\r\n  timeOfDay,\r\n  sys,\r\n  dia,\r\n  pulse,\r\n});\r\n\r\nexport const setOmittedDailyTest = (\r\n  userID: number,\r\n  periodicID: number,\r\n  dailyID: number,\r\n  timeOfDay: TimeOfDayStates,\r\n  omitted: boolean\r\n) => ({\r\n  type: SET_OMITTED_DAILY_TEST,\r\n  userID,\r\n  periodicID,\r\n  dailyID,\r\n  timeOfDay,\r\n  omitted,\r\n});\r\n\r\nexport const updateNumberOfTotalAndDoneTestsAndState = (\r\n  userID: number,\r\n  periodicID: number\r\n) => ({\r\n  type: UPDATE_NUMBER_OF_TOTAL_AND_DONE_TESTS_AND_STATE,\r\n  userID,\r\n  periodicID,\r\n});\r\n\r\nexport const calculateAverageResults = (\r\n  userID: number,\r\n  periodicID: number\r\n) => ({\r\n  type: CALCULATE_AVERAGE_RESULTS,\r\n  userID,\r\n  periodicID,\r\n});\r\n","import styled from \"styled-components\";\r\nimport {\r\n  COLORS,\r\n  TRANSITION_TIME,\r\n  CORNER_RADIUS,\r\n} from \"./../../../styles/variables\";\r\n\r\nexport const BasicButtonStyled = styled.button`\r\n  padding: 3px 10px;\r\n  color: ${COLORS.white};\r\n  font-size: 12px;\r\n  text-transform: uppercase;\r\n  background-color: ${COLORS.darkGray};\r\n  border: none;\r\n  border-radius: ${CORNER_RADIUS};\r\n  outline-style: none;\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    transition: ${TRANSITION_TIME};\r\n\r\n    :hover {\r\n      background-color: ${COLORS.gray};\r\n    }\r\n  }\r\n\r\n  :disabled {\r\n    background-color: ${COLORS.grayWithOpacity};\r\n    color: ${COLORS.lightGray};\r\n\r\n    @media (min-width: 1024px) {\r\n      cursor: no-drop;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { BasicButtonStyled } from \"./SharedBasicButton.css\";\r\n\r\nexport const SharedBasicButton: React.FC<IProps> = ({\r\n  onClick,\r\n  isDisabled,\r\n  children,\r\n}) => (\r\n  <BasicButtonStyled onClick={onClick} disabled={isDisabled}>\r\n    {children}\r\n  </BasicButtonStyled>\r\n);\r\n\r\ninterface IProps {\r\n  onClick: () => void;\r\n  isDisabled?: boolean;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { COLORS, TRANSITION_TIME } from \"../../../styles/variables\";\r\n\r\nexport const DeleteButtonStyled = styled.button`\r\n  background-color: ${COLORS.transparent};\r\n  border: none;\r\n  outline: none;\r\n\r\n  @media (min-width: 1024px) {\r\n    cursor: pointer;\r\n  }\r\n\r\n  i {\r\n    font-size: 16px;\r\n    color: ${COLORS.red};\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 18px;\r\n      transition: ${TRANSITION_TIME};\r\n\r\n      :hover {\r\n        transform: scale(1.3);\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { DeleteButtonStyled } from \"./SharedDeleteButton.css\";\r\n\r\nexport const SharedDeleteButton: React.FC<IProps> = ({ deleteFunction }) => (\r\n  <DeleteButtonStyled onClick={() => deleteFunction()}>\r\n    <i className=\"fas fa-trash\"></i>\r\n  </DeleteButtonStyled>\r\n);\r\n\r\ninterface IProps {\r\n  deleteFunction: () => void;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { COLORS, CORNER_RADIUS } from \"../variables\";\r\n\r\nexport const LiElement = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 90%;\r\n  margin-bottom: 20px;\r\n  padding: 10px;\r\n  list-style: none;\r\n  background-color: ${COLORS.lightGray};\r\n  border-radius: ${CORNER_RADIUS};\r\n  list-style: none;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { COLORS } from \"../../../styles/variables\";\r\nimport { LiElement } from \"./../../../styles/mixins/LiElement\";\r\n\r\nexport const Wrapper = styled(LiElement)``;\r\n\r\nexport const UserData = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 10px;\r\n  border-bottom: 2px solid ${COLORS.darkGray};\r\n\r\n  p {\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Options = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { SharedBasicButton } from \"../../Buttons/SharedBasicButton/SharedBasicButton\";\r\nimport { SharedDeleteButton } from \"../../Buttons/SharedDeleteButton/SharedDeleteButton\";\r\nimport { Wrapper, UserData, Options } from \"./UserProfile.css\";\r\n\r\nexport const UserProfile: React.FC<UserProfileProps> = ({\r\n  id,\r\n  name,\r\n  age,\r\n  deleteProfile,\r\n  selectUserID,\r\n}) => {\r\n  const history = useHistory();\r\n  return (\r\n    <Wrapper>\r\n      <UserData>\r\n        <p>{name}</p>\r\n        <p>wiek: {age}</p>\r\n      </UserData>\r\n      <Options>\r\n        <SharedBasicButton\r\n          onClick={() => {\r\n            selectUserID(id);\r\n            history.push(\"/measurements\");\r\n          }}\r\n        >\r\n          Otwórz profil\r\n        </SharedBasicButton>\r\n        <SharedDeleteButton deleteFunction={() => deleteProfile(id, name)} />\r\n      </Options>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\ninterface UserProfileProps {\r\n  id: number;\r\n  name: string;\r\n  age: number;\r\n  deleteProfile: (id: number, name: string) => void;\r\n  selectUserID: (id: number) => void;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { COLORS, CORNER_RADIUS } from \"./../variables\";\r\n\r\nexport const PopupWrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  border-radius: ${CORNER_RADIUS};\r\n  box-shadow: 0 0 5px ${COLORS.black};\r\n`;\r\n\r\nexport const PopupTitleGreen = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 5px 30px;\r\n  background-color: ${COLORS.green};\r\n  border-top-left-radius: ${CORNER_RADIUS};\r\n  border-top-right-radius: ${CORNER_RADIUS};\r\n\r\n  p {\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    color: ${COLORS.white};\r\n    text-transform: uppercase;\r\n\r\n    @media (min-width: 411px) {\r\n      font-size: 20px;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 22px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PopupTitleRed = styled(PopupTitleGreen)`\r\n  background-color: ${COLORS.red};\r\n`;\r\n\r\nexport const PopupTitleBlue = styled(PopupTitleGreen)`\r\n  background-color: ${COLORS.blue};\r\n`;\r\n\r\nexport const PopupContentWrapper = styled.div`\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 10px 15px;\r\n  background-color: ${COLORS.white};\r\n  border-bottom-left-radius: ${CORNER_RADIUS};\r\n  border-bottom-right-radius: ${CORNER_RADIUS};\r\n\r\n  p {\r\n    display: block;\r\n    width: 100%;\r\n    text-align: center;\r\n    color: ${COLORS.black};\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 18px;\r\n    }\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n\r\n  button {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nexport const PopupForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  div {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    width: 100%;\r\n    margin-top: 20px;\r\n\r\n    label {\r\n      margin-right: 10px;\r\n      font-size: 14px;\r\n\r\n      @media (min-width: 411px) {\r\n        font-size: 16px;\r\n      }\r\n\r\n      @media (min-width: 768px) {\r\n        font-size: 17px;\r\n      }\r\n    }\r\n\r\n    input {\r\n      height: 30px;\r\n      width: 60%;\r\n      padding: 5px;\r\n      border: none;\r\n      border-bottom: 3px solid ${COLORS.green};\r\n      outline-style: none;\r\n      font-size: 16px;\r\n      outline-offset: 0;\r\n\r\n      @media (min-width: 768px) {\r\n        font-size: 17px;\r\n      }\r\n\r\n      :focus {\r\n        border-bottom: 3px solid ${COLORS.orange};\r\n      }\r\n    }\r\n  }\r\n\r\n  .apply-button {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    width: 100%;\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nexport const PopupSelect = styled.select`\r\n  color: ${COLORS.black};\r\n  font-size: 16px;\r\n  outline-style: none;\r\n  border: none;\r\n  border-bottom: 3px solid ${COLORS.green};\r\n  cursor: pointer;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 17px;\r\n  }\r\n\r\n  :focus {\r\n    font-weight: bold;\r\n    border-bottom: 3px solid ${COLORS.orange};\r\n  }\r\n`;\r\n\r\nexport const PopupSelectOption = styled.option`\r\n  font-size: 12px;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { PopupForm } from \"./../../../styles/mixins/Popups\";\r\n\r\nexport const FormStyled = styled(PopupForm)`\r\n  align-items: flex-start;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport {\r\n  COLORS,\r\n  TRANSITION_TIME,\r\n  CORNER_RADIUS,\r\n} from \"./../../../styles/variables\";\r\n\r\nexport const ApplyButtonStyled = styled.button`\r\n  padding: 5px 10px;\r\n  background-color: ${COLORS.green};\r\n  border: none;\r\n  border-radius: ${CORNER_RADIUS};\r\n  cursor: pointer;\r\n  transition: ${TRANSITION_TIME};\r\n  color: ${COLORS.white};\r\n  outline: none;\r\n\r\n  @media (min-width: 1024px) {\r\n    :hover {\r\n      background-color: ${COLORS.darkGreen};\r\n    }\r\n  }\r\n\r\n  :focus {\r\n    box-shadow: 0 0 5px ${COLORS.gray};\r\n  }\r\n\r\n  i {\r\n    font-weight: bold;\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 18px;\r\n    }\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ApplyButtonStyled } from \"./SharedApplyButton.css\";\r\n\r\nexport enum SharedApplyButtonType {\r\n  submit = \"submit\",\r\n  basic = \"button\",\r\n}\r\n\r\nexport const SharedApplyButton: React.FC<IProps> = ({\r\n  type = SharedApplyButtonType.basic,\r\n  setIsOpen,\r\n  getResponse,\r\n  submitFunction,\r\n}) => (\r\n  <ApplyButtonStyled\r\n    onClick={(e) => {\r\n      if (setIsOpen) setIsOpen(false);\r\n      if (getResponse) getResponse(true);\r\n      if (submitFunction) submitFunction(e);\r\n    }}\r\n    type={type}\r\n  >\r\n    <i className=\"fas fa-check\"></i>\r\n  </ApplyButtonStyled>\r\n);\r\n\r\ninterface IProps {\r\n  type?: SharedApplyButtonType;\r\n  setIsOpen?: React.Dispatch<React.SetStateAction<boolean>>;\r\n  getResponse?: (res: boolean) => void;\r\n  submitFunction?: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { ApplyButtonStyled } from \"../SharedApplyButton/SharedApplyButton.css\";\r\nimport { COLORS } from \"../../../styles/variables\";\r\n\r\nexport const DenyButtonStyled = styled(ApplyButtonStyled)`\r\n  padding: 5px 12px;\r\n  background-color: ${COLORS.red};\r\n\r\n  @media (min-width: 1024px) {\r\n    :hover {\r\n      background-color: ${COLORS.darkRed};\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { DenyButtonStyled } from \"./SharedDenyButton.css\";\r\n\r\nexport const SharedDenyButton: React.FC<IProps> = ({\r\n  setIsOpen,\r\n  getResponse,\r\n}) => (\r\n  <DenyButtonStyled\r\n    onClick={() => {\r\n      if (setIsOpen) setIsOpen(false);\r\n      if (getResponse) getResponse(false);\r\n    }}\r\n  >\r\n    <i className=\"fas fa-times\"></i>\r\n  </DenyButtonStyled>\r\n);\r\n\r\ninterface IProps {\r\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  getResponse?: (res: boolean) => void;\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const BtnWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-top: 10px;\r\n`;\r\n","import { IPeriodicPressureTests, IUser } from \"./interfaces\";\r\n\r\nexport enum PeriodicTestStates {\r\n  DONE = \"Zakończono\",\r\n  IN_PROGRESS = \"W realizacji\",\r\n}\r\n\r\nexport enum TimeOfDayStates {\r\n  MORNING = \"Rano\",\r\n  EVENING = \"Wieczór\",\r\n}\r\n\r\nexport const MAX_SYS_DIA_PULSE_VALUE = 250;\r\nexport const NAME_MAX_CHARS = 15;\r\nexport const MAX_AGE = 150;\r\n\r\nexport const emptyPeriodicTest: IPeriodicPressureTests = {\r\n  id: 0,\r\n  start: \"\",\r\n  end: \"\",\r\n  days: 0,\r\n  state: \"\",\r\n  totalNumberOfTests: 0,\r\n  numberOfTestsDone: 0,\r\n  averageResults: {\r\n    morning: {\r\n      SYS: 0,\r\n      DIA: 0,\r\n      PULSE: 0,\r\n    },\r\n    evening: {\r\n      SYS: 0,\r\n      DIA: 0,\r\n      PULSE: 0,\r\n    },\r\n    total: {\r\n      SYS: 0,\r\n      DIA: 0,\r\n      PULSE: 0,\r\n    },\r\n  },\r\n  list: [],\r\n};\r\n\r\nexport const anonymous: IUser = {\r\n  id: -1,\r\n  name: \"Anonim\",\r\n  age: 0,\r\n  userBloodPressureBasedOnAge: {\r\n    MIN: { SYS: 0, DIA: 0 },\r\n    NORMAL: { SYS: 0, DIA: 0 },\r\n    MAX: { SYS: 0, DIA: 0 },\r\n  },\r\n  nextAvailablePeriodicTestID: 0,\r\n  periodicPressureTests: [],\r\n};\r\n\r\nexport const TEST_VALUES_INFO = {\r\n  SYS:\r\n    \"SYS (Systole) - oznacza ciśnienie skurczowe, wartość przed ukośnikiem. Przykładowo w wyniku 120/70, wartość 120 będzie wartością SYS.\",\r\n  DIA:\r\n    \"DIA (Diastole) - oznacza ciśnienie rozkurczowe, wartość po ukośniku. Przykładowo w wyniku 120/70, wartość 70 będzie wartością DIA.\",\r\n  PULSE:\r\n    \"PULS (Tętno) - mierząc puls, określamy liczbę uderzeń serca w ciągu jednej minuty.\",\r\n};\r\n","import React from \"react\";\r\nimport { SharedApplyButton } from \"../../Buttons/SharedApplyButton/SharedApplyButton\";\r\nimport { SharedDenyButton } from \"../../Buttons/SharedDenyButton/SharedDenyButton\";\r\nimport {\r\n  PopupWrapper,\r\n  PopupTitleRed,\r\n  PopupContentWrapper,\r\n} from \"./../../../styles/mixins/Popups\";\r\nimport { BtnWrapper } from \"./Warnings.css\";\r\n\r\nexport const Warnings: React.FC<IProps> = ({ message, setIsOpen }) => (\r\n  <PopupWrapper>\r\n    <PopupTitleRed>\r\n      <p>Uwaga!</p>\r\n    </PopupTitleRed>\r\n    <PopupContentWrapper>\r\n      <p>{message}</p>\r\n      <SharedApplyButton setIsOpen={setIsOpen} />\r\n    </PopupContentWrapper>\r\n  </PopupWrapper>\r\n);\r\n\r\nexport const WarningsYesNo: React.FC<IPropsYesNo> = ({\r\n  message,\r\n  setIsOpen,\r\n  response,\r\n}) => (\r\n  <PopupWrapper>\r\n    <PopupTitleRed>\r\n      <p>Uwaga!</p>\r\n    </PopupTitleRed>\r\n    <PopupContentWrapper>\r\n      <p>{message}</p>\r\n      <BtnWrapper>\r\n        <SharedDenyButton setIsOpen={setIsOpen} getResponse={response} />\r\n        <SharedApplyButton setIsOpen={setIsOpen} getResponse={response} />\r\n      </BtnWrapper>\r\n    </PopupContentWrapper>\r\n  </PopupWrapper>\r\n);\r\n\r\ninterface IProps {\r\n  message: string;\r\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\ninterface IPropsYesNo extends IProps {\r\n  response: (res: boolean) => void;\r\n}\r\n","import { IBloodPressureBasedOnAge } from \"./interfaces\";\r\n\r\nexport const bloodPressureTable: bloodPressure[] = [\r\n  {\r\n    age: 1,\r\n    MIN: {\r\n      SYS: 75,\r\n      DIA: 50,\r\n    },\r\n    NORMAL: {\r\n      SYS: 90,\r\n      DIA: 60,\r\n    },\r\n    MAX: {\r\n      SYS: 110,\r\n      DIA: 75,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 5,\r\n    MIN: {\r\n      SYS: 70,\r\n      DIA: 85,\r\n    },\r\n    NORMAL: {\r\n      SYS: 95,\r\n      DIA: 65,\r\n    },\r\n    MAX: {\r\n      SYS: 110,\r\n      DIA: 79,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 13,\r\n    MIN: {\r\n      SYS: 90,\r\n      DIA: 60,\r\n    },\r\n    NORMAL: {\r\n      SYS: 105,\r\n      DIA: 70,\r\n    },\r\n    MAX: {\r\n      SYS: 115,\r\n      DIA: 80,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 19,\r\n    MIN: {\r\n      SYS: 105,\r\n      DIA: 73,\r\n    },\r\n    NORMAL: {\r\n      SYS: 117,\r\n      DIA: 77,\r\n    },\r\n    MAX: {\r\n      SYS: 120,\r\n      DIA: 81,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 24,\r\n    MIN: {\r\n      SYS: 107,\r\n      DIA: 75,\r\n    },\r\n    NORMAL: {\r\n      SYS: 120,\r\n      DIA: 79,\r\n    },\r\n    MAX: {\r\n      SYS: 132,\r\n      DIA: 83,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 29,\r\n    MIN: {\r\n      SYS: 109,\r\n      DIA: 76,\r\n    },\r\n    NORMAL: {\r\n      SYS: 121,\r\n      DIA: 80,\r\n    },\r\n    MAX: {\r\n      SYS: 133,\r\n      DIA: 84,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 34,\r\n    MIN: {\r\n      SYS: 110,\r\n      DIA: 77,\r\n    },\r\n    NORMAL: {\r\n      SYS: 122,\r\n      DIA: 81,\r\n    },\r\n    MAX: {\r\n      SYS: 134,\r\n      DIA: 85,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 39,\r\n    MIN: {\r\n      SYS: 111,\r\n      DIA: 78,\r\n    },\r\n    NORMAL: {\r\n      SYS: 123,\r\n      DIA: 82,\r\n    },\r\n    MAX: {\r\n      SYS: 135,\r\n      DIA: 86,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 44,\r\n    MIN: {\r\n      SYS: 112,\r\n      DIA: 79,\r\n    },\r\n    NORMAL: {\r\n      SYS: 125,\r\n      DIA: 83,\r\n    },\r\n    MAX: {\r\n      SYS: 137,\r\n      DIA: 87,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 49,\r\n    MIN: {\r\n      SYS: 115,\r\n      DIA: 80,\r\n    },\r\n    NORMAL: {\r\n      SYS: 127,\r\n      DIA: 84,\r\n    },\r\n    MAX: {\r\n      SYS: 139,\r\n      DIA: 88,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 54,\r\n    MIN: {\r\n      SYS: 116,\r\n      DIA: 81,\r\n    },\r\n    NORMAL: {\r\n      SYS: 129,\r\n      DIA: 85,\r\n    },\r\n    MAX: {\r\n      SYS: 142,\r\n      DIA: 89,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 59,\r\n    MIN: {\r\n      SYS: 118,\r\n      DIA: 82,\r\n    },\r\n    NORMAL: {\r\n      SYS: 131,\r\n      DIA: 86,\r\n    },\r\n    MAX: {\r\n      SYS: 144,\r\n      DIA: 90,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 64,\r\n    MIN: {\r\n      SYS: 121,\r\n      DIA: 83,\r\n    },\r\n    NORMAL: {\r\n      SYS: 134,\r\n      DIA: 87,\r\n    },\r\n    MAX: {\r\n      SYS: 147,\r\n      DIA: 91,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 65,\r\n    MIN: {\r\n      SYS: 123,\r\n      DIA: 85,\r\n    },\r\n    NORMAL: {\r\n      SYS: 135,\r\n      DIA: 88,\r\n    },\r\n    MAX: {\r\n      SYS: 148,\r\n      DIA: 94,\r\n    },\r\n  },\r\n];\r\n\r\nexport const findUserBloodPressureBasedOnAge = (age: number) =>\r\n  bloodPressureTable.find((bloodTable) => {\r\n    if (age <= bloodTable.age) {\r\n      return bloodTable;\r\n    }\r\n    return bloodTable.age === 65;\r\n  });\r\n\r\ninterface bloodPressure extends IBloodPressureBasedOnAge {\r\n  age: number;\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const PortalBG = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 999;\r\n  background-color: rgba(255, 255, 255, 0.4);\r\n`;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport { PortalBG } from \"./Portal.css\";\r\n\r\nexport enum PortalTarget {\r\n  MODAL = \"modal-portal\",\r\n  ROOT = \"root\",\r\n}\r\n\r\nexport const Portal: React.FC<IProps> = ({ target, children }) => {\r\n  const domElement = document.getElementById(target);\r\n\r\n  return domElement\r\n    ? ReactDom.createPortal(<PortalBG>{children}</PortalBG>, domElement)\r\n    : null;\r\n};\r\n\r\ninterface IProps {\r\n  target: PortalTarget;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { COLORS, TRANSITION_TIME } from \"../../../styles/variables\";\r\n\r\nexport const ExitButtonStyled = styled.button`\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n  background-color: ${COLORS.transparent};\r\n  border: none;\r\n  outline: none;\r\n\r\n  @media (min-width: 1024px) {\r\n    cursor: pointer;\r\n  }\r\n\r\n  i {\r\n    font-size: 14px;\r\n    color: ${COLORS.white};\r\n\r\n    @media (min-width: 411px) {\r\n      font-size: 15px;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 16px;\r\n    }\r\n\r\n    @media (min-width: 1024px) {\r\n      transition: ${TRANSITION_TIME};\r\n\r\n      :hover {\r\n        color: ${COLORS.darkGray};\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ExitButtonStyled } from \"./SharedExitButton.css\";\r\n\r\nexport const SharedExitButton: React.FC<IProps> = ({ setIsOpen }) => (\r\n  <ExitButtonStyled onClick={() => setIsOpen(false)}>\r\n    <i className=\"fas fa-times-circle\"></i>\r\n  </ExitButtonStyled>\r\n);\r\n\r\ninterface IProps {\r\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  PopupWrapper,\r\n  PopupContentWrapper,\r\n  PopupTitleGreen,\r\n} from \"./../../../styles/mixins/Popups\";\r\nimport { FormStyled } from \"./AddUser.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IGlobalState, IUser } from \"./../../../common/interfaces\";\r\nimport { Warnings } from \"./../../Popups/Warnings/Warnings\";\r\nimport { addProfile } from \"./../../../store/actions/profilesAction\";\r\nimport { findUserBloodPressureBasedOnAge } from \"./../../../common/bloodPressureTable\";\r\nimport { anonymous } from \"./../../../common/constants\";\r\nimport { Portal, PortalTarget } from \"./../../../common/Portal/Portal\";\r\nimport { SharedExitButton } from \"../../Buttons/SharedExitButton/SharedExitButton\";\r\nimport {\r\n  SharedApplyButton,\r\n  SharedApplyButtonType,\r\n} from \"../../Buttons/SharedApplyButton/SharedApplyButton\";\r\nimport { NAME_MAX_CHARS, MAX_AGE } from \"./../../../common/constants\";\r\n\r\nexport const AddUser: React.FC<IProps> = ({ setIsOpenAddUserPopup }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const profiles = useSelector((state: IGlobalState) => state.profiles);\r\n  const { nextAvailableUserID } = profiles;\r\n  const [isOpenPortal, setIsOpenPortal] = useState(false);\r\n  const [popup, setPopup] = useState(Object);\r\n\r\n  const handleSubmit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault();\r\n    const parsedAge = parseInt(age);\r\n\r\n    if (name === \"\" || age === \"\") {\r\n      setPopup(\r\n        <Warnings\r\n          message=\"Uzupełnij wszystkie pola.\"\r\n          setIsOpen={setIsOpenPortal}\r\n        />\r\n      );\r\n      setIsOpenPortal(true);\r\n    } else if (name.length >= NAME_MAX_CHARS) {\r\n      setPopup(\r\n        <Warnings\r\n          message={`Podane imię jest za długie. (max ${NAME_MAX_CHARS} znaków)`}\r\n          setIsOpen={setIsOpenPortal}\r\n        />\r\n      );\r\n      setIsOpenPortal(true);\r\n    } else if (parsedAge < 0) {\r\n      setPopup(\r\n        <Warnings\r\n          message=\"Wiek nie może być wartością ujemną.\"\r\n          setIsOpen={setIsOpenPortal}\r\n        />\r\n      );\r\n      setIsOpenPortal(true);\r\n    } else if (parsedAge > MAX_AGE) {\r\n      setPopup(\r\n        <Warnings\r\n          message={`Wiek zbyt duży. (max ${MAX_AGE})`}\r\n          setIsOpen={setIsOpenPortal}\r\n        />\r\n      );\r\n      setIsOpenPortal(true);\r\n    } else if (/\\D/gi.test(age)) {\r\n      setPopup(\r\n        <Warnings\r\n          message=\"Wiek posiada niepoprawną wartość.\"\r\n          setIsOpen={setIsOpenPortal}\r\n        />\r\n      );\r\n      setIsOpenPortal(true);\r\n    } else {\r\n      const getUserBloodPressure =\r\n        findUserBloodPressureBasedOnAge(parsedAge) ||\r\n        anonymous.userBloodPressureBasedOnAge;\r\n\r\n      const newProfile: IUser = {\r\n        id: nextAvailableUserID,\r\n        name: name,\r\n        age: parsedAge,\r\n        userBloodPressureBasedOnAge: {\r\n          MIN: getUserBloodPressure?.MIN,\r\n          NORMAL: getUserBloodPressure?.NORMAL,\r\n          MAX: getUserBloodPressure?.MAX,\r\n        },\r\n        nextAvailablePeriodicTestID: 1,\r\n        periodicPressureTests: [],\r\n      };\r\n      setName(\"\");\r\n      setAge(\"\");\r\n      dispatch(addProfile(newProfile));\r\n      setIsOpenAddUserPopup(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PopupWrapper>\r\n      <PopupTitleGreen>\r\n        <p>Nowy profil</p>\r\n      </PopupTitleGreen>\r\n      <PopupContentWrapper>\r\n        <FormStyled>\r\n          <div>\r\n            <label htmlFor=\"name\">Imię: </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"age\">Wiek: </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"age\"\r\n              value={age}\r\n              onChange={(e) => setAge(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"apply-button\">\r\n            <SharedApplyButton\r\n              type={SharedApplyButtonType.submit}\r\n              submitFunction={handleSubmit}\r\n            />\r\n          </div>\r\n        </FormStyled>\r\n      </PopupContentWrapper>\r\n      <SharedExitButton setIsOpen={setIsOpenAddUserPopup} />\r\n      {isOpenPortal ? (\r\n        <Portal target={PortalTarget.MODAL}>{popup}</Portal>\r\n      ) : null}\r\n    </PopupWrapper>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  setIsOpenAddUserPopup: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { COLORS, CORNER_RADIUS } from \"../variables\";\r\n\r\nexport const Fieldset = styled.fieldset`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 5px;\r\n  border: 2px solid ${COLORS.gray};\r\n  border-radius: ${CORNER_RADIUS};\r\n  overflow: hidden;\r\n\r\n  ul {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    flex-wrap: nowrap;\r\n    height: 100%;\r\n    margin: 10px 0;\r\n    overflow: auto;\r\n  }\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n  padding: 0 5px;\r\n  font-size: 16px;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  color: ${COLORS.darkGray};\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n  }\r\n\r\n  span {\r\n    color: ${COLORS.blue};\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Fieldset } from \"../../styles/mixins/Fieldset\";\r\n\r\nexport const ProfilesSelectorStyled = styled(Fieldset)`\r\n  width: 90%;\r\n  height: 70%;\r\n\r\n  @media (orientation: landscape) {\r\n    width: 70%;\r\n    height: 80%;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    width: 45%;\r\n    height: 70%;\r\n  }\r\n\r\n  @media (min-width: 768px) and (orientation: portrait) {\r\n    width: 45%;\r\n    height: 60%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 40%;\r\n    height: 75%;\r\n  }\r\n\r\n  ul {\r\n    height: 80%;\r\n\r\n    @media (orientation: landscape) {\r\n      height: 75%;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      height: 85%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UsersWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 80%;\r\n  padding: 10px;\r\n  overflow: auto;\r\n\r\n  @media (orientation: landscape) {\r\n    height: 75%;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    height: 85%;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/BG.1eeb38f6.jpg\";","import styled from \"styled-components\";\r\nimport { COLORS, CORNER_RADIUS } from \"./../../styles/variables\";\r\n\r\nexport const PageWrapperStyled = styled.div`\r\n  flex-grow: 1;\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: ${COLORS.white};\r\n  border-bottom-left-radius: ${CORNER_RADIUS};\r\n  border-bottom-right-radius: ${CORNER_RADIUS};\r\n  overflow: hidden;\r\n  z-index: 1;\r\n\r\n  img {\r\n    position: absolute;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    opacity: 0.15;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport BackGround from \"./../../images/BG.jpg\";\r\nimport { PageWrapperStyled } from \"./SharedPageWrapper.css\";\r\n\r\nexport const SharedPageWrapper: React.FC = ({ children }) => (\r\n  <PageWrapperStyled>\r\n    <img src={BackGround} alt=\"Sphygmomanometer\" />\r\n    {children}\r\n  </PageWrapperStyled>\r\n);\r\n","import styled from \"styled-components\";\r\nimport {\r\n  COLORS,\r\n  CORNER_RADIUS,\r\n  TRANSITION_TIME,\r\n} from \"./../../../styles/variables\";\r\n\r\nexport const AddButtonStyled = styled.button`\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 10px;\r\n  background-color: ${COLORS.transparent};\r\n  border: 2px solid ${COLORS.transparent};\r\n  border-radius: 50%;\r\n  outline-style: none;\r\n\r\n  @media (min-width: 411px) and (orientation: landscape) {\r\n    bottom: 10px;\r\n    right: 10px;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    bottom: 10px;\r\n    right: 10px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    bottom: 10px;\r\n    right: 20px;\r\n    cursor: pointer;\r\n\r\n    :hover > div {\r\n      display: block;\r\n      animation: move ${TRANSITION_TIME} both;\r\n\r\n      @keyframes move {\r\n        from {\r\n          right: 0;\r\n          opacity: 0;\r\n        }\r\n        to {\r\n          right: 105%;\r\n          opacity: 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  :focus {\r\n    border: 2px solid ${COLORS.orange};\r\n  }\r\n\r\n  :disabled {\r\n    :hover > div {\r\n      display: none;\r\n      animation: none;\r\n    }\r\n\r\n    i {\r\n      color: ${COLORS.gray};\r\n\r\n      :hover {\r\n        color: ${COLORS.gray};\r\n      }\r\n    }\r\n\r\n    @media (min-width: 1024px) {\r\n      cursor: no-drop;\r\n    }\r\n  }\r\n\r\n  div {\r\n    display: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 0;\r\n    padding: 5px 10px;\r\n    transform: translateY(-50%);\r\n    background-color: ${COLORS.blue};\r\n    border-radius: ${CORNER_RADIUS};\r\n\r\n    p {\r\n      font-size: 12px;\r\n      font-weight: bold;\r\n      white-space: nowrap;\r\n      color: ${COLORS.white};\r\n    }\r\n  }\r\n\r\n  i {\r\n    font-size: 30px;\r\n    color: ${COLORS.green};\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 40px;\r\n      transition: ${TRANSITION_TIME};\r\n\r\n      :hover {\r\n        color: ${COLORS.darkGreen};\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { AddButtonStyled } from \"./SharedAddButton.css\";\r\n\r\nexport const SharedAddButton: React.FC<IProps> = ({\r\n  addFunction,\r\n  hoverDescription,\r\n  disabled,\r\n}) => (\r\n  <AddButtonStyled onClick={() => addFunction()} disabled={disabled}>\r\n    <div>\r\n      <p>{hoverDescription}</p>\r\n    </div>\r\n    <i className=\"fas fa-plus-circle\"></i>\r\n  </AddButtonStyled>\r\n);\r\n\r\ninterface IProps {\r\n  addFunction: () => void;\r\n  hoverDescription: string;\r\n  disabled?: boolean;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  deleteProfile,\r\n  setSelectedUserID,\r\n} from \"./../../store/actions/profilesAction\";\r\nimport { UserProfile } from \"./UserProfile/UserProfile\";\r\nimport { AddUser } from \"./../Popups/AddUser/AddUser\";\r\nimport { WarningsYesNo } from \"./../Popups/Warnings/Warnings\";\r\nimport { Portal, PortalTarget } from \"./../../common/Portal/Portal\";\r\nimport { IGlobalState } from \"./../../common/interfaces\";\r\nimport { ProfilesSelectorStyled } from \"./ProfilesSelector.css\";\r\nimport { SharedPageWrapper } from \"./../SharedPageWrapper/SharedPageWrapper\";\r\nimport { Legend } from \"./../../styles/mixins/Fieldset\";\r\nimport { SharedAddButton } from \"../Buttons/SharedAddButton/SharedAddButton\";\r\n\r\nexport const ProfilesSelector: React.FC = () => {\r\n  const [isOpenPortal, setIsOpenPortal] = useState(false);\r\n  const [popup, setPopup] = useState<Object>({});\r\n  const users = useSelector((state: IGlobalState) => state.profiles.users);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDeleteProfile = (id: number, name: string) => {\r\n    setPopup(\r\n      <WarningsYesNo\r\n        message={`Usunąć użytkownika ${name}?`}\r\n        setIsOpen={setIsOpenPortal}\r\n        response={(res: boolean) => res && dispatch(deleteProfile(id))}\r\n      />\r\n    );\r\n    setIsOpenPortal(true);\r\n  };\r\n\r\n  const handleAddNewProfile = () => {\r\n    setPopup(<AddUser setIsOpenAddUserPopup={setIsOpenPortal} />);\r\n    setIsOpenPortal(true);\r\n  };\r\n\r\n  const handleSelectUserID = (id: number) => dispatch(setSelectedUserID(id));\r\n\r\n  const renderUsers =\r\n    users.map(({ id, name, age }) => (\r\n      <UserProfile\r\n        key={id}\r\n        id={id}\r\n        name={name}\r\n        age={age}\r\n        deleteProfile={handleDeleteProfile}\r\n        selectUserID={handleSelectUserID}\r\n      />\r\n    )) || [];\r\n\r\n  const legendTitle = renderUsers.length\r\n    ? \"Użytkownicy\"\r\n    : \"Dodaj pierwszego użytkownika\";\r\n\r\n  return (\r\n    <SharedPageWrapper>\r\n      <ProfilesSelectorStyled>\r\n        <Legend>{legendTitle}</Legend>\r\n        <ul>{renderUsers}</ul>\r\n        <SharedAddButton\r\n          addFunction={handleAddNewProfile}\r\n          hoverDescription={\"Dodaj nowego użytkownika\"}\r\n        />\r\n      </ProfilesSelectorStyled>\r\n      {isOpenPortal ? (\r\n        <Portal target={PortalTarget.MODAL}>{popup}</Portal>\r\n      ) : null}\r\n    </SharedPageWrapper>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { PopupForm } from \"./../../../styles/mixins/Popups\";\r\n\r\nexport const FormStyled = styled(PopupForm)`\r\n  align-items: flex-start;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addPeriodicPressureTest } from \"./../../../store/actions/profilesAction\";\r\nimport { numRangeOptions } from \"./../../../common/optionsForSelectTag\";\r\nimport {\r\n  generateDateArray,\r\n  generateDailyTestList,\r\n} from \"./AddPeriodicTestFunctions\";\r\nimport { PeriodicTestStates } from \"./../../../common/constants\";\r\nimport { SharedExitButton } from \"../../Buttons/SharedExitButton/SharedExitButton\";\r\nimport {\r\n  PopupWrapper,\r\n  PopupContentWrapper,\r\n  PopupTitleGreen,\r\n  PopupSelect,\r\n} from \"./../../../styles/mixins/Popups\";\r\nimport { FormStyled } from \"./AddPeriodicTest.css\";\r\nimport {\r\n  SharedApplyButton,\r\n  SharedApplyButtonType,\r\n} from \"../../Buttons/SharedApplyButton/SharedApplyButton\";\r\n\r\nconst today = new Date();\r\n\r\nexport const AddPeriodicTest: React.FC<IProps> = ({\r\n  userID,\r\n  nextAvailablePeriodicTestID,\r\n  setIsOpenAddPeriodicTestPopup,\r\n}) => {\r\n  const [startDay, setStartDay] = useState(today.toISOString().slice(0, 10));\r\n  const [days, setDays] = useState(4);\r\n  const dispatch = useDispatch();\r\n  const renderOptionsDays = numRangeOptions(1, 7);\r\n\r\n  const handleSubmit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault();\r\n    const getDateArray = generateDateArray(startDay, days);\r\n    const getDailyTestList = generateDailyTestList(getDateArray);\r\n    const newPeriodicTest = {\r\n      id: nextAvailablePeriodicTestID,\r\n      start: getDateArray[0],\r\n      end: getDateArray[getDateArray.length - 1],\r\n      days: days,\r\n      state: PeriodicTestStates.IN_PROGRESS,\r\n      totalNumberOfTests: days * 2,\r\n      numberOfTestsDone: 0,\r\n      averageResults: {\r\n        morning: {\r\n          SYS: 0,\r\n          DIA: 0,\r\n          PULSE: 0,\r\n        },\r\n        evening: {\r\n          SYS: 0,\r\n          DIA: 0,\r\n          PULSE: 0,\r\n        },\r\n        total: {\r\n          SYS: 0,\r\n          DIA: 0,\r\n          PULSE: 0,\r\n        },\r\n      },\r\n      list: getDailyTestList,\r\n    };\r\n    dispatch(addPeriodicPressureTest(userID, newPeriodicTest));\r\n    setIsOpenAddPeriodicTestPopup(false);\r\n  };\r\n\r\n  return (\r\n    <PopupWrapper>\r\n      <PopupTitleGreen>\r\n        <p>Nowy pomiar okresowy</p>\r\n      </PopupTitleGreen>\r\n      <PopupContentWrapper>\r\n        <FormStyled>\r\n          <div>\r\n            <label htmlFor=\"dateStart\">Start: </label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"dateStart\"\r\n              value={startDay}\r\n              onChange={(e) => setStartDay(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"days\">Ilość dni: </label>\r\n            <PopupSelect\r\n              value={days}\r\n              id=\"days\"\r\n              onChange={(e) => setDays(Number(e.target.value))}\r\n            >\r\n              {renderOptionsDays}\r\n            </PopupSelect>\r\n          </div>\r\n          <div className=\"apply-button\">\r\n            <SharedApplyButton\r\n              type={SharedApplyButtonType.submit}\r\n              submitFunction={handleSubmit}\r\n            />\r\n          </div>\r\n        </FormStyled>\r\n      </PopupContentWrapper>\r\n      <SharedExitButton setIsOpen={setIsOpenAddPeriodicTestPopup} />\r\n    </PopupWrapper>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  userID: number;\r\n  nextAvailablePeriodicTestID: number;\r\n  setIsOpenAddPeriodicTestPopup: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n","import { PopupSelectOption } from \"./../styles/mixins/Popups\";\r\n\r\nexport const numRangeOptions = (minValue: number, maxValue: number) => {\r\n  let numbers = [];\r\n\r\n  for (let i = minValue; i <= maxValue; i++) {\r\n    numbers.push(i);\r\n  }\r\n\r\n  return numbers.map((item) => (\r\n    <PopupSelectOption key={item} value={item}>\r\n      {item}\r\n    </PopupSelectOption>\r\n  ));\r\n};\r\n\r\nexport const elementsListOptions = (elementsList: any[]) => {\r\n  let elements = [];\r\n\r\n  for (let i = 0; i < elementsList.length; i++) {\r\n    elements.push(elementsList[i]);\r\n  }\r\n\r\n  return elements.map((item) => (\r\n    <PopupSelectOption key={item} value={item}>\r\n      {item}\r\n    </PopupSelectOption>\r\n  ));\r\n};\r\n","import { TimeOfDayStates } from \"./../../../common/constants\";\r\nimport { IDailyTest } from \"./../../../common/interfaces\";\r\n\r\nexport const generateDateArray = (startDashDate: string, numOfDays: number) => {\r\n  const arrDate = startDashDate.split(\"-\");\r\n  const year = Number(arrDate[0]);\r\n  const month = Number(arrDate[1]);\r\n  const day = Number(arrDate[2]);\r\n  const dateList = [];\r\n  for (let i = 0; i < numOfDays; i++) {\r\n    const date = Date.UTC(year, month - 1, day + i, 0, 0, 0);\r\n    let dateWithDots = new Intl.DateTimeFormat(\"pl\").format(date);\r\n    if (dateWithDots[1] === \".\") dateWithDots = `0${dateWithDots}`;\r\n    dateList.push(dateWithDots);\r\n  }\r\n  return dateList;\r\n};\r\n\r\nexport const generateDailyTestList = (dateList: string[]) => {\r\n  const itemList: IDailyTest[] = dateList.map((date, index) => ({\r\n    id: index + 1,\r\n    date: date,\r\n    morning: {\r\n      timeOfDay: TimeOfDayStates.MORNING,\r\n      omitted: false,\r\n      SYS: 0,\r\n      DIA: 0,\r\n      PULSE: 0,\r\n    },\r\n    evening: {\r\n      timeOfDay: TimeOfDayStates.EVENING,\r\n      omitted: false,\r\n      SYS: 0,\r\n      DIA: 0,\r\n      PULSE: 0,\r\n    },\r\n  }));\r\n  return itemList;\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Fieldset } from \"./../../../styles/mixins/Fieldset\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 15px;\r\n  opacity: 0.95;\r\n  overflow: hidden;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 70%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 60%;\r\n  }\r\n`;\r\n\r\nexport const FieldsetStyled = styled(Fieldset)`\r\n  padding-bottom: 15px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { COLORS } from \"../../../../styles/variables\";\r\nimport { LiElement } from \"./../../../../styles/mixins/LiElement\";\r\n\r\nexport const Wrapper = styled(LiElement)`\r\n  @media (orientation: landscape) {\r\n    width: 55%;\r\n  }\r\n\r\n  @media (orientation: landscape) and (min-width: 768px) {\r\n    width: 45%;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  margin-bottom: 10px;\r\n  font-size: 16px;\r\n  color: ${COLORS.black};\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 18px;\r\n  }\r\n\r\n  span {\r\n    font-size: 18px;\r\n    color: ${COLORS.blue};\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Subtitle = styled.div`\r\n  margin-bottom: 5px;\r\n  padding: 4px 10px;\r\n  border-bottom: 2px solid ${COLORS.blue};\r\n  border-top: 2px solid ${COLORS.blue};\r\n\r\n  p {\r\n    color: ${COLORS.black};\r\n    font-size: 12px;\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 14px;\r\n    }\r\n    span {\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Info = styled.p`\r\n  font-size: 12px;\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 14px;\r\n  }\r\n\r\n  span {\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nexport const Btns = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin-top: 10px;\r\n  width: 90%;\r\n`;\r\n","import React from \"react\";\r\nimport { IPeriodicPressureTests } from \"../../../../common/interfaces\";\r\nimport { SharedBasicButton } from \"./../../../Buttons/SharedBasicButton/SharedBasicButton\";\r\nimport { SharedDeleteButton } from \"../../../Buttons/SharedDeleteButton/SharedDeleteButton\";\r\nimport { Wrapper, Title, Subtitle, Info, Btns } from \"./PeriodicTest.css\";\r\n\r\nexport const PeriodicTest: React.FC<IProps> = ({\r\n  test,\r\n  openPeriodicTestDetails,\r\n  deletePeriodicTest,\r\n}) => {\r\n  const {\r\n    id,\r\n    start,\r\n    end,\r\n    days,\r\n    state,\r\n    totalNumberOfTests,\r\n    numberOfTestsDone,\r\n  } = test;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>\r\n        Pomiar okresowy <span>#{id}</span>\r\n      </Title>\r\n      <Subtitle>\r\n        <p>\r\n          od <span>{start}</span> do <span>{end}</span>\r\n        </p>\r\n      </Subtitle>\r\n\r\n      <Info>\r\n        Ilość dni: <span>{days}</span>\r\n      </Info>\r\n\r\n      <Info>\r\n        Wykonane testy: <span>{numberOfTestsDone}</span>/\r\n        <span>{totalNumberOfTests}</span>\r\n      </Info>\r\n\r\n      <Info>\r\n        Status: <span>{state}</span>\r\n      </Info>\r\n\r\n      <Btns>\r\n        <SharedBasicButton onClick={() => openPeriodicTestDetails(id)}>\r\n          Szczegóły...\r\n        </SharedBasicButton>\r\n        <SharedDeleteButton deleteFunction={() => deletePeriodicTest(id)} />\r\n      </Btns>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  test: IPeriodicPressureTests;\r\n  openPeriodicTestDetails: (id: number) => void;\r\n  deletePeriodicTest: (id: number) => void;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { AddPeriodicTest } from \"../../Popups/AddPeriodicTest/AddPeriodicTest\";\r\nimport { IPeriodicPressureTests } from \"../../../common/interfaces\";\r\nimport { Portal, PortalTarget } from \"../../../common/Portal/Portal\";\r\nimport { Wrapper, FieldsetStyled } from \"./PeriodicTestsList.css\";\r\nimport { PeriodicTest } from \"./PeriodicTest/PeriodicTest\";\r\nimport { Legend } from \"./../../../styles/mixins/Fieldset\";\r\nimport { SharedAddButton } from \"../../Buttons/SharedAddButton/SharedAddButton\";\r\nimport { deletePeriodicPressureTest } from \"./../../../store/actions/profilesAction\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { WarningsYesNo } from \"./../../Popups/Warnings/Warnings\";\r\n\r\nexport const PeriodicTestsList: React.FC<IProps> = ({\r\n  userID,\r\n  tests,\r\n  nextAvailablePeriodicTestID,\r\n  openPeriodicTestDetails,\r\n}) => {\r\n  const [isOpenPortal, setIsOpenPortal] = useState(false);\r\n  const [popup, setPopup] = useState<Object>({});\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDeletePeriodicTest = (id: number) => {\r\n    setIsOpenPortal(true);\r\n    setPopup(\r\n      <WarningsYesNo\r\n        message={`Usunąć pomiar okresowy #${id}?`}\r\n        setIsOpen={setIsOpenPortal}\r\n        response={(res: boolean) =>\r\n          res && dispatch(deletePeriodicPressureTest(userID, id))\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleAddPeriodicTest = () => {\r\n    setPopup(\r\n      <AddPeriodicTest\r\n        userID={userID}\r\n        nextAvailablePeriodicTestID={nextAvailablePeriodicTestID}\r\n        setIsOpenAddPeriodicTestPopup={setIsOpenPortal}\r\n      />\r\n    );\r\n    setIsOpenPortal(true);\r\n  };\r\n\r\n  const renderPeriodicTests =\r\n    tests.map((test) => (\r\n      <PeriodicTest\r\n        key={test.id}\r\n        test={test}\r\n        openPeriodicTestDetails={openPeriodicTestDetails}\r\n        deletePeriodicTest={handleDeletePeriodicTest}\r\n      />\r\n    )) || [];\r\n\r\n  const legendTitle =\r\n    userID === -1\r\n      ? \"Brak użytkownika\"\r\n      : renderPeriodicTests.length\r\n      ? \"Twoje pomiary okresowe\"\r\n      : \"Dodaj swój pierwszy pomiar\";\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FieldsetStyled>\r\n        <Legend>{legendTitle}</Legend>\r\n        <ul>{renderPeriodicTests}</ul>\r\n        <SharedAddButton\r\n          addFunction={handleAddPeriodicTest}\r\n          hoverDescription={\"Dodaj nowy pomiar\"}\r\n          disabled={userID === -1}\r\n        />\r\n        {isOpenPortal ? (\r\n          <Portal target={PortalTarget.MODAL}>{popup}</Portal>\r\n        ) : null}\r\n      </FieldsetStyled>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  userID: number;\r\n  nextAvailablePeriodicTestID: number;\r\n  tests: IPeriodicPressureTests[];\r\n  openPeriodicTestDetails: (id: number) => void;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { PopupForm } from \"./../../../styles/mixins/Popups\";\r\n\r\nexport const FormStyled = styled(PopupForm)`\r\n  div {\r\n    justify-content: center;\r\n\r\n    input {\r\n      width: 30%;\r\n\r\n      @media (min-width: 1024px) {\r\n        width: 35%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { IUser } from \"../../../common/interfaces\";\r\nimport {\r\n  TimeOfDayStates,\r\n  MAX_SYS_DIA_PULSE_VALUE,\r\n} from \"./../../../common/constants\";\r\n\r\nexport const getDailyTimeOfDayTestValues = (\r\n  users: IUser[],\r\n  userID: number,\r\n  periodicID: number,\r\n  dailyID: number,\r\n  timeOfDay: TimeOfDayStates\r\n) => {\r\n  let testValues: {\r\n    timeOfDay: TimeOfDayStates;\r\n    omitted: boolean;\r\n    SYS: number;\r\n    DIA: number;\r\n    PULSE: number;\r\n  } = {\r\n    timeOfDay: TimeOfDayStates.MORNING,\r\n    omitted: false,\r\n    SYS: 0,\r\n    DIA: 0,\r\n    PULSE: 0,\r\n  };\r\n\r\n  users.forEach((user) => {\r\n    if (user.id === userID) {\r\n      user.periodicPressureTests.forEach((periodicTest) => {\r\n        if (periodicTest.id === periodicID) {\r\n          periodicTest.list.forEach((test) => {\r\n            if (test.id === dailyID && test.morning.timeOfDay === timeOfDay) {\r\n              testValues = test.morning;\r\n            } else if (\r\n              test.id === dailyID &&\r\n              test.evening.timeOfDay === timeOfDay\r\n            ) {\r\n              testValues = test.evening;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  const { SYS, DIA, PULSE } = testValues;\r\n  const sysValue = SYS !== 0 ? SYS.toString() : \"\";\r\n  const diaValue = DIA !== 0 ? DIA.toString() : \"\";\r\n  const pulseValue = PULSE !== 0 ? PULSE.toString() : \"\";\r\n\r\n  return {\r\n    currentSys: sysValue,\r\n    currentDia: diaValue,\r\n    currentPulse: pulseValue,\r\n  };\r\n};\r\n\r\nexport enum ValidateStateTypes {\r\n  notEnough = \"notEnough\",\r\n  tooMuch = \"tooMuch\",\r\n  badSign = \"badSign\",\r\n  correct = \"correct\",\r\n}\r\n\r\nexport const validateValues = (\r\n  sys: string,\r\n  dia: string,\r\n  pulse: string\r\n): IValidateValues => {\r\n  if (Number(sys) < 0 || Number(dia) < 0 || Number(pulse) < 0) {\r\n    return {\r\n      state: ValidateStateTypes.notEnough,\r\n      message: \"Conajmniej jedno pole zawiera ujemną wartość.\",\r\n    };\r\n  } else if (\r\n    Number(sys) > MAX_SYS_DIA_PULSE_VALUE ||\r\n    Number(dia) > MAX_SYS_DIA_PULSE_VALUE ||\r\n    Number(pulse) > MAX_SYS_DIA_PULSE_VALUE\r\n  ) {\r\n    return {\r\n      state: ValidateStateTypes.tooMuch,\r\n      message: `Conajmniej jedno pole zawiera zbyt dużą wartość. (max ${MAX_SYS_DIA_PULSE_VALUE})`,\r\n    };\r\n  } else if (\r\n    /\\D/gi.test(sys) ||\r\n    /\\D/gi.test(dia) ||\r\n    /\\D/gi.test(pulse) ||\r\n    sys === \"\" ||\r\n    dia === \"\" ||\r\n    pulse === \"\"\r\n  ) {\r\n    return {\r\n      state: ValidateStateTypes.badSign,\r\n      message: \"Conajmniej jedno pole ma nieprawidłową wartość.\",\r\n    };\r\n  }\r\n  return {\r\n    state: ValidateStateTypes.correct,\r\n    message: \"\",\r\n  };\r\n};\r\n\r\ninterface IValidateValues {\r\n  state: ValidateStateTypes;\r\n  message: string;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { PopupWrapper } from \"../../../styles/mixins/Popups\";\r\n\r\nexport const Wrapper = styled(PopupWrapper)`\r\n  max-width: 80%;\r\n\r\n  @media (min-width: 768px) {\r\n    max-width: 45%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SharedApplyButton } from \"../../Buttons/SharedApplyButton/SharedApplyButton\";\r\nimport {\r\n  PopupTitleBlue,\r\n  PopupContentWrapper,\r\n} from \"../../../styles/mixins/Popups\";\r\nimport { Wrapper } from \"./Information.css\";\r\n\r\nexport const Information: React.FC<IProps> = ({ message, setIsOpen }) => (\r\n  <Wrapper>\r\n    <PopupTitleBlue>\r\n      <p>Informacja</p>\r\n    </PopupTitleBlue>\r\n    <PopupContentWrapper>\r\n      <p>{message}</p>\r\n      <SharedApplyButton setIsOpen={setIsOpen} />\r\n    </PopupContentWrapper>\r\n  </Wrapper>\r\n);\r\n\r\ninterface IProps {\r\n  message: string;\r\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { COLORS, TRANSITION_TIME } from \"../../../styles/variables\";\r\n\r\nexport const InfoButtonStyled = styled.button`\r\n  margin-left: 10px;\r\n  background-color: ${COLORS.transparent};\r\n  border: none;\r\n  outline: none;\r\n\r\n  @media (min-width: 1024px) {\r\n    cursor: pointer;\r\n  }\r\n\r\n  i {\r\n    font-size: 14px;\r\n    color: ${COLORS.darkGray};\r\n\r\n    @media (min-width: 411px) {\r\n      font-size: 15px;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 19px;\r\n    }\r\n\r\n    @media (min-width: 1024px) {\r\n      transition: ${TRANSITION_TIME};\r\n\r\n      :hover {\r\n        color: ${COLORS.gray};\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  PopupWrapper,\r\n  PopupTitleGreen,\r\n  PopupContentWrapper,\r\n} from \"./../../../styles/mixins/Popups\";\r\nimport { FormStyled } from \"./EditDailyTest.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Warnings } from \"./../../Popups/Warnings/Warnings\";\r\nimport {\r\n  editDailyValues,\r\n  updateNumberOfTotalAndDoneTestsAndState,\r\n} from \"./../../../store/actions/profilesAction\";\r\nimport { TimeOfDayStates, TEST_VALUES_INFO } from \"./../../../common/constants\";\r\nimport { Portal, PortalTarget } from \"./../../../common/Portal/Portal\";\r\nimport { SharedExitButton } from \"../../Buttons/SharedExitButton/SharedExitButton\";\r\nimport {\r\n  SharedApplyButton,\r\n  SharedApplyButtonType,\r\n} from \"../../Buttons/SharedApplyButton/SharedApplyButton\";\r\nimport { IGlobalState } from \"../../../common/interfaces\";\r\nimport {\r\n  getDailyTimeOfDayTestValues,\r\n  validateValues,\r\n  ValidateStateTypes,\r\n} from \"./EditDailyTestFunctions\";\r\nimport { SharedInfoButton } from \"../../Buttons/SharedInfoButton/SharedInfoButton\";\r\nimport { Information } from \"../Information/Information\";\r\n\r\nenum SysDiaPulse {\r\n  SYS = \"SYS\",\r\n  DIA = \"DIA\",\r\n  PULSE = \"PULSE\",\r\n}\r\n\r\nexport const EditDailyTest: React.FC<IProps> = ({\r\n  userID,\r\n  periodicID,\r\n  dailyID,\r\n  timeOfDay,\r\n  setIsOpenEditDailyTestPopup,\r\n  date,\r\n}) => {\r\n  const users = useSelector((state: IGlobalState) => state.profiles.users);\r\n  const currentTestValuesToRender = getDailyTimeOfDayTestValues(\r\n    users,\r\n    userID,\r\n    periodicID,\r\n    dailyID,\r\n    timeOfDay\r\n  );\r\n  const { currentSys, currentDia, currentPulse } = currentTestValuesToRender;\r\n  const [sys, setSys] = useState(currentSys);\r\n  const [dia, setDia] = useState(currentDia);\r\n  const [pulse, setPulse] = useState(currentPulse);\r\n  const [isOpenPortal, setIsOpenPortal] = useState(false);\r\n  const [popup, setPopup] = useState(Object);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault();\r\n    const checkValues = validateValues(sys, dia, pulse);\r\n    if (checkValues.state === ValidateStateTypes.notEnough) {\r\n      setPopup(\r\n        <Warnings message={checkValues.message} setIsOpen={setIsOpenPortal} />\r\n      );\r\n      setIsOpenPortal(true);\r\n    } else if (checkValues.state === ValidateStateTypes.tooMuch) {\r\n      setPopup(\r\n        <Warnings message={checkValues.message} setIsOpen={setIsOpenPortal} />\r\n      );\r\n      setIsOpenPortal(true);\r\n    } else if (checkValues.state === ValidateStateTypes.badSign) {\r\n      setPopup(\r\n        <Warnings message={checkValues.message} setIsOpen={setIsOpenPortal} />\r\n      );\r\n      setIsOpenPortal(true);\r\n    } else if (checkValues.state === ValidateStateTypes.correct) {\r\n      dispatch(\r\n        editDailyValues(\r\n          userID,\r\n          periodicID,\r\n          dailyID,\r\n          timeOfDay,\r\n          Number(sys),\r\n          Number(dia),\r\n          Number(pulse)\r\n        )\r\n      );\r\n      dispatch(updateNumberOfTotalAndDoneTestsAndState(userID, periodicID));\r\n      setIsOpenEditDailyTestPopup(false);\r\n    }\r\n  };\r\n\r\n  const handleShowInfo = (messageType: SysDiaPulse) => {\r\n    let messageToShow = \"\";\r\n\r\n    switch (messageType) {\r\n      case SysDiaPulse.SYS: {\r\n        messageToShow = TEST_VALUES_INFO.SYS;\r\n        break;\r\n      }\r\n      case SysDiaPulse.DIA: {\r\n        messageToShow = TEST_VALUES_INFO.DIA;\r\n        break;\r\n      }\r\n      case SysDiaPulse.PULSE: {\r\n        messageToShow = TEST_VALUES_INFO.PULSE;\r\n        break;\r\n      }\r\n    }\r\n    setPopup(\r\n      <Information message={messageToShow} setIsOpen={setIsOpenPortal} />\r\n    );\r\n    setIsOpenPortal(true);\r\n  };\r\n\r\n  return (\r\n    <PopupWrapper>\r\n      <PopupTitleGreen>\r\n        <p>{`${\r\n          timeOfDay === TimeOfDayStates.MORNING\r\n            ? TimeOfDayStates.MORNING\r\n            : TimeOfDayStates.EVENING\r\n        } ${date}`}</p>\r\n      </PopupTitleGreen>\r\n      <PopupContentWrapper>\r\n        <FormStyled>\r\n          <div>\r\n            <label htmlFor=\"sys\">SYS: </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"sys\"\r\n              value={sys}\r\n              onChange={(e) => setSys(e.target.value)}\r\n              autoFocus\r\n            />\r\n            <SharedInfoButton onClick={() => handleShowInfo(SysDiaPulse.SYS)} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"dia\">DIA: </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"dia\"\r\n              value={dia}\r\n              onChange={(e) => setDia(e.target.value)}\r\n            />\r\n            <SharedInfoButton onClick={() => handleShowInfo(SysDiaPulse.DIA)} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"pulse\">PULS: </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"pulse\"\r\n              value={pulse}\r\n              onChange={(e) => setPulse(e.target.value)}\r\n            />\r\n            <SharedInfoButton\r\n              onClick={() => handleShowInfo(SysDiaPulse.PULSE)}\r\n            />\r\n          </div>\r\n          <div className=\"apply-button\">\r\n            <SharedApplyButton\r\n              type={SharedApplyButtonType.submit}\r\n              submitFunction={handleSubmit}\r\n            />\r\n          </div>\r\n        </FormStyled>\r\n      </PopupContentWrapper>\r\n      <SharedExitButton setIsOpen={setIsOpenEditDailyTestPopup} />\r\n      {isOpenPortal ? (\r\n        <Portal target={PortalTarget.MODAL}>{popup}</Portal>\r\n      ) : null}\r\n    </PopupWrapper>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  userID: number;\r\n  periodicID: number;\r\n  dailyID: number;\r\n  timeOfDay: TimeOfDayStates;\r\n  setIsOpenEditDailyTestPopup: React.Dispatch<React.SetStateAction<boolean>>;\r\n  date: string;\r\n}\r\n","import React from \"react\";\r\nimport {} from \"./../../Popups/Information/Information\";\r\nimport { InfoButtonStyled } from \"./SharedInfoButton.css\";\r\n\r\nexport const SharedInfoButton: React.FC<IProps> = ({ onClick }) => (\r\n  <InfoButtonStyled\r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      onClick();\r\n    }}\r\n  >\r\n    <i className=\"fas fa-info-circle\"></i>\r\n  </InfoButtonStyled>\r\n);\r\n\r\ninterface IProps {\r\n  onClick: Function;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { Fieldset, Legend } from \"./../../../../styles/mixins/Fieldset\";\r\nimport { LiElement } from \"./../../../../styles/mixins/LiElement\";\r\nimport { COLORS } from \"../../../../styles/variables\";\r\n\r\nexport const Wrapper = styled(LiElement)`\r\n  @media (orientation: landscape) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 50%;\r\n  }\r\n\r\n  h4 {\r\n    text-align: center;\r\n    padding: 5px 0;\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 19px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FieldsetStyled = styled(Fieldset)`\r\n  margin-bottom: 10px;\r\n  border-color: ${({ sys, dia, pulse }: IProps) =>\r\n    sys > 0 && dia > 0 && pulse > 0 ? COLORS.darkGreen : COLORS.red} !important;\r\n  border-color: ${({ omitted }: IProps) =>\r\n    omitted ? COLORS.gray : \"\"} !important;\r\n`;\r\n\r\nexport const MorningEvening = styled(Legend)`\r\n  p {\r\n    color: ${({ sys, dia, pulse }: IProps) =>\r\n      sys > 0 && dia > 0 && pulse > 0 ? COLORS.darkGreen : COLORS.red};\r\n    color: ${({ omitted }: IProps) => (omitted ? COLORS.gray : \"\")} !important;\r\n  }\r\n`;\r\n\r\nexport const SysDiaPuls = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  width: 100%;\r\n\r\n  p {\r\n    span {\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SysAndDiaColored = styled.span`\r\n  color: ${(props: { color: string }) => props.color};\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const Btns = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  width: 100%;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\ninterface IProps {\r\n  sys: number;\r\n  dia: number;\r\n  pulse: number;\r\n  omitted?: boolean;\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { anonymous } from \"../../../../common/constants\";\r\nimport { IDailyTest, IGlobalState } from \"../../../../common/interfaces\";\r\nimport { COLORS } from \"../../../../styles/variables\";\r\nimport { SharedBasicButton } from \"../../../Buttons/SharedBasicButton/SharedBasicButton\";\r\nimport {\r\n  FieldsetStyled,\r\n  MorningEvening as MorningEveningStyled,\r\n  SysDiaPuls,\r\n  SysAndDiaColored,\r\n  Btns,\r\n} from \"./DailyTest.css\";\r\n\r\nenum sysDiaType {\r\n  SYS = \"SYS\",\r\n  DIA = \"DIA\",\r\n}\r\n\r\nexport const MorningEveningDetails: React.FC<IProps> = ({\r\n  userID,\r\n  dailyTest,\r\n  timeOfDayType,\r\n  editDailyTest,\r\n  setOmittedDaily,\r\n}) => {\r\n  const { id, date } = dailyTest;\r\n  const userBloodPressureBasedOnAge = useSelector(\r\n    (state: IGlobalState) =>\r\n      state.profiles.users.find((user) => userID === user.id)\r\n        ?.userBloodPressureBasedOnAge\r\n  );\r\n  const { MIN, MAX } =\r\n    userBloodPressureBasedOnAge || anonymous.userBloodPressureBasedOnAge;\r\n\r\n  const getSysDiaColor = (value: number, type: sysDiaType) => {\r\n    if (value === 0) return COLORS.black;\r\n    else if (\r\n      (value <= MIN.SYS && type === sysDiaType.SYS) ||\r\n      (value <= MIN.DIA && type === sysDiaType.DIA)\r\n    )\r\n      return COLORS.blue;\r\n    else if (\r\n      (value >= MAX.SYS && type === sysDiaType.SYS) ||\r\n      (value >= MAX.DIA && type === sysDiaType.DIA)\r\n    )\r\n      return COLORS.red;\r\n    return COLORS.darkGreen;\r\n  };\r\n\r\n  return (\r\n    <FieldsetStyled\r\n      sys={dailyTest[timeOfDayType].SYS}\r\n      dia={dailyTest[timeOfDayType].DIA}\r\n      pulse={dailyTest[timeOfDayType].PULSE}\r\n      omitted={dailyTest[timeOfDayType].omitted}\r\n    >\r\n      <MorningEveningStyled\r\n        sys={dailyTest[timeOfDayType].SYS}\r\n        dia={dailyTest[timeOfDayType].DIA}\r\n        pulse={dailyTest[timeOfDayType].PULSE}\r\n        omitted={dailyTest[timeOfDayType].omitted}\r\n      >\r\n        <p>{dailyTest[timeOfDayType].timeOfDay}</p>\r\n      </MorningEveningStyled>\r\n      <SysDiaPuls>\r\n        <p>\r\n          Ciśnienie:{\" \"}\r\n          <SysAndDiaColored\r\n            color={\r\n              dailyTest[timeOfDayType].omitted\r\n                ? COLORS.gray\r\n                : getSysDiaColor(dailyTest[timeOfDayType].SYS, sysDiaType.SYS)\r\n            }\r\n          >\r\n            {dailyTest[timeOfDayType].SYS}\r\n          </SysAndDiaColored>\r\n          /\r\n          <SysAndDiaColored\r\n            color={\r\n              dailyTest[timeOfDayType].omitted\r\n                ? COLORS.gray\r\n                : getSysDiaColor(dailyTest[timeOfDayType].DIA, sysDiaType.DIA)\r\n            }\r\n          >\r\n            {dailyTest[timeOfDayType].DIA}\r\n          </SysAndDiaColored>\r\n        </p>\r\n        <p>\r\n          Puls: <span>{dailyTest[timeOfDayType].PULSE}</span>\r\n        </p>\r\n      </SysDiaPuls>\r\n      <Btns>\r\n        <SharedBasicButton\r\n          onClick={() =>\r\n            editDailyTest(id, dailyTest[timeOfDayType].timeOfDay, date)\r\n          }\r\n          isDisabled={dailyTest[timeOfDayType].omitted}\r\n        >\r\n          Edytuj\r\n        </SharedBasicButton>\r\n        <SharedBasicButton\r\n          onClick={() =>\r\n            setOmittedDaily(\r\n              id,\r\n              dailyTest[timeOfDayType].timeOfDay,\r\n              !dailyTest[timeOfDayType].omitted\r\n            )\r\n          }\r\n        >\r\n          {dailyTest[timeOfDayType].omitted ? \"Przywróć\" : \"Pomiń\"}\r\n        </SharedBasicButton>\r\n      </Btns>\r\n    </FieldsetStyled>\r\n  );\r\n};\r\n\r\nexport enum timeOfDayType {\r\n  morning = \"morning\",\r\n  evenign = \"evening\",\r\n}\r\n\r\ninterface IProps {\r\n  userID: number;\r\n  dailyTest: IDailyTest;\r\n  timeOfDayType: timeOfDayType;\r\n  editDailyTest: Function;\r\n  setOmittedDaily: Function;\r\n}\r\n","import React from \"react\";\r\nimport { IDailyTest } from \"./../../../../common/interfaces\";\r\nimport { MorningEveningDetails, timeOfDayType } from \"./MorningEveningDetails\";\r\nimport { Wrapper } from \"./DailyTest.css\";\r\n\r\nexport const DailyTest: React.FC<IProps> = ({\r\n  userID,\r\n  dailyTest,\r\n  editDailyTest,\r\n  setOmittedDaily,\r\n}) => {\r\n  const { id, date } = dailyTest;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <h4>\r\n        Dzień {id} - (<span>{date}</span>)\r\n      </h4>\r\n\r\n      <MorningEveningDetails\r\n        userID={userID}\r\n        dailyTest={dailyTest}\r\n        timeOfDayType={timeOfDayType.morning}\r\n        editDailyTest={editDailyTest}\r\n        setOmittedDaily={setOmittedDaily}\r\n      />\r\n\r\n      <MorningEveningDetails\r\n        userID={userID}\r\n        dailyTest={dailyTest}\r\n        timeOfDayType={timeOfDayType.evenign}\r\n        editDailyTest={editDailyTest}\r\n        setOmittedDaily={setOmittedDaily}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  userID: number;\r\n  dailyTest: IDailyTest;\r\n  editDailyTest: Function;\r\n  setOmittedDaily: Function;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { Fieldset } from \"./../../../styles/mixins/Fieldset\";\r\nimport { COLORS, TRANSITION_TIME } from \"./../../../styles/variables\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 15px;\r\n  opacity: 0.95;\r\n  overflow: hidden;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 70%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 60%;\r\n  }\r\n`;\r\n\r\nexport const FieldsetStyled = styled(Fieldset)`\r\n  padding-bottom: 40px;\r\n`;\r\n\r\nexport const ControlPanel = styled.div`\r\n  display: flex;\r\n  padding: 5px 5px 0;\r\n\r\n  .buttons-wapper {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    width: 100%;\r\n\r\n    button {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const BackArrow = styled.button`\r\n  justify-self: flex-start;\r\n  background-color: transparent;\r\n  border: none;\r\n  outline: none;\r\n\r\n  i {\r\n    font-size: 28px;\r\n    color: ${COLORS.orange};\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 30px;\r\n      cursor: pointer;\r\n      transition: ${TRANSITION_TIME};\r\n      :hover {\r\n        color: ${COLORS.darkGray};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// export const SummaryBtn = styled(GrayButton)`\r\n//   margin-left: auto;\r\n// `;\r\n\r\n// export const PdfBtn = styled(GrayButton)`\r\n//   margin-left: 10px;\r\n// `;\r\n","import styled from \"styled-components\";\r\nimport { Fieldset } from \"./../../../styles/mixins/Fieldset\";\r\nimport { PopupContentWrapper } from \"./../../../styles/mixins/Popups\";\r\n\r\nexport const Content = styled(PopupContentWrapper)`\r\n  justify-content: center;\r\n  flex-direction: column;\r\n\r\n  h1 {\r\n    font-size: 18px;\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 22px;\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FieldsetStyled = styled(Fieldset)`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex-wrap: nowrap;\r\n  margin-bottom: 10px;\r\n\r\n  @media (min-width: 768px) {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  p {\r\n    margin: 5px 15px;\r\n    font-size: 14px;\r\n    white-space: nowrap;\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 16px;\r\n    }\r\n\r\n    span {\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SysAndDiaColored = styled.span`\r\n  color: ${(props: { color: string }) => props.color};\r\n  font-weight: bold;\r\n`;\r\n","import React from \"react\";\r\nimport { sysDiaType } from \"./AverageResults\";\r\nimport { Legend } from \"./../../../styles/mixins/Fieldset\";\r\nimport { FieldsetStyled, SysAndDiaColored } from \"./AverageResults.css\";\r\n\r\nexport enum resultNameType {\r\n  morninig = \"morning\",\r\n  evening = \"evening\",\r\n  total = \"total\",\r\n}\r\n\r\nexport const ResultsInFieldset: React.FC<IProps> = ({\r\n  timeOfDayName,\r\n  averageResults,\r\n  resultName,\r\n  getSysDiaColor,\r\n}) => (\r\n  <FieldsetStyled>\r\n    <Legend>{timeOfDayName}</Legend>\r\n    <p>\r\n      Ciśnienie:{\" \"}\r\n      <SysAndDiaColored\r\n        color={getSysDiaColor(averageResults[resultName].SYS, sysDiaType.SYS)}\r\n      >\r\n        {averageResults[resultName].SYS}\r\n      </SysAndDiaColored>\r\n      /\r\n      <SysAndDiaColored\r\n        color={getSysDiaColor(averageResults[resultName].DIA, sysDiaType.DIA)}\r\n      >\r\n        {averageResults[resultName].DIA}\r\n      </SysAndDiaColored>\r\n    </p>\r\n    <p>\r\n      PULS: <span>{averageResults[resultName].PULSE}</span>\r\n    </p>\r\n  </FieldsetStyled>\r\n);\r\n\r\ninterface IProps {\r\n  timeOfDayName: string;\r\n  averageResults: {\r\n    morning: {\r\n      SYS: number;\r\n      DIA: number;\r\n      PULSE: number;\r\n    };\r\n    evening: { SYS: number; DIA: number; PULSE: number };\r\n    total: { SYS: number; DIA: number; PULSE: number };\r\n  };\r\n  resultName: resultNameType;\r\n  getSysDiaColor: Function;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/OpenSans-Regular.1b0809d5.ttf\";","export default __webpack_public_path__ + \"static/media/OpenSans-Bold.dbb97fd9.ttf\";","import { StyleSheet, Font } from \"@react-pdf/renderer\";\r\nimport OpenSansRegular from \"./PDF_Fonts/OpenSans-Regular.ttf\";\r\nimport OpenSansBold from \"./PDF_Fonts/OpenSans-Bold.ttf\";\r\nimport { COLORS } from \"../../styles/variables\";\r\n\r\nFont.register({\r\n  family: \"OpenSansRegular\",\r\n  src: OpenSansRegular,\r\n});\r\n\r\nFont.register({\r\n  family: \"OpenSansBold\",\r\n  src: OpenSansBold,\r\n});\r\n\r\nexport const styles = StyleSheet.create({\r\n  page: {\r\n    flexDirection: \"column\",\r\n    padding: 15,\r\n    fontFamily: \"OpenSansRegular\",\r\n    backgroundColor: COLORS.white,\r\n    color: COLORS.black,\r\n  },\r\n  logoView: {\r\n    padding: \"5 15\",\r\n    marginBottom: 5,\r\n    backgroundColor: COLORS.blue,\r\n  },\r\n  logoText: {\r\n    fontSize: 18,\r\n    fontFamily: \"OpenSansBold\",\r\n    color: COLORS.white,\r\n  },\r\n  userDataView: {\r\n    padding: \"5 10\",\r\n  },\r\n  periodicTestInfoView: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 30,\r\n    marginBottom: 20,\r\n    padding: \"5 10\",\r\n  },\r\n  periodicText: {\r\n    fontSize: 14,\r\n    fontFamily: \"OpenSansBold\",\r\n  },\r\n  tableHeaderView: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    padding: \"5 0\",\r\n    marginBottom: 5,\r\n    backgroundColor: COLORS.blue,\r\n  },\r\n  tableHeaderText: {\r\n    width: \"33%\",\r\n    fontSize: 12,\r\n    textAlign: \"center\",\r\n    fontFamily: \"OpenSansBold\",\r\n    color: COLORS.white,\r\n  },\r\n  tableContentView: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    padding: \"5 0\",\r\n    marginBottom: 5,\r\n    borderBottomWidth: 1,\r\n    borderBottomStyle: \"solid\",\r\n    borderBottomColor: COLORS.darkGray,\r\n    backgroundColor: COLORS.white,\r\n  },\r\n  tableContentText: {\r\n    width: \"33%\",\r\n    fontSize: 12,\r\n    textAlign: \"center\",\r\n  },\r\n  averageTitleView: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 30,\r\n    padding: \"5 10\",\r\n  },\r\n  averageTitleText: {\r\n    fontSize: 14,\r\n    fontFamily: \"OpenSansBold\",\r\n  },\r\n  freeSpaceView: {\r\n    flexGrow: 1,\r\n  },\r\n  footerView: {\r\n    padding: \"5 10\",\r\n    marginTop: 10,\r\n    borderTopWidth: 1,\r\n    borderTopStyle: \"solid\",\r\n    borderTopColor: COLORS.darkGray,\r\n  },\r\n  fotterText: {\r\n    fontSize: 9,\r\n    textAlign: \"center\",\r\n  },\r\n  normalText: {\r\n    fontSize: 11,\r\n  },\r\n  boldText: {\r\n    fontSize: 11,\r\n    fontFamily: \"OpenSansBold\",\r\n  },\r\n});\r\n","import { View, Text } from \"@react-pdf/renderer\";\r\nimport { COLORS } from \"../../../styles/variables\";\r\nimport { styles } from \"./../PdfPage.styles\";\r\n\r\nenum PropNames {\r\n  morning = \"morning\",\r\n  evening = \"evening\",\r\n  total = \"total\",\r\n}\r\n\r\nexport const AverageResultsView = ({ averageResults }: IProps) => {\r\n  const getAverage = (prop: PropNames) => {\r\n    return (\r\n      <>\r\n        <Text style={styles.boldText}>{averageResults[prop].SYS}</Text>\r\n        <Text>/</Text>\r\n        <Text style={styles.boldText}>\r\n          {averageResults[prop].DIA}\r\n        </Text> Puls: {averageResults[prop].PULSE}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderAverageMorning = getAverage(PropNames.morning);\r\n  const renderAverageEvening = getAverage(PropNames.evening);\r\n  const renderAverageTotal = getAverage(PropNames.total);\r\n\r\n  const renderAllAverageResults = (\r\n    <View style={styles.tableContentView}>\r\n      <Text style={{ ...styles.tableContentText, color: COLORS.blue }}>\r\n        {renderAverageTotal}\r\n      </Text>\r\n      <Text style={styles.tableContentText}>{renderAverageMorning}</Text>\r\n      <Text style={styles.tableContentText}>{renderAverageEvening}</Text>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.averageTitleView}>\r\n        <Text style={styles.averageTitleText}>ŚREDNIE WYNIKI</Text>\r\n      </View>\r\n      <View style={styles.tableHeaderView}>\r\n        <Text style={styles.tableHeaderText}>ŁĄCZNIE</Text>\r\n        <Text style={styles.tableHeaderText}>RANO</Text>\r\n        <Text style={styles.tableHeaderText}>WIECZÓR</Text>\r\n      </View>\r\n      {renderAllAverageResults}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  averageResults: {\r\n    morning: {\r\n      SYS: number;\r\n      DIA: number;\r\n      PULSE: number;\r\n    };\r\n    evening: {\r\n      SYS: number;\r\n      DIA: number;\r\n      PULSE: number;\r\n    };\r\n    total: {\r\n      SYS: number;\r\n      DIA: number;\r\n      PULSE: number;\r\n    };\r\n  };\r\n}\r\n","import { View, Text } from \"@react-pdf/renderer\";\r\nimport { COLORS } from \"./../../../styles/variables\";\r\nimport { styles } from \"./../PdfPage.styles\";\r\n\r\nexport const LogoView = () => (\r\n  <View style={styles.logoView}>\r\n    <Text style={styles.logoText}>\r\n      BADAJ <Text style={{ color: COLORS.orange }}>CIŚNIENIE</Text>\r\n    </Text>\r\n  </View>\r\n);\r\n","import { View, Text } from \"@react-pdf/renderer\";\r\nimport { styles } from \"./../PdfPage.styles\";\r\n\r\nexport const UserDataView = ({ name, age }: IProps) => (\r\n  <View style={styles.userDataView}>\r\n    <Text style={styles.normalText}>\r\n      {`Imię: `}\r\n      <Text style={styles.boldText}>{`${name}`}</Text>\r\n      {`, wiek: `}\r\n      <Text style={styles.boldText}>{`${age}`}</Text>\r\n    </Text>\r\n  </View>\r\n);\r\n\r\ninterface IProps {\r\n  name: string;\r\n  age: number;\r\n}\r\n","import { View, Text } from \"@react-pdf/renderer\";\r\nimport { COLORS } from \"./../../../styles/variables\";\r\nimport { styles } from \"./../PdfPage.styles\";\r\n\r\nexport const PeriodicTestInfoView = ({ periodicID, start, end }: IProps) => (\r\n  <View style={styles.periodicTestInfoView}>\r\n    <Text style={styles.periodicText}>\r\n      {`Pomiar okresowy`}\r\n      <Text style={{ color: COLORS.blue }}>{` #${periodicID}`}</Text>\r\n    </Text>\r\n    <Text style={styles.normalText}>{`(od ${start} do ${end})`}</Text>\r\n  </View>\r\n);\r\n\r\ninterface IProps {\r\n  periodicID: number;\r\n  start: string;\r\n  end: string;\r\n}\r\n","import { View, Text } from \"@react-pdf/renderer\";\r\nimport { IDailyTest } from \"../../interfaces\";\r\nimport { styles } from \"./../PdfPage.styles\";\r\n\r\nexport const DailyTestsTableView = ({ list }: IProps) => {\r\n  const renderDailyTests = list.map((item) => {\r\n    const isOmmitedMorning = item.morning.omitted ? (\r\n      <Text style={styles.normalText}>---</Text>\r\n    ) : (\r\n      <>\r\n        <Text style={styles.boldText}>{item.morning.SYS}</Text>\r\n        <Text>/</Text>\r\n        <Text style={styles.boldText}>{item.morning.DIA}</Text> Puls:{\" \"}\r\n        {item.morning.PULSE}\r\n      </>\r\n    );\r\n    const isOmmitedEvenign = item.evening.omitted ? (\r\n      <Text style={styles.normalText}>---</Text>\r\n    ) : (\r\n      <>\r\n        <Text style={styles.boldText}>{item.evening.SYS}</Text>\r\n        <Text>/</Text>\r\n        <Text style={styles.boldText}>{item.evening.DIA}</Text> Puls:{\" \"}\r\n        {item.evening.PULSE}\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <View key={item.id} style={styles.tableContentView}>\r\n        <Text style={styles.tableContentText}>{`${item.date}`}</Text>\r\n        <Text style={styles.tableContentText}>{isOmmitedMorning}</Text>\r\n        <Text style={styles.tableContentText}>{isOmmitedEvenign}</Text>\r\n      </View>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.tableHeaderView}>\r\n        <Text style={styles.tableHeaderText}>DATA</Text>\r\n        <Text style={styles.tableHeaderText}>RANO</Text>\r\n        <Text style={styles.tableHeaderText}>WIECZÓR</Text>\r\n      </View>\r\n      {renderDailyTests}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  list: IDailyTest[];\r\n}\r\n","import { View, Text } from \"@react-pdf/renderer\";\r\nimport { styles } from \"./../PdfPage.styles\";\r\n\r\nexport const FooterView = () => (\r\n  <View style={styles.footerView}>\r\n    <Text style={styles.fotterText}>\r\n      Wygenerowano za pomocą strony Badaj Ciśnienie\r\n      (https://mkphercog.github.io/checkthepressure/), niniejszy dokument jest\r\n      tylko zapisem okresowego pomiaru ciśnienia krwi pacjenta. Wszelkie\r\n      oznaczenia kolorystyczne używane na stronie (min, norma, max - względem\r\n      wieku) są tylko poglądowe i nie zastąpią konsultacji z lekarzem\r\n      prowadzącym. Autor strony: Marcin Hercog\r\n    </Text>\r\n  </View>\r\n);\r\n","import { styles } from \"./PdfPage.styles\";\r\nimport { Document, Page, View } from \"@react-pdf/renderer\";\r\nimport { IUser } from \"./../interfaces\";\r\nimport { anonymous } from \"../constants\";\r\nimport { LogoView } from \"./PageViews/LogoView\";\r\nimport { UserDataView } from \"./PageViews/UserDataView\";\r\nimport { PeriodicTestInfoView } from \"./PageViews/PeriodicTestInfoView\";\r\nimport { DailyTestsTableView } from \"./PageViews/DailyTestsTableView\";\r\nimport { AverageResultsView } from \"./PageViews/AverageResultsView\";\r\nimport { FooterView } from \"./PageViews/FooterView\";\r\n\r\nexport const MyDocument = ({ user, periodicID }: IProps) => {\r\n  const { name, age, periodicPressureTests } = user;\r\n  const test = periodicPressureTests.find((test) => test.id === periodicID);\r\n  const { start, end, list, averageResults } =\r\n    test || anonymous.periodicPressureTests[0];\r\n\r\n  return (\r\n    <Document>\r\n      <Page size=\"A4\" style={styles.page}>\r\n        <LogoView />\r\n        <UserDataView name={name} age={age} />\r\n        <PeriodicTestInfoView periodicID={periodicID} start={start} end={end} />\r\n        <DailyTestsTableView list={list} />\r\n        <AverageResultsView averageResults={averageResults} />\r\n        <View style={styles.freeSpaceView}></View>\r\n        <FooterView />\r\n      </Page>\r\n    </Document>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  user: IUser;\r\n  periodicID: number;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\r\nimport {\r\n  COLORS,\r\n  CORNER_RADIUS,\r\n  TRANSITION_TIME,\r\n} from \"./../../styles/variables\";\r\n\r\nexport const PDFDownloadLinkStyled = styled(PDFDownloadLink)`\r\n  margin-bottom: 15px;\r\n  padding: 5px 10px;\r\n  border-radius: ${CORNER_RADIUS};\r\n  background-color: ${COLORS.darkGray};\r\n  color: ${COLORS.white};\r\n  font-weight: bold;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n\r\n  @media (min-width: 1024px) {\r\n    transition: ${TRANSITION_TIME};\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n      background-color: ${COLORS.darkGreen};\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { anonymous } from \"../../../common/constants\";\r\nimport { ResultsInFieldset, resultNameType } from \"./ResultsInFieldset\";\r\nimport {\r\n  IGlobalState,\r\n  IPeriodicPressureTests,\r\n} from \"../../../common/interfaces\";\r\nimport { SharedExitButton } from \"../../Buttons/SharedExitButton/SharedExitButton\";\r\nimport { COLORS } from \"../../../styles/variables\";\r\nimport { PopupWrapper, PopupTitleGreen } from \"./../../../styles/mixins/Popups\";\r\nimport { Content } from \"./AverageResults.css\";\r\nimport { PdfPageGenerator } from \"../../../common/PDF/PdfPageGenerator\";\r\n\r\nexport enum sysDiaType {\r\n  SYS = \"SYS\",\r\n  DIA = \"DIA\",\r\n}\r\n\r\nexport const AverageResults: React.FC<IProps> = ({\r\n  userID,\r\n  periodicTest,\r\n  setIsOpenAverageResultsPopup,\r\n}) => {\r\n  const { id, averageResults, start, end } = periodicTest;\r\n\r\n  const userBloodPressureBasedOnAge = useSelector(\r\n    (state: IGlobalState) =>\r\n      state.profiles.users.find((user) => userID === user.id)\r\n        ?.userBloodPressureBasedOnAge\r\n  );\r\n  const { MIN, MAX } =\r\n    userBloodPressureBasedOnAge || anonymous.userBloodPressureBasedOnAge;\r\n\r\n  const getSysDiaColor = (value: number, type: sysDiaType) => {\r\n    if (value === 0) return COLORS.black;\r\n    else if (\r\n      (value <= MIN.SYS && type === sysDiaType.SYS) ||\r\n      (value <= MIN.DIA && type === sysDiaType.DIA)\r\n    )\r\n      return COLORS.blue;\r\n    else if (\r\n      (value >= MAX.SYS && type === sysDiaType.SYS) ||\r\n      (value >= MAX.DIA && type === sysDiaType.DIA)\r\n    )\r\n      return COLORS.red;\r\n    return COLORS.darkGreen;\r\n  };\r\n\r\n  return (\r\n    <PopupWrapper>\r\n      <PopupTitleGreen>\r\n        <p>Podsumowanie pomiaru #{id}</p>\r\n      </PopupTitleGreen>\r\n      <Content>\r\n        <h1>Średnie wyniki</h1>\r\n        <div>\r\n          <ResultsInFieldset\r\n            timeOfDayName={\"Rano\"}\r\n            averageResults={averageResults}\r\n            resultName={resultNameType.morninig}\r\n            getSysDiaColor={getSysDiaColor}\r\n          />\r\n          <ResultsInFieldset\r\n            timeOfDayName={\"Wieczór\"}\r\n            averageResults={averageResults}\r\n            resultName={resultNameType.evening}\r\n            getSysDiaColor={getSysDiaColor}\r\n          />\r\n          <ResultsInFieldset\r\n            timeOfDayName={\"Łącznie\"}\r\n            averageResults={averageResults}\r\n            resultName={resultNameType.total}\r\n            getSysDiaColor={getSysDiaColor}\r\n          />\r\n        </div>\r\n        <PdfPageGenerator\r\n          userID={userID}\r\n          periodicID={id}\r\n          startDate={start}\r\n          endDate={end}\r\n        />\r\n      </Content>\r\n      <SharedExitButton setIsOpen={setIsOpenAverageResultsPopup} />\r\n    </PopupWrapper>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  userID: number;\r\n  periodicTest: IPeriodicPressureTests;\r\n  setIsOpenAverageResultsPopup: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { anonymous } from \"../constants\";\r\nimport { IGlobalState } from \"../interfaces\";\r\nimport { MyDocument } from \"./PdfPage\";\r\nimport { PDFDownloadLinkStyled } from \"./PdfPageGenerator.css\";\r\n\r\nexport const PdfPageGenerator: React.FC<IProps> = ({\r\n  userID,\r\n  periodicID,\r\n  startDate,\r\n  endDate,\r\n}) => {\r\n  const user = useSelector((state: IGlobalState) =>\r\n    state.profiles.users.find((user) => user.id === userID)\r\n  );\r\n\r\n  return (\r\n    <PDFDownloadLinkStyled\r\n      document={<MyDocument user={user || anonymous} periodicID={periodicID} />}\r\n      fileName={`Pomiar ciśnienia #${periodicID} (${startDate} - ${endDate}) - ${user?.name}.pdf`}\r\n    >\r\n      {({ blob, url, loading, error }) =>\r\n        loading ? \"Ładowanie...\" : \"Wygeneruj pdf z wynikami\"\r\n      }\r\n    </PDFDownloadLinkStyled>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  userID: number;\r\n  periodicID: number;\r\n  startDate: string;\r\n  endDate: string;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { IPeriodicPressureTests } from \"../../../common/interfaces\";\r\nimport { Portal, PortalTarget } from \"../../../common/Portal/Portal\";\r\nimport { EditDailyTest } from \"../../Popups/EditDailyTest/EditDailyTest\";\r\nimport { DailyTest } from \"./DailyTest/DailyTest\";\r\nimport {\r\n  setOmittedDailyTest,\r\n  updateNumberOfTotalAndDoneTestsAndState,\r\n  calculateAverageResults,\r\n} from \"./../../../store/actions/profilesAction\";\r\nimport { TimeOfDayStates } from \"./../../../common/constants\";\r\nimport {\r\n  Wrapper,\r\n  FieldsetStyled,\r\n  ControlPanel,\r\n  BackArrow,\r\n} from \"./PeriodicTestDetails.css\";\r\nimport { PeriodicTestStates } from \"./../../../common/constants\";\r\nimport { Legend } from \"./../../../styles/mixins/Fieldset\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SharedBasicButton } from \"./../../Buttons/SharedBasicButton/SharedBasicButton\";\r\nimport { AverageResults } from \"../../Popups/AverageResults/AverageResults\";\r\n\r\nexport const PeriodicTestDetails: React.FC<IProps> = ({\r\n  test,\r\n  userID,\r\n  backToPeriodicTestsList,\r\n}) => {\r\n  const [isOpenPortal, setIsOpenPortal] = useState(false);\r\n  const [popup, setPopup] = useState<Object>({});\r\n  const dispatch = useDispatch();\r\n  const { list, id: periodicID, state, totalNumberOfTests } = test;\r\n  const testIsDone =\r\n    state === PeriodicTestStates.DONE && totalNumberOfTests !== 0\r\n      ? true\r\n      : false;\r\n\r\n  const renderList = list.map((item) => (\r\n    <DailyTest\r\n      userID={userID}\r\n      key={item.id}\r\n      dailyTest={item}\r\n      editDailyTest={(\r\n        dailyID: number,\r\n        timeOfDay: TimeOfDayStates,\r\n        date: string\r\n      ) => {\r\n        setPopup(\r\n          <EditDailyTest\r\n            userID={userID}\r\n            periodicID={periodicID}\r\n            dailyID={dailyID}\r\n            timeOfDay={timeOfDay}\r\n            setIsOpenEditDailyTestPopup={setIsOpenPortal}\r\n            date={date}\r\n          />\r\n        );\r\n        setIsOpenPortal(true);\r\n      }}\r\n      setOmittedDaily={(\r\n        dailyID: number,\r\n        timeOfDay: TimeOfDayStates,\r\n        omitted: boolean\r\n      ) => {\r\n        dispatch(\r\n          setOmittedDailyTest(userID, periodicID, dailyID, timeOfDay, omitted)\r\n        );\r\n        dispatch(updateNumberOfTotalAndDoneTestsAndState(userID, periodicID));\r\n      }}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FieldsetStyled>\r\n        <Legend>\r\n          Pomiar okresowy <span>#{periodicID}</span>\r\n        </Legend>\r\n        <ControlPanel>\r\n          <BackArrow onClick={backToPeriodicTestsList}>\r\n            <i className=\"fas fa-long-arrow-alt-left\"></i>\r\n          </BackArrow>\r\n          <div className=\"buttons-wapper\">\r\n            <SharedBasicButton\r\n              onClick={() => {\r\n                dispatch(calculateAverageResults(userID, periodicID));\r\n                setPopup(\r\n                  <AverageResults\r\n                    userID={userID}\r\n                    periodicTest={test}\r\n                    setIsOpenAverageResultsPopup={setIsOpenPortal}\r\n                  />\r\n                );\r\n                setIsOpenPortal(true);\r\n              }}\r\n              isDisabled={!testIsDone}\r\n            >\r\n              Podsumowanie\r\n            </SharedBasicButton>\r\n          </div>\r\n        </ControlPanel>\r\n        <ul>{renderList}</ul>\r\n      </FieldsetStyled>\r\n      {isOpenPortal ? (\r\n        <Portal target={PortalTarget.MODAL}>{popup}</Portal>\r\n      ) : null}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  test: IPeriodicPressureTests;\r\n  userID: number;\r\n  backToPeriodicTestsList: () => void;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { PeriodicTestsList } from \"./PeriodicTestsList/PeriodicTestsList\";\r\nimport { PeriodicTestDetails } from \"./PeriodicTestDetails/PeriodicTestDetails\";\r\nimport { IUser, IPeriodicPressureTests } from \"./../../common/interfaces\";\r\nimport { emptyPeriodicTest } from \"./../../common/constants\";\r\nimport { SharedPageWrapper } from \"./../SharedPageWrapper/SharedPageWrapper\";\r\n\r\nexport const Measurements: React.FC<IProps> = ({ selectedUser }) => {\r\n  const [\r\n    openedPeriodicTest,\r\n    setOpenedPeriodicTest,\r\n  ] = useState<IPeriodicPressureTests>();\r\n  const [isOpenPeriodicTestDetails, setIsOpenPeriodicTestDetails] = useState(\r\n    false\r\n  );\r\n  const {\r\n    id,\r\n    periodicPressureTests,\r\n    nextAvailablePeriodicTestID,\r\n  } = selectedUser;\r\n\r\n  const handleOpenPeriodicTestDetails = (id: number) => {\r\n    const getOpenedPeriodicTest = periodicPressureTests.find(\r\n      (test) => id === test.id\r\n    );\r\n    setOpenedPeriodicTest(getOpenedPeriodicTest);\r\n    setIsOpenPeriodicTestDetails(true);\r\n  };\r\n\r\n  return (\r\n    <SharedPageWrapper>\r\n      {isOpenPeriodicTestDetails ? (\r\n        <PeriodicTestDetails\r\n          test={openedPeriodicTest || emptyPeriodicTest}\r\n          userID={id}\r\n          backToPeriodicTestsList={() => setIsOpenPeriodicTestDetails(false)}\r\n        />\r\n      ) : (\r\n        <PeriodicTestsList\r\n          userID={id}\r\n          tests={periodicPressureTests}\r\n          nextAvailablePeriodicTestID={nextAvailablePeriodicTestID}\r\n          openPeriodicTestDetails={handleOpenPeriodicTestDetails}\r\n        />\r\n      )}\r\n    </SharedPageWrapper>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  selectedUser: IUser;\r\n}\r\n","import styled from \"styled-components\";\r\nimport {\r\n  COLORS,\r\n  TRANSITION_TIME,\r\n  CORNER_RADIUS,\r\n} from \"./../../styles/variables\";\r\nimport { Fieldset } from \"../../styles/mixins/Fieldset\";\r\n\r\nexport const FieldsetStyled = styled(Fieldset)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 90%;\r\n  margin: 20px 0;\r\n  overflow: auto;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 70%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 60%;\r\n  }\r\n\r\n  div {\r\n    margin: 30px 5px;\r\n    padding: 10px 20px;\r\n    background-color: ${COLORS.lightGray};\r\n    border-radius: ${CORNER_RADIUS};\r\n\r\n    p {\r\n      font-size: 14px;\r\n      text-align: center;\r\n\r\n      @media (min-width: 768px) {\r\n        font-size: 16px;\r\n      }\r\n\r\n      span {\r\n        font-weight: bold;\r\n        color: ${COLORS.blue};\r\n      }\r\n\r\n      a {\r\n        font-weight: bold;\r\n        text-decoration: none;\r\n        color: ${COLORS.darkGreen};\r\n\r\n        @media (min-width: 1024px) {\r\n          transition: ${TRANSITION_TIME};\r\n\r\n          :hover {\r\n            color: ${COLORS.green};\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SharedPageWrapper } from \"./../SharedPageWrapper/SharedPageWrapper\";\r\nimport { Legend } from \"../../styles/mixins/Fieldset\";\r\nimport { FieldsetStyled } from \"./Info.css\";\r\n\r\nexport const Info: React.FC = () => (\r\n  <SharedPageWrapper>\r\n    <FieldsetStyled>\r\n      <Legend>Informacje</Legend>\r\n      <div>\r\n        <p>\r\n          <span>Ważna uwaga!</span> Po usunięciu{\" \"}\r\n          <span>historii przeglądania w przeglądarce</span> zapisane dane w\r\n          aplikacji zostaną utracone, ponieważ strona nie wykorzystuje serwera\r\n          do przechowywania danych!\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <p>\r\n          Strona Badaj Ciśnienie jest tylko zapisem okresowych pomiarów\r\n          ciśnienia krwi użytkownika. Wszelkie oznaczenia kolorystyczne używane\r\n          na stronie (min, norma, max - względem wieku) są tylko poglądowe i nie\r\n          zastąpią <span>konsultacji z lekarzem prowadzącym.</span>\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <p>\r\n          Projekt i realizacja:{\" \"}\r\n          <a\r\n            href=\"https://mkphercog.github.io/mywebsite/#/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            Marcin Hercog\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </FieldsetStyled>\r\n  </SharedPageWrapper>\r\n);\r\n","import styled from \"styled-components\";\r\nimport { COLORS } from \"./styles/variables\";\r\n\r\nexport const AppBG = styled.div`\r\n  position: relative;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  padding: 10px 5px;\r\n  background-color: ${COLORS.lightGray};\r\n\r\n  @media (min-width: 1024px) {\r\n    padding: 20px 10px 30px;\r\n  }\r\n`;\r\n\r\nexport const AppWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  height: 100%;\r\n  max-width: 1250px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const AppBottomBar = styled.div`\r\n  position: absolute;\r\n  height: 70px;\r\n  width: 100%;\r\n  bottom: 0;\r\n  left: 0;\r\n  background-color: ${COLORS.gray};\r\n`;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { COLORS, CORNER_RADIUS } from \"./styles/variables\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n*{\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  font-family: 'Open Sans', sans-serif;\r\n\r\n  @media (min-width: 1024px) {\r\n    ::-webkit-scrollbar {\r\n      width: 10px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n      box-shadow: inset 0 0 6px #aaa;\r\n      border-radius: ${CORNER_RADIUS};\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n      border-radius: ${CORNER_RADIUS};\r\n      background-color: ${COLORS.gray};\r\n    }\r\n  }\r\n} \r\n`;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { Navigation } from \"./components/Navigation/Navigation\";\r\nimport { UserPressureBar } from \"./components/UserPressureBar/UserPressureBar\";\r\nimport { ProfilesSelector } from \"./components/ProfilesSelector/ProfilesSelector\";\r\nimport { Measurements } from \"./components/Measurements/Measurements\";\r\nimport { Info } from \"./components/Info/Info\";\r\nimport { anonymous } from \"./common/constants\";\r\nimport { IGlobalState } from \"./common/interfaces\";\r\nimport { AppBG, AppWrapper, AppBottomBar } from \"./App.css\";\r\nimport { GlobalStyles } from \"./index.css\";\r\n\r\nexport const App: React.FC = () => {\r\n  const getProfiles = useSelector((state: IGlobalState) => state.profiles);\r\n  const { users, selectedUserID } = getProfiles;\r\n  const selectedUser =\r\n    users.find((user) => selectedUserID === user.id) || anonymous;\r\n  const { name, age, userBloodPressureBasedOnAge } = selectedUser;\r\n\r\n  return (\r\n    <AppBG>\r\n      <AppBottomBar />\r\n      <GlobalStyles />\r\n      <AppWrapper>\r\n        <Navigation />\r\n        {selectedUser.id !== -1 ? (\r\n          <UserPressureBar\r\n            name={name}\r\n            age={age}\r\n            userBloodPressureBasedOnAge={userBloodPressureBasedOnAge}\r\n          />\r\n        ) : null}\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <ProfilesSelector />\r\n          </Route>\r\n          <Route path=\"/measurements\">\r\n            <Measurements selectedUser={selectedUser} />\r\n          </Route>\r\n          <Route path=\"/info\">\r\n            <Info />\r\n          </Route>\r\n        </Switch>\r\n      </AppWrapper>\r\n    </AppBG>\r\n  );\r\n};\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { IUser } from \"./interfaces\";\r\n\r\nconst LOCAL_PROFILES = \"localProfiles\";\r\nconst LOCAL_SELECTED_USER_ID = \"localSelectedUserID\";\r\n\r\nexport const updateLocalStorageProfiles = (profiles: IUser[]) =>\r\n  localStorage.setItem(LOCAL_PROFILES, JSON.stringify(profiles));\r\n\r\nexport const checkLocalProfiles = () => {\r\n  const isLocalList = localStorage.getItem(LOCAL_PROFILES);\r\n  if (isLocalList === null || isLocalList === \"[]\") return false;\r\n  return true;\r\n};\r\n\r\nexport const getLocalProfiles = () =>\r\n  JSON.parse(localStorage.getItem(LOCAL_PROFILES) || \"[]\");\r\n\r\nexport const setLocalEmptyProfiles = () =>\r\n  localStorage.setItem(LOCAL_PROFILES, \"[]\");\r\n\r\nexport const updateLocalSelectedUserID = (id: number) =>\r\n  localStorage.setItem(LOCAL_SELECTED_USER_ID, JSON.stringify(id));\r\n\r\nexport const getLocalSelectedUserID = () =>\r\n  JSON.parse(localStorage.getItem(LOCAL_SELECTED_USER_ID) || \"0\");\r\n\r\nexport const setLocalSelectedUserID = () =>\r\n  localStorage.setItem(LOCAL_SELECTED_USER_ID, \"0\");\r\n\r\nexport const configInitialStateWithLocalStorage = () => {\r\n  const isLocalProfiles = checkLocalProfiles();\r\n  let localProfiles: IUser[] = [];\r\n  let localID = 0;\r\n  let localSelectedUserID = 0;\r\n\r\n  if (isLocalProfiles) {\r\n    localProfiles = getLocalProfiles();\r\n    localID = localProfiles[localProfiles.length - 1][\"id\"] + 1;\r\n    localSelectedUserID = getLocalSelectedUserID();\r\n  } else {\r\n    setLocalEmptyProfiles();\r\n    setLocalSelectedUserID();\r\n  }\r\n\r\n  return {\r\n    users: localProfiles,\r\n    nextAvailableUserID: localID,\r\n    selectedUserID: localSelectedUserID,\r\n  };\r\n};\r\n","import { PeriodicTestStates } from \"../../common/constants\";\r\nimport { IUser } from \"../../common/interfaces\";\r\nimport { IAction } from \"./profilesReducer\";\r\n\r\nexport const addPeriodicPressureTest = (\r\n  usersList: IUser[],\r\n  action: IAction\r\n) => {\r\n  const { userID, newPeriodicTest } = action;\r\n  return usersList.map((user) => {\r\n    if (user.id === userID) {\r\n      user.periodicPressureTests = [\r\n        ...user.periodicPressureTests,\r\n        newPeriodicTest,\r\n      ];\r\n      user.nextAvailablePeriodicTestID += 1;\r\n    }\r\n    return user;\r\n  });\r\n};\r\n\r\nexport const deletePeriodicPressureTest = (\r\n  usersList: IUser[],\r\n  action: IAction\r\n) => {\r\n  const { userID, idToDelete } = action;\r\n  return usersList.map((user) => {\r\n    if (user.id === userID) {\r\n      user.periodicPressureTests = user.periodicPressureTests.filter(\r\n        (test) => idToDelete !== test.id\r\n      );\r\n      user.nextAvailablePeriodicTestID = user.periodicPressureTests.length\r\n        ? user.periodicPressureTests[user.periodicPressureTests.length - 1][\r\n            \"id\"\r\n          ] + 1\r\n        : 1;\r\n    }\r\n    return user;\r\n  });\r\n};\r\n\r\nexport const editDailyTestValues = (usersList: IUser[], action: IAction) => {\r\n  const { userID, periodicID, dailyID, timeOfDay, sys, dia, pulse } = action;\r\n  return usersList.map((user) => {\r\n    if (user.id === userID) {\r\n      user.periodicPressureTests.map((periodicTest) => {\r\n        if (periodicTest.id === periodicID) {\r\n          periodicTest.list.map((daily) => {\r\n            if (daily.id === dailyID && daily.morning.timeOfDay === timeOfDay) {\r\n              daily.morning.SYS = sys;\r\n              daily.morning.DIA = dia;\r\n              daily.morning.PULSE = pulse;\r\n            } else if (\r\n              daily.id === dailyID &&\r\n              daily.evening.timeOfDay === timeOfDay\r\n            ) {\r\n              daily.evening.SYS = sys;\r\n              daily.evening.DIA = dia;\r\n              daily.evening.PULSE = pulse;\r\n            }\r\n            return daily;\r\n          });\r\n        }\r\n        return periodicTest;\r\n      });\r\n    }\r\n    return user;\r\n  });\r\n};\r\n\r\nexport const setOmittedDailyTest = (usersList: IUser[], action: IAction) => {\r\n  const { userID, periodicID, dailyID, timeOfDay, omitted } = action;\r\n\r\n  return usersList.map((user) => {\r\n    if (user.id === userID) {\r\n      user.periodicPressureTests.map((periodicTest) => {\r\n        if (periodicTest.id === periodicID) {\r\n          periodicTest.list.map((daily) => {\r\n            if (daily.id === dailyID && daily.morning.timeOfDay === timeOfDay) {\r\n              daily.morning.omitted = omitted;\r\n            } else if (\r\n              daily.id === dailyID &&\r\n              daily.evening.timeOfDay === timeOfDay\r\n            ) {\r\n              daily.evening.omitted = omitted;\r\n            }\r\n            return daily;\r\n          });\r\n        }\r\n        return periodicTest;\r\n      });\r\n    }\r\n    return user;\r\n  });\r\n};\r\n\r\nexport const updateNumberOfTotalAndDoneTestsAndState = (\r\n  usersList: IUser[],\r\n  action: IAction\r\n) => {\r\n  const { userID, periodicID } = action;\r\n  let total = 0;\r\n  let done = 0;\r\n\r\n  return usersList.map((user) => {\r\n    if (user.id === userID) {\r\n      user.periodicPressureTests.map((periodicTest) => {\r\n        if (periodicTest.id === periodicID) {\r\n          periodicTest.list.forEach((daily) => {\r\n            if (!daily.morning.omitted) total++;\r\n            if (!daily.evening.omitted) total++;\r\n            if (\r\n              daily.morning.SYS !== 0 &&\r\n              daily.morning.DIA !== 0 &&\r\n              daily.morning.PULSE !== 0 &&\r\n              !daily.morning.omitted\r\n            )\r\n              done++;\r\n            if (\r\n              daily.evening.SYS !== 0 &&\r\n              daily.evening.DIA !== 0 &&\r\n              daily.evening.PULSE !== 0 &&\r\n              !daily.evening.omitted\r\n            )\r\n              done++;\r\n\r\n            periodicTest.totalNumberOfTests = total;\r\n            periodicTest.numberOfTestsDone = done;\r\n\r\n            if (\r\n              periodicTest.totalNumberOfTests === periodicTest.numberOfTestsDone\r\n            ) {\r\n              periodicTest.state = PeriodicTestStates.DONE;\r\n            } else {\r\n              periodicTest.state = PeriodicTestStates.IN_PROGRESS;\r\n            }\r\n            return daily;\r\n          });\r\n        }\r\n        return periodicTest;\r\n      });\r\n    }\r\n    return user;\r\n  });\r\n};\r\n\r\nconst calculateAverageValue = (arr: number[]) => {\r\n  if (arr.length === 0) return 0;\r\n  else if (arr.length === 1) return arr[0];\r\n  return Math.round(arr.reduce((acu, value) => acu + value) / arr.length);\r\n};\r\n\r\nexport const calculateAverageResults = (\r\n  usersList: IUser[],\r\n  action: IAction\r\n) => {\r\n  const { userID, periodicID } = action;\r\n  const morningValuesOfSys: number[] = [];\r\n  const morningValuesOfDia: number[] = [];\r\n  const morningValuesOfPulse: number[] = [];\r\n  const eveningValuesOfSys: number[] = [];\r\n  const eveningValuesOfDia: number[] = [];\r\n  const eveningValuesOfPulse: number[] = [];\r\n\r\n  return usersList.map((user) => {\r\n    if (user.id === userID) {\r\n      user.periodicPressureTests.map((periodicTest) => {\r\n        if (periodicTest.id === periodicID) {\r\n          periodicTest.list.forEach((daily) => {\r\n            if (!daily.morning.omitted) {\r\n              morningValuesOfSys.push(daily.morning.SYS);\r\n              morningValuesOfDia.push(daily.morning.DIA);\r\n              morningValuesOfPulse.push(daily.morning.PULSE);\r\n            }\r\n            if (!daily.evening.omitted) {\r\n              eveningValuesOfSys.push(daily.evening.SYS);\r\n              eveningValuesOfDia.push(daily.evening.DIA);\r\n              eveningValuesOfPulse.push(daily.evening.PULSE);\r\n            }\r\n          });\r\n          periodicTest.averageResults.morning.SYS = calculateAverageValue(\r\n            morningValuesOfSys\r\n          );\r\n          periodicTest.averageResults.morning.DIA = calculateAverageValue(\r\n            morningValuesOfDia\r\n          );\r\n          periodicTest.averageResults.morning.PULSE = calculateAverageValue(\r\n            morningValuesOfPulse\r\n          );\r\n          periodicTest.averageResults.evening.SYS = calculateAverageValue(\r\n            eveningValuesOfSys\r\n          );\r\n          periodicTest.averageResults.evening.DIA = calculateAverageValue(\r\n            eveningValuesOfDia\r\n          );\r\n          periodicTest.averageResults.evening.PULSE = calculateAverageValue(\r\n            eveningValuesOfPulse\r\n          );\r\n          periodicTest.averageResults.total.SYS = calculateAverageValue([\r\n            ...morningValuesOfSys,\r\n            ...eveningValuesOfSys,\r\n          ]);\r\n          periodicTest.averageResults.total.DIA = calculateAverageValue([\r\n            ...morningValuesOfDia,\r\n            ...eveningValuesOfDia,\r\n          ]);\r\n          periodicTest.averageResults.total.PULSE = calculateAverageValue([\r\n            ...morningValuesOfPulse,\r\n            ...eveningValuesOfPulse,\r\n          ]);\r\n        }\r\n        return periodicTest;\r\n      });\r\n    }\r\n    return user;\r\n  });\r\n};\r\n","import {\r\n  ADD_PROFILE,\r\n  DELETE_PROFILE,\r\n  SET_SELECTED_USER_ID,\r\n  ADD_PERIODIC_PRESSURE_TEST,\r\n  DELETE_PERIODIC_PRESSURE_TEST,\r\n  EDIT_DAILY_VALUES,\r\n  SET_OMITTED_DAILY_TEST,\r\n  UPDATE_NUMBER_OF_TOTAL_AND_DONE_TESTS_AND_STATE,\r\n  CALCULATE_AVERAGE_RESULTS,\r\n} from \"./../types/\";\r\nimport { IUser, IPeriodicPressureTests } from \"./../../common/interfaces\";\r\nimport { TimeOfDayStates } from \"./../../common/constants\";\r\nimport {\r\n  updateLocalStorageProfiles,\r\n  updateLocalSelectedUserID,\r\n  configInitialStateWithLocalStorage,\r\n} from \"./../../common/localStorage\";\r\nimport {\r\n  addPeriodicPressureTest,\r\n  deletePeriodicPressureTest,\r\n  editDailyTestValues,\r\n  setOmittedDailyTest,\r\n  updateNumberOfTotalAndDoneTestsAndState,\r\n  calculateAverageResults,\r\n} from \"./profilesReducerFunctions\";\r\n\r\nconst initialState = configInitialStateWithLocalStorage();\r\n\r\nexport const profilesReducer = (state = initialState, action: IAction) => {\r\n  switch (action.type) {\r\n    case ADD_PROFILE: {\r\n      const updatedProfiles = [...state.users, action.newUser];\r\n      updateLocalStorageProfiles(updatedProfiles);\r\n      updateLocalSelectedUserID(action.newUser.id);\r\n      return {\r\n        ...state,\r\n        users: updatedProfiles,\r\n        selectedUserID: action.newUser.id,\r\n        nextAvailableUserID: state.nextAvailableUserID + 1,\r\n      };\r\n    }\r\n\r\n    case DELETE_PROFILE: {\r\n      const updatedProfiles = state.users.filter(\r\n        (user) => user.id !== action.idToDelete\r\n      );\r\n      updateLocalStorageProfiles(updatedProfiles);\r\n      if (action.idToDelete === state.selectedUserID) {\r\n        const availableID = updatedProfiles.length\r\n          ? updatedProfiles[0][\"id\"]\r\n          : 0;\r\n        updateLocalSelectedUserID(availableID);\r\n        return {\r\n          ...state,\r\n          users: updatedProfiles,\r\n          selectedUserID: availableID,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        users: updatedProfiles,\r\n      };\r\n    }\r\n\r\n    case SET_SELECTED_USER_ID: {\r\n      updateLocalSelectedUserID(action.selectedUserID);\r\n      return { ...state, selectedUserID: action.selectedUserID };\r\n    }\r\n\r\n    case ADD_PERIODIC_PRESSURE_TEST: {\r\n      const updatedProfiles = addPeriodicPressureTest(state.users, action);\r\n      updateLocalStorageProfiles(updatedProfiles);\r\n      return { ...state, users: updatedProfiles };\r\n    }\r\n\r\n    case DELETE_PERIODIC_PRESSURE_TEST: {\r\n      const updatedProfiles = deletePeriodicPressureTest(state.users, action);\r\n      updateLocalStorageProfiles(updatedProfiles);\r\n      return { ...state, users: updatedProfiles };\r\n    }\r\n\r\n    case EDIT_DAILY_VALUES: {\r\n      const updatedProfiles = editDailyTestValues(state.users, action);\r\n      updateLocalStorageProfiles(updatedProfiles);\r\n      return { ...state, users: updatedProfiles };\r\n    }\r\n\r\n    case SET_OMITTED_DAILY_TEST: {\r\n      const updatedProfiles = setOmittedDailyTest(state.users, action);\r\n      updateLocalStorageProfiles(updatedProfiles);\r\n      return { ...state, users: updatedProfiles };\r\n    }\r\n\r\n    case UPDATE_NUMBER_OF_TOTAL_AND_DONE_TESTS_AND_STATE: {\r\n      const updatedProfiles = updateNumberOfTotalAndDoneTestsAndState(\r\n        state.users,\r\n        action\r\n      );\r\n      updateLocalStorageProfiles(updatedProfiles);\r\n      return { ...state, users: updatedProfiles };\r\n    }\r\n\r\n    case CALCULATE_AVERAGE_RESULTS: {\r\n      const updatedProfiles = calculateAverageResults(state.users, action);\r\n      updateLocalStorageProfiles(updatedProfiles);\r\n      return { ...state, users: updatedProfiles };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport interface IAction {\r\n  type: string;\r\n  newUser: IUser;\r\n  userID: number;\r\n  selectedUserID: number;\r\n  periodicID: number;\r\n  dailyID: number;\r\n  idToDelete: number;\r\n  newPeriodicTest: IPeriodicPressureTests;\r\n  timeOfDay: TimeOfDayStates;\r\n  sys: number;\r\n  dia: number;\r\n  pulse: number;\r\n  omitted: boolean;\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { profilesReducer } from \"./../reducers/profilesReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  profiles: profilesReducer,\r\n});\r\n","import { createStore } from \"redux\";\r\nimport { rootReducer } from \"./../store/reducers/\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools());\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename=\"/\">\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}