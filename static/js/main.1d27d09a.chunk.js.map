{"version":3,"sources":["styles/variables.ts","components/Navigation/Navigation.css.ts","components/Navigation/Navigation.tsx","components/UserPressureBar/UserPressureBar.css.ts","components/UserPressureBar/UserPressureBar.tsx","store/types/index.ts","store/actions/profilesAction.ts","components/Buttons/SharedBasicButton/SharedBasicButton.css.ts","components/Buttons/SharedBasicButton/SharedBasicButton.tsx","components/Buttons/SharedDeleteButton/SharedDeleteButton.css.ts","components/Buttons/SharedDeleteButton/SharedDeleteButton.tsx","styles/mixins/LiElement.ts","components/ProfilesSelector/UserProfile/UserProfile.css.ts","components/ProfilesSelector/UserProfile/UserProfile.tsx","styles/mixins/Popups.ts","components/Popups/AddUser/AddUser.css.ts","common/optionsForSelectTag.tsx","components/Buttons/SharedApplyButton/SharedApplyButton.css.ts","components/Buttons/SharedApplyButton/SharedApplyButton.tsx","components/Buttons/SharedDenyButton/SharedDenyButton.css.ts","components/Buttons/SharedDenyButton/SharedDenyButton.tsx","components/Popups/Warnings/Warnings.css.ts","common/constants.ts","components/Popups/Warnings/Warnings.tsx","common/bloodPressureTable.ts","common/Portal/Portal.css.ts","common/Portal/Portal.tsx","components/Buttons/SharedExitButton/SharedExitButton.css.ts","components/Buttons/SharedExitButton/SharedExitButton.tsx","components/Popups/AddUser/AddUser.tsx","styles/mixins/Fieldset.ts","components/ProfilesSelector/ProfilesSelector.css.ts","images/BG.jpg","components/SharedPageWrapper/SharedPageWrapper.css.ts","components/SharedPageWrapper/SharedPageWrapper.tsx","components/Buttons/SharedAddButton/SharedAddButton.css.ts","components/Buttons/SharedAddButton/SharedAddButton.tsx","components/ProfilesSelector/ProfilesSelector.tsx","components/Popups/AddPeriodicTest/AddPeriodicTest.css.ts","components/Popups/AddPeriodicTest/AddPeriodicTest.tsx","components/Popups/AddPeriodicTest/AddPeriodicTestFunctions.ts","components/Measurements/PeriodicTestsList/PeriodicTestsList.css.ts","components/Measurements/PeriodicTestsList/PeriodicTest/PeriodicTest.css.ts","components/Measurements/PeriodicTestsList/PeriodicTest/PeriodicTest.tsx","components/Measurements/PeriodicTestsList/PeriodicTestsList.tsx","components/Popups/EditDailyTest/EditDailyTest.css.ts","components/Popups/EditDailyTest/EditDailyTestFunctions.ts","components/Popups/EditDailyTest/EditDailyTest.tsx","components/Measurements/PeriodicTestDetails/DailyTest/DailyTest.css.ts","components/Measurements/PeriodicTestDetails/DailyTest/MorningEveningDetails.tsx","components/Measurements/PeriodicTestDetails/DailyTest/DailyTest.tsx","components/Measurements/PeriodicTestDetails/PeriodicTestDetails.css.ts","components/Popups/AverageResults/AverageResults.css.ts","components/Popups/AverageResults/ResultsInFieldset.tsx","common/PDF/PDF_Fonts/OpenSans-Regular.ttf","common/PDF/PDF_Fonts/OpenSans-Bold.ttf","common/PDF/PdfPage.styles.ts","common/PDF/PageViews/AverageResultsView.tsx","common/PDF/PageViews/LogoView.tsx","common/PDF/PageViews/UserDataView.tsx","common/PDF/PageViews/PeriodicTestInfoView.tsx","common/PDF/PageViews/DailyTestsTableView.tsx","common/PDF/PageViews/FooterView.tsx","common/PDF/PdfPage.tsx","common/PDF/PdfPageGenerator.css.ts","components/Popups/AverageResults/AverageResults.tsx","common/PDF/PdfPageGenerator.tsx","components/Measurements/PeriodicTestDetails/PeriodicTestDetails.tsx","components/Measurements/Measurements.tsx","components/Advices/Advices.tsx","components/Info/Info.tsx","App.css.ts","index.css.ts","App.tsx","reportWebVitals.ts","common/localStorage.ts","store/reducers/profilesReducerFunctions.ts","store/reducers/profilesReducer.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["COLORS","CORNER_RADIUS","TRANSITION_TIME","widthWithoutMenuIcon","opacityAnimation","keyframes","Header","styled","header","props","windowWidth","Logo","h1","Nav","nav","MenuIcon","i","BackArrowIcon","Navigation","useState","menuVisibility","setMenuVisibility","window","innerWidth","setWindowWidth","document","body","onresize","useEffect","to","exact","className","onClick","Bar","div","UserData","PressureMin","PressureNormal","PressureMax","UserPressureBar","name","age","userBloodPressureBasedOnAge","MIN","NORMAL","MAX","SYS","DIA","ADD_PROFILE","DELETE_PROFILE","SET_SELECTED_USER_ID","ADD_PERIODIC_PRESSURE_TEST","DELETE_PERIODIC_PRESSURE_TEST","EDIT_DAILY_VALUES","SET_OMITTED_DAILY_TEST","UPDATE_NUMBER_OF_TOTAL_AND_DONE_TESTS_AND_STATE","CALCULATE_AVERAGE_RESULTS","updateNumberOfTotalAndDoneTestsAndState","userID","periodicID","type","BasicButtonStyled","button","SharedBasicButton","isDisabled","children","disabled","DeleteButtonStyled","SharedDeleteButton","deleteFunction","LiElement","li","Wrapper","Options","UserProfile","id","deleteProfile","selectUserID","history","useHistory","push","PopupWrapper","PopupTitleGreen","PopupTitleRed","PopupContentWrapper","PopupForm","form","PopupSelect","select","PopupSelectOption","option","FormStyled","numRangeOptions","minValue","maxValue","numbers","map","item","value","SharedApplyButtonType","ApplyButtonStyled","SharedApplyButton","basic","setIsOpen","getResponse","submitFunction","e","DenyButtonStyled","SharedDenyButton","PeriodicTestStates","TimeOfDayStates","Title","Content","BtnWrapper","Warnings","message","WarningsYesNo","response","bloodPressureTable","MAX_SYS_DIA_PULSE_VALUE","emptyPeriodicTest","start","end","days","state","totalNumberOfTests","numberOfTestsDone","averageResults","morning","PULSE","evening","total","list","anonymous","nextAvailablePeriodicTestID","periodicPressureTests","PortalTarget","PortalBG","Portal","target","domElement","getElementById","ReactDom","createPortal","ExitButtonStyled","SharedExitButton","AddUser","setIsOpenAddUserPopup","setName","setAge","dispatch","useDispatch","nextAvailableUserID","useSelector","profiles","isOpenPortal","setIsOpenPortal","Object","popup","setPopup","renderOptionsAge","htmlFor","onChange","autoFocus","parseInt","submit","preventDefault","length","getUserBloodPressure","find","bloodTable","findUserBloodPressureBasedOnAge","newProfile","newUser","addProfile","MODAL","Fieldset","fieldset","Legend","legend","ProfilesSelectorStyled","PageWrapperStyled","SharedPageWrapper","src","BackGround","alt","AddButtonStyled","SharedAddButton","addFunction","hoverDescription","ProfilesSelector","users","handleDeleteProfile","res","idToDelete","handleSelectUserID","selectedUserID","setSelectedUserID","renderUsers","legendTitle","today","Date","AddPeriodicTest","setIsOpenAddPeriodicTestPopup","toISOString","slice","startDay","setStartDay","setDays","renderOptionsDays","Number","getDateArray","startDashDate","numOfDays","arrDate","split","year","month","day","dateList","date","UTC","dateWithDots","Intl","DateTimeFormat","format","generateDateArray","getDailyTestList","index","timeOfDay","MORNING","omitted","EVENING","newPeriodicTest","IN_PROGRESS","newTest","addPeriodicPressureTest","FieldsetStyled","h2","Subtitle","Info","p","Btns","PeriodicTest","test","openPeriodicTestDetails","deletePeriodicTest","PeriodicTestsList","tests","handleDeletePeriodicTest","deletePeriodicPressureTest","renderPeriodicTests","ValidateStateTypes","EditDailyTest","dailyID","setIsOpenEditDailyTestPopup","currentTestValuesToRender","testValues","forEach","user","periodicTest","currentSys","toString","currentDia","currentPulse","getDailyTimeOfDayTestValues","sys","setSys","dia","setDia","pulse","setPulse","checkValues","notEnough","tooMuch","badSign","correct","validateValues","editDailyValues","sysDiaType","MorningEvening","SysDiaPuls","SysAndDiaColored","span","color","timeOfDayType","MorningEveningDetails","dailyTest","editDailyTest","setOmittedDaily","getSysDiaColor","DailyTest","evenign","ControlPanel","BackArrow","resultNameType","LegendStyled","ResultsInFieldset","timeOfDayName","resultName","Font","register","family","OpenSansRegular","OpenSansBold","PropNames","styles","StyleSheet","create","page","flexDirection","padding","fontFamily","backgroundColor","logoView","marginBottom","logoText","fontSize","userDataView","periodicTestInfoView","display","justifyContent","alignItems","marginTop","periodicText","tableHeaderView","tableHeaderText","width","textAlign","tableContentView","borderBottomWidth","borderBottomStyle","borderBottomColor","tableContentText","averageTitleView","averageTitleText","freeSpaceView","flexGrow","footerView","borderTopWidth","borderTopStyle","borderTopColor","fotterText","normalText","boldText","LogoView","style","UserDataView","PeriodicTestInfoView","DailyTestsTableView","renderDailyTests","isOmmitedMorning","isOmmitedEvenign","AverageResultsView","getAverage","prop","renderAverageMorning","renderAverageEvening","renderAverageTotal","renderAllAverageResults","FooterView","MyDocument","size","PDFDownloadLinkStyled","PDFDownloadLink","PdfPageGenerator","fileName","blob","url","loading","error","AverageResults","setIsOpenAverageResultsPopup","morninig","PeriodicTestDetails","backToPeriodicTestsList","testIsDone","DONE","renderList","setOmittedDailyTest","calculateAverageResults","Measurements","selectedUser","openedPeriodicTest","setOpenedPeriodicTest","isOpenPeriodicTestDetails","setIsOpenPeriodicTestDetails","getOpenedPeriodicTest","Advices","AppBG","AppWrapper","AppBottomBar","GlobalStyles","createGlobalStyle","App","getProfiles","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","LOCAL_PROFILES","LOCAL_SELECTED_USER_ID","updateLocalStorageProfiles","localStorage","setItem","JSON","stringify","updateLocalSelectedUserID","usersList","action","filter","editDailyTestValues","daily","done","calculateAverageValue","arr","Math","round","reduce","acu","morningValuesOfSys","morningValuesOfDia","morningValuesOfPulse","eveningValuesOfSys","eveningValuesOfDia","eveningValuesOfPulse","initialState","localProfiles","localID","localSelectedUserID","isLocalList","getItem","checkLocalProfiles","parse","configInitialStateWithLocalStorage","rootReducer","combineReducers","updatedProfiles","availableID","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","basename"],"mappings":"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","file":"static/js/main.1d27d09a.chunk.js","sourcesContent":["export const COLORS = {\r\n  blue: \"#315aeb\",\r\n  green: \"#86db51\",\r\n  darkGreen: \"#5e963b\",\r\n  orange: \"#ffbb0d\",\r\n  red: \"#eb601a\",\r\n  darkRed: \"#a34312\",\r\n  white: \"#ffffff\",\r\n  whiteOpacity: \"rgba(255,255,255,0.4)\",\r\n  lightGray: \"#e6e6e6\",\r\n  gray: \"#969696\",\r\n  grayWithOpacity: \"rgba(150, 150, 150, 0.45)\",\r\n  darkGray: \"#505050\",\r\n  black: \"#000000\",\r\n  transparent: \"transparent\",\r\n};\r\n\r\nexport const CORNER_RADIUS = \"15px\";\r\nexport const TRANSITION_TIME = \"0.3s\";\r\n","import styled, { keyframes } from \"styled-components\";\r\nimport {\r\n  COLORS,\r\n  CORNER_RADIUS,\r\n  TRANSITION_TIME,\r\n} from \"./../../styles/variables\";\r\n\r\nconst widthWithoutMenuIcon = \"640px\";\r\nconst opacityAnimation = keyframes`\r\n  from {\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    opacity: 100%;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  flex-shrink: 0;\r\n  display: flex;\r\n  justify-content: ${(props: { windowWidth: number }) =>\r\n    props.windowWidth >= 640 ? \"center\" : \"flex-end\"};\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 7vh;\r\n  background-color: ${COLORS.blue};\r\n  border-top-right-radius: ${CORNER_RADIUS};\r\n  border-top-left-radius: ${CORNER_RADIUS};\r\n\r\n  @media (orientation: landscape) {\r\n    height: 11vh;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    height: 7vh;\r\n  }\r\n`;\r\n\r\nexport const Logo = styled.h1`\r\n  flex-grow: 1;\r\n  margin-left: 20px;\r\n  font-size: 18px;\r\n  text-transform: uppercase;\r\n  color: ${COLORS.white};\r\n  animation: ${opacityAnimation} linear 0.5s;\r\n\r\n  @media (min-width: ${widthWithoutMenuIcon}) {\r\n    animation: none;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 24px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 28px;\r\n  }\r\n\r\n  span {\r\n    color: ${COLORS.orange};\r\n  }\r\n`;\r\n\r\nexport const Nav = styled.nav`\r\n  flex-basis: 60%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  height: 100%;\r\n  animation: ${opacityAnimation} linear 0.5s;\r\n\r\n  @media (min-width: ${widthWithoutMenuIcon}) {\r\n    animation: none;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    margin-right: 15px;\r\n  }\r\n\r\n  li {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    list-style: none;\r\n\r\n    a {\r\n      padding: 0 15px;\r\n      text-transform: uppercase;\r\n      text-decoration: none;\r\n      font-weight: bold;\r\n      font-size: 12px;\r\n      color: ${COLORS.white};\r\n      transition: ${TRANSITION_TIME};\r\n\r\n      @media (min-width: 768px) {\r\n        font-size: 16px;\r\n      }\r\n\r\n      @media (min-width: 1024px) {\r\n        font-size: 18px;\r\n        cursor: pointer;\r\n        transition: ${TRANSITION_TIME};\r\n\r\n        :hover {\r\n          color: ${COLORS.orange};\r\n        }\r\n      }\r\n    }\r\n\r\n    .active {\r\n      border-bottom: 3px solid ${COLORS.orange};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MenuIcon = styled.i`\r\n  margin-right: 15px;\r\n  font-size: 22px;\r\n  color: ${COLORS.white};\r\n  cursor: pointer;\r\n  animation: ${opacityAnimation} linear 0.5s;\r\n\r\n  @media (min-width: ${widthWithoutMenuIcon}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const BackArrowIcon = styled.i`\r\n  margin-right: 15px;\r\n  color: ${COLORS.orange};\r\n  font-size: 25px;\r\n  transform: rotate(180deg);\r\n  cursor: pointer;\r\n  animation: ${opacityAnimation} linear 0.5s;\r\n\r\n  @media (min-width: ${widthWithoutMenuIcon}) {\r\n    display: none;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Header, Logo, Nav, MenuIcon, BackArrowIcon } from \"./Navigation.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const Navigation: React.FC = () => {\r\n  const [menuVisibility, setMenuVisibility] = useState(false);\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n  document.body.onresize = () => setWindowWidth(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    if (windowWidth >= 640) {\r\n      setMenuVisibility(false);\r\n    }\r\n  }, [windowWidth]);\r\n\r\n  return (\r\n    <Header windowWidth={windowWidth}>\r\n      {menuVisibility ? null : (\r\n        <Logo>\r\n          Badaj <span>ciśnienie</span>\r\n        </Logo>\r\n      )}\r\n      {menuVisibility || windowWidth >= 640 ? (\r\n        <>\r\n          <Nav>\r\n            <li>\r\n              <NavLink to=\"/\" exact>\r\n                Profile\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/measurements\">Pomiary</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/advices\">Porady</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/info\">Info</NavLink>\r\n            </li>\r\n          </Nav>\r\n          <BackArrowIcon\r\n            className=\"fas fa-long-arrow-alt-left back\"\r\n            onClick={() => setMenuVisibility(false)}\r\n          ></BackArrowIcon>\r\n        </>\r\n      ) : (\r\n        <MenuIcon\r\n          className=\"fas fa-ellipsis-v menu\"\r\n          onClick={() => setMenuVisibility(true)}\r\n        ></MenuIcon>\r\n      )}\r\n    </Header>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { COLORS, TRANSITION_TIME } from \"../../styles/variables\";\r\n\r\nexport const Bar = styled.div`\r\n  flex-shrink: 0;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  padding: 4px 0;\r\n  border-bottom: 2px solid ${COLORS.blue};\r\n  background-color: ${COLORS.white};\r\n  animation: show ${TRANSITION_TIME} linear both;\r\n\r\n  @keyframes show {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UserData = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-bottom: 5px;\r\n\r\n  @media (orientation: landscape) {\r\n    width: auto;\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  p {\r\n    font-size: 10px;\r\n\r\n    @media (min-width: 411px) {\r\n      font-size: 11px;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 12px;\r\n    }\r\n\r\n    span {\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PressureMin = styled.div`\r\n  p {\r\n    font-size: 10px;\r\n    color: ${COLORS.blue};\r\n\r\n    @media (min-width: 411px) {\r\n      font-size: 11px;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PressureNormal = styled.div`\r\n  p {\r\n    font-size: 10px;\r\n    color: ${COLORS.darkGreen};\r\n    font-weight: bold;\r\n\r\n    @media (min-width: 411px) {\r\n      font-size: 11px;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PressureMax = styled.div`\r\n  p {\r\n    font-size: 10px;\r\n    color: ${COLORS.red};\r\n\r\n    @media (min-width: 411px) {\r\n      font-size: 11px;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { IBloodPressureBasedOnAge } from \"../../common/interfaces\";\r\nimport {\r\n  Bar,\r\n  UserData,\r\n  PressureMin,\r\n  PressureNormal,\r\n  PressureMax,\r\n} from \"./UserPressureBar.css\";\r\n\r\nexport const UserPressureBar: React.FC<IProps> = ({\r\n  name,\r\n  age,\r\n  userBloodPressureBasedOnAge,\r\n}) => {\r\n  const { MIN, NORMAL, MAX } = userBloodPressureBasedOnAge;\r\n\r\n  return (\r\n    <Bar>\r\n      <UserData>\r\n        <p>\r\n          <span>{name}, </span>\r\n          wiek: {age}\r\n        </p>\r\n      </UserData>\r\n      <PressureMin>\r\n        <p>\r\n          MIN: {MIN.SYS}/{MIN.DIA}\r\n        </p>\r\n      </PressureMin>\r\n\r\n      <PressureNormal>\r\n        <p>\r\n          NORMA: {NORMAL.SYS}/{NORMAL.DIA}\r\n        </p>\r\n      </PressureNormal>\r\n\r\n      <PressureMax>\r\n        <p>\r\n          MAX: {MAX.SYS}/{MAX.DIA}\r\n        </p>\r\n      </PressureMax>\r\n    </Bar>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  name: string;\r\n  age: number;\r\n  userBloodPressureBasedOnAge: IBloodPressureBasedOnAge;\r\n}\r\n","export const ADD_PROFILE = \"ADD_PROFILE\";\r\nexport const DELETE_PROFILE = \"DELETE_PROFILE\";\r\n\r\nexport const SET_SELECTED_USER_ID = \"SET_SELECTED_USER_ID\";\r\n\r\nexport const ADD_PERIODIC_PRESSURE_TEST = \"ADD_PERIODIC_PRESSURE_TEST\";\r\nexport const DELETE_PERIODIC_PRESSURE_TEST = \"DELETE_PERIODIC_PRESSURE_TEST\";\r\n\r\nexport const EDIT_DAILY_VALUES = \"EDIT_DAILY_VALUES\";\r\nexport const SET_OMITTED_DAILY_TEST = \"SET_OMITTED_DAILY_TEST\";\r\nexport const UPDATE_NUMBER_OF_TOTAL_AND_DONE_TESTS_AND_STATE =\r\n  \"UPDATE_NUMBER_OF_TOTAL_AND_DONE_TESTS_AND_STATE\";\r\n\r\nexport const CALCULATE_AVERAGE_RESULTS = \"CALCULATE_AVERAGE_RESULTS\";\r\n","import {\r\n  ADD_PROFILE,\r\n  DELETE_PROFILE,\r\n  SET_SELECTED_USER_ID,\r\n  ADD_PERIODIC_PRESSURE_TEST,\r\n  DELETE_PERIODIC_PRESSURE_TEST,\r\n  EDIT_DAILY_VALUES,\r\n  SET_OMITTED_DAILY_TEST,\r\n  UPDATE_NUMBER_OF_TOTAL_AND_DONE_TESTS_AND_STATE,\r\n  CALCULATE_AVERAGE_RESULTS,\r\n} from \"./../types/\";\r\nimport { IUser, IPeriodicPressureTests } from \"./../../common/interfaces\";\r\nimport { TimeOfDayStates } from \"../../common/constants\";\r\n\r\nexport const addProfile = (newProfile: IUser) => ({\r\n  type: ADD_PROFILE,\r\n  newUser: newProfile,\r\n});\r\n\r\nexport const deleteProfile = (deletedProfileID: number) => ({\r\n  type: DELETE_PROFILE,\r\n  idToDelete: deletedProfileID,\r\n});\r\n\r\nexport const setSelectedUserID = (id: number) => ({\r\n  type: SET_SELECTED_USER_ID,\r\n  selectedUserID: id,\r\n});\r\n\r\nexport const addPeriodicPressureTest = (\r\n  userID: number,\r\n  newTest: IPeriodicPressureTests\r\n) => ({\r\n  type: ADD_PERIODIC_PRESSURE_TEST,\r\n  userID,\r\n  newPeriodicTest: newTest,\r\n});\r\n\r\nexport const deletePeriodicPressureTest = (\r\n  userID: number,\r\n  idToDelete: number\r\n) => ({ type: DELETE_PERIODIC_PRESSURE_TEST, userID, idToDelete });\r\n\r\nexport const editDailyValues = (\r\n  userID: number,\r\n  periodicID: number,\r\n  dailyID: number,\r\n  timeOfDay: TimeOfDayStates,\r\n  sys: number,\r\n  dia: number,\r\n  pulse: number\r\n) => ({\r\n  type: EDIT_DAILY_VALUES,\r\n  userID,\r\n  periodicID,\r\n  dailyID,\r\n  timeOfDay,\r\n  sys,\r\n  dia,\r\n  pulse,\r\n});\r\n\r\nexport const setOmittedDailyTest = (\r\n  userID: number,\r\n  periodicID: number,\r\n  dailyID: number,\r\n  timeOfDay: TimeOfDayStates,\r\n  omitted: boolean\r\n) => ({\r\n  type: SET_OMITTED_DAILY_TEST,\r\n  userID,\r\n  periodicID,\r\n  dailyID,\r\n  timeOfDay,\r\n  omitted,\r\n});\r\n\r\nexport const updateNumberOfTotalAndDoneTestsAndState = (\r\n  userID: number,\r\n  periodicID: number\r\n) => ({\r\n  type: UPDATE_NUMBER_OF_TOTAL_AND_DONE_TESTS_AND_STATE,\r\n  userID,\r\n  periodicID,\r\n});\r\n\r\nexport const calculateAverageResults = (\r\n  userID: number,\r\n  periodicID: number\r\n) => ({\r\n  type: CALCULATE_AVERAGE_RESULTS,\r\n  userID,\r\n  periodicID,\r\n});\r\n","import styled from \"styled-components\";\r\nimport {\r\n  COLORS,\r\n  TRANSITION_TIME,\r\n  CORNER_RADIUS,\r\n} from \"./../../../styles/variables\";\r\n\r\nexport const BasicButtonStyled = styled.button`\r\n  padding: 3px 10px;\r\n  color: ${COLORS.white};\r\n  font-size: 12px;\r\n  text-transform: uppercase;\r\n  background-color: ${COLORS.darkGray};\r\n  border: none;\r\n  border-radius: ${CORNER_RADIUS};\r\n  outline-style: none;\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    transition: ${TRANSITION_TIME};\r\n\r\n    :hover {\r\n      background-color: ${COLORS.gray};\r\n    }\r\n  }\r\n\r\n  :disabled {\r\n    background-color: ${COLORS.grayWithOpacity};\r\n    color: ${COLORS.lightGray};\r\n\r\n    @media (min-width: 1024px) {\r\n      cursor: no-drop;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { BasicButtonStyled } from \"./SharedBasicButton.css\";\r\n\r\nexport const SharedBasicButton: React.FC<IProps> = ({\r\n  onClick,\r\n  isDisabled,\r\n  children,\r\n}) => (\r\n  <BasicButtonStyled onClick={onClick} disabled={isDisabled}>\r\n    {children}\r\n  </BasicButtonStyled>\r\n);\r\n\r\ninterface IProps {\r\n  onClick: () => void;\r\n  isDisabled?: boolean;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { COLORS, TRANSITION_TIME } from \"../../../styles/variables\";\r\n\r\nexport const DeleteButtonStyled = styled.button`\r\n  background-color: ${COLORS.transparent};\r\n  border: none;\r\n  outline: none;\r\n\r\n  @media (min-width: 1024px) {\r\n    cursor: pointer;\r\n  }\r\n\r\n  i {\r\n    font-size: 16px;\r\n    color: ${COLORS.red};\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 18px;\r\n      transition: ${TRANSITION_TIME};\r\n\r\n      :hover {\r\n        transform: scale(1.3);\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { DeleteButtonStyled } from \"./SharedDeleteButton.css\";\r\n\r\nexport const SharedDeleteButton: React.FC<IProps> = ({ deleteFunction }) => (\r\n  <DeleteButtonStyled onClick={() => deleteFunction()}>\r\n    <i className=\"fas fa-trash\"></i>\r\n  </DeleteButtonStyled>\r\n);\r\n\r\ninterface IProps {\r\n  deleteFunction: () => void;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { COLORS, CORNER_RADIUS } from \"../variables\";\r\n\r\nexport const LiElement = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 90%;\r\n  margin-bottom: 20px;\r\n  padding: 10px;\r\n  list-style: none;\r\n  background-color: ${COLORS.lightGray};\r\n  border-radius: ${CORNER_RADIUS};\r\n  list-style: none;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { COLORS } from \"../../../styles/variables\";\r\nimport { LiElement } from \"./../../../styles/mixins/LiElement\";\r\n\r\nexport const Wrapper = styled(LiElement)``;\r\n\r\nexport const UserData = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 10px;\r\n  border-bottom: 2px solid ${COLORS.darkGray};\r\n\r\n  p {\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Options = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { SharedBasicButton } from \"../../Buttons/SharedBasicButton/SharedBasicButton\";\r\nimport { SharedDeleteButton } from \"../../Buttons/SharedDeleteButton/SharedDeleteButton\";\r\nimport { Wrapper, UserData, Options } from \"./UserProfile.css\";\r\n\r\nexport const UserProfile: React.FC<UserProfileProps> = ({\r\n  id,\r\n  name,\r\n  age,\r\n  deleteProfile,\r\n  selectUserID,\r\n}) => {\r\n  const history = useHistory();\r\n  return (\r\n    <Wrapper>\r\n      <UserData>\r\n        <p>{name}</p>\r\n        <p>wiek: {age}</p>\r\n      </UserData>\r\n      <Options>\r\n        <SharedBasicButton\r\n          onClick={() => {\r\n            selectUserID(id);\r\n            history.push(\"/measurements\");\r\n          }}\r\n        >\r\n          Otwórz profil\r\n        </SharedBasicButton>\r\n        <SharedDeleteButton deleteFunction={() => deleteProfile(id, name)} />\r\n      </Options>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\ninterface UserProfileProps {\r\n  id: number;\r\n  name: string;\r\n  age: number;\r\n  deleteProfile: (id: number, name: string) => void;\r\n  selectUserID: (id: number) => void;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { COLORS, CORNER_RADIUS } from \"./../variables\";\r\n\r\nexport const PopupWrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  border-radius: ${CORNER_RADIUS};\r\n  box-shadow: 0 0 5px ${COLORS.black};\r\n`;\r\n\r\nexport const PopupTitleGreen = styled.div`\r\n  flex-basis: 20%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  background-color: ${COLORS.green};\r\n  border-top-left-radius: ${CORNER_RADIUS};\r\n  border-top-right-radius: ${CORNER_RADIUS};\r\n\r\n  p {\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    color: ${COLORS.white};\r\n    text-transform: uppercase;\r\n\r\n    @media (min-width: 411px) {\r\n      font-size: 22px;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 24px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PopupTitleRed = styled(PopupTitleGreen)`\r\n  background-color: ${COLORS.red};\r\n`;\r\n\r\nexport const PopupContentWrapper = styled.div`\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 0 15px;\r\n  background-color: ${COLORS.white};\r\n  border-bottom-left-radius: ${CORNER_RADIUS};\r\n  border-bottom-right-radius: ${CORNER_RADIUS};\r\n`;\r\n\r\nexport const PopupForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  div {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    label {\r\n      margin-right: 10px;\r\n      font-size: 14px;\r\n\r\n      @media (min-width: 411px) {\r\n        font-size: 16px;\r\n      }\r\n\r\n      @media (min-width: 768px) {\r\n        font-size: 17px;\r\n      }\r\n    }\r\n\r\n    input {\r\n      height: 30px;\r\n      width: 60%;\r\n      padding: 5px;\r\n      border: none;\r\n      border-bottom: 3px solid ${COLORS.green};\r\n      outline-style: none;\r\n      font-size: 16px;\r\n\r\n      @media (min-width: 768px) {\r\n        font-size: 17px;\r\n      }\r\n\r\n      @media (min-width: 1024px) {\r\n        width: 30%;\r\n      }\r\n\r\n      :focus {\r\n        font-weight: bold;\r\n        border-bottom: 3px solid ${COLORS.orange};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PopupSelect = styled.select`\r\n  color: ${COLORS.black};\r\n  font-size: 16px;\r\n  outline-style: none;\r\n  border: none;\r\n  border-bottom: 3px solid ${COLORS.green};\r\n  cursor: pointer;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 17px;\r\n  }\r\n\r\n  :focus {\r\n    font-weight: bold;\r\n    border-bottom: 3px solid ${COLORS.orange};\r\n  }\r\n`;\r\n\r\nexport const PopupSelectOption = styled.option`\r\n  font-size: 12px;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { PopupWrapper, PopupForm } from \"./../../../styles/mixins/Popups\";\r\n\r\nexport const Wrapper = styled(PopupWrapper)`\r\n  width: 80%;\r\n  height: 35%;\r\n\r\n  @media (orientation: landscape) {\r\n    width: 45%;\r\n    height: 50%;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    width: 40%;\r\n    height: 45%;\r\n  }\r\n\r\n  @media (min-width: 768px) and (orientation: portrait) {\r\n    width: 40%;\r\n    height: 25%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 30%;\r\n    height: 33%;\r\n  }\r\n`;\r\n\r\nexport const FormStyled = styled(PopupForm)`\r\n  align-items: flex-start;\r\n\r\n  .label-input {\r\n    justify-content: flex-start;\r\n\r\n    input {\r\n      @media (min-width: 1024px) {\r\n        width: 45%;\r\n      }\r\n    }\r\n  }\r\n\r\n  .apply-button {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    width: 100%;\r\n  }\r\n`;\r\n","import { PopupSelectOption } from \"./../styles/mixins/Popups\";\r\n\r\nexport const numRangeOptions = (minValue: number, maxValue: number) => {\r\n  let numbers = [];\r\n\r\n  for (let i = minValue; i <= maxValue; i++) {\r\n    numbers.push(i);\r\n  }\r\n\r\n  return numbers.map((item) => (\r\n    <PopupSelectOption key={item} value={item}>\r\n      {item}\r\n    </PopupSelectOption>\r\n  ));\r\n};\r\n\r\nexport const elementsListOptions = (elementsList: any[]) => {\r\n  let elements = [];\r\n\r\n  for (let i = 0; i < elementsList.length; i++) {\r\n    elements.push(elementsList[i]);\r\n  }\r\n\r\n  return elements.map((item) => (\r\n    <PopupSelectOption key={item} value={item}>\r\n      {item}\r\n    </PopupSelectOption>\r\n  ));\r\n};\r\n","import styled from \"styled-components\";\r\nimport {\r\n  COLORS,\r\n  TRANSITION_TIME,\r\n  CORNER_RADIUS,\r\n} from \"./../../../styles/variables\";\r\n\r\nexport const ApplyButtonStyled = styled.button`\r\n  padding: 5px 10px;\r\n  background-color: ${COLORS.green};\r\n  border: none;\r\n  border-radius: ${CORNER_RADIUS};\r\n  cursor: pointer;\r\n  transition: ${TRANSITION_TIME};\r\n  color: ${COLORS.white};\r\n  outline: none;\r\n\r\n  @media (min-width: 1024px) {\r\n    :hover {\r\n      background-color: ${COLORS.darkGreen};\r\n    }\r\n  }\r\n\r\n  :focus {\r\n    box-shadow: 0 0 5px ${COLORS.gray};\r\n  }\r\n\r\n  i {\r\n    font-weight: bold;\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 18px;\r\n    }\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ApplyButtonStyled } from \"./SharedApplyButton.css\";\r\n\r\nexport enum SharedApplyButtonType {\r\n  submit = \"submit\",\r\n  basic = \"button\",\r\n}\r\n\r\nexport const SharedApplyButton: React.FC<IProps> = ({\r\n  type = SharedApplyButtonType.basic,\r\n  setIsOpen,\r\n  getResponse,\r\n  submitFunction,\r\n}) => (\r\n  <ApplyButtonStyled\r\n    onClick={(e) => {\r\n      if (setIsOpen) setIsOpen(false);\r\n      if (getResponse) getResponse(true);\r\n      if (submitFunction) submitFunction(e);\r\n    }}\r\n    type={type}\r\n  >\r\n    <i className=\"fas fa-check\"></i>\r\n  </ApplyButtonStyled>\r\n);\r\n\r\ninterface IProps {\r\n  type?: SharedApplyButtonType;\r\n  setIsOpen?: React.Dispatch<React.SetStateAction<boolean>>;\r\n  getResponse?: (res: boolean) => void;\r\n  submitFunction?: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { ApplyButtonStyled } from \"../SharedApplyButton/SharedApplyButton.css\";\r\nimport { COLORS } from \"../../../styles/variables\";\r\n\r\nexport const DenyButtonStyled = styled(ApplyButtonStyled)`\r\n  padding: 5px 12px;\r\n  background-color: ${COLORS.red};\r\n\r\n  @media (min-width: 1024px) {\r\n    :hover {\r\n      background-color: ${COLORS.darkRed};\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { DenyButtonStyled } from \"./SharedDenyButton.css\";\r\n\r\nexport const SharedDenyButton: React.FC<IProps> = ({\r\n  setIsOpen,\r\n  getResponse,\r\n}) => (\r\n  <DenyButtonStyled\r\n    onClick={() => {\r\n      if (setIsOpen) setIsOpen(false);\r\n      if (getResponse) getResponse(false);\r\n    }}\r\n  >\r\n    <i className=\"fas fa-times\"></i>\r\n  </DenyButtonStyled>\r\n);\r\n\r\ninterface IProps {\r\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  getResponse?: (res: boolean) => void;\r\n}\r\n","import styled from \"styled-components\";\r\nimport {\r\n  PopupWrapper,\r\n  PopupTitleRed,\r\n  PopupContentWrapper,\r\n} from \"./../../../styles/mixins/Popups\";\r\nimport { COLORS } from \"../../../styles/variables\";\r\n\r\nexport const Wrapper = styled(PopupWrapper)`\r\n  width: 80%;\r\n  height: 25%;\r\n\r\n  @media (orientation: landscape) {\r\n    width: 60%;\r\n    height: 45%;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    width: 50%;\r\n    height: 20%;\r\n  }\r\n\r\n  @media (min-width: 768px) and (orientation: landscape) {\r\n    width: 50%;\r\n    height: 40%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 30%;\r\n    height: 25%;\r\n  }\r\n`;\r\n\r\nexport const Title = styled(PopupTitleRed)`\r\n  flex-basis: 30%;\r\n`;\r\n\r\nexport const Content = styled(PopupContentWrapper)`\r\n  p {\r\n    display: block;\r\n    width: 100%;\r\n    text-align: center;\r\n    color: ${COLORS.black};\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 18px;\r\n    }\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const BtnWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n","import { IPeriodicPressureTests, IUser } from \"./interfaces\";\r\n\r\nexport enum PeriodicTestStates {\r\n  DONE = \"Zakończono\",\r\n  IN_PROGRESS = \"W realizacji\",\r\n}\r\n\r\nexport enum TimeOfDayStates {\r\n  MORNING = \"Rano\",\r\n  EVENING = \"Wieczór\",\r\n}\r\n\r\nexport const MAX_SYS_DIA_PULSE_VALUE = 250;\r\n\r\nexport const emptyPeriodicTest: IPeriodicPressureTests = {\r\n  id: 0,\r\n  start: \"\",\r\n  end: \"\",\r\n  days: 0,\r\n  state: \"\",\r\n  totalNumberOfTests: 0,\r\n  numberOfTestsDone: 0,\r\n  averageResults: {\r\n    morning: {\r\n      SYS: 0,\r\n      DIA: 0,\r\n      PULSE: 0,\r\n    },\r\n    evening: {\r\n      SYS: 0,\r\n      DIA: 0,\r\n      PULSE: 0,\r\n    },\r\n    total: {\r\n      SYS: 0,\r\n      DIA: 0,\r\n      PULSE: 0,\r\n    },\r\n  },\r\n  list: [],\r\n};\r\n\r\nexport const anonymous: IUser = {\r\n  id: -1,\r\n  name: \"Anonim\",\r\n  age: 0,\r\n  userBloodPressureBasedOnAge: {\r\n    MIN: { SYS: 0, DIA: 0 },\r\n    NORMAL: { SYS: 0, DIA: 0 },\r\n    MAX: { SYS: 0, DIA: 0 },\r\n  },\r\n  nextAvailablePeriodicTestID: 0,\r\n  periodicPressureTests: [],\r\n};\r\n","import React from \"react\";\r\nimport { SharedApplyButton } from \"../../Buttons/SharedApplyButton/SharedApplyButton\";\r\nimport { SharedDenyButton } from \"../../Buttons/SharedDenyButton/SharedDenyButton\";\r\nimport { Wrapper, Title, Content, BtnWrapper } from \"./Warnings.css\";\r\n\r\nexport const Warnings: React.FC<IProps> = ({ message, setIsOpen }) => (\r\n  <Wrapper>\r\n    <Title>\r\n      <p>Uwaga!</p>\r\n    </Title>\r\n    <Content>\r\n      <p>{message}</p>\r\n      <SharedApplyButton setIsOpen={setIsOpen} />\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nexport const WarningsYesNo: React.FC<IPropsYesNo> = ({\r\n  message,\r\n  setIsOpen,\r\n  response,\r\n}) => (\r\n  <Wrapper>\r\n    <Title>\r\n      <p>Uwaga!</p>\r\n    </Title>\r\n    <Content>\r\n      <p>{message}</p>\r\n      <BtnWrapper>\r\n        <SharedDenyButton setIsOpen={setIsOpen} getResponse={response} />\r\n        <SharedApplyButton setIsOpen={setIsOpen} getResponse={response} />\r\n      </BtnWrapper>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\ninterface IProps {\r\n  message: string;\r\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\ninterface IPropsYesNo extends IProps {\r\n  response: (res: boolean) => void;\r\n}\r\n","import { IBloodPressureBasedOnAge } from \"./interfaces\";\r\n\r\nexport const bloodPressureTable: bloodPressure[] = [\r\n  {\r\n    age: 1,\r\n    MIN: {\r\n      SYS: 75,\r\n      DIA: 50,\r\n    },\r\n    NORMAL: {\r\n      SYS: 90,\r\n      DIA: 60,\r\n    },\r\n    MAX: {\r\n      SYS: 110,\r\n      DIA: 75,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 5,\r\n    MIN: {\r\n      SYS: 70,\r\n      DIA: 85,\r\n    },\r\n    NORMAL: {\r\n      SYS: 95,\r\n      DIA: 65,\r\n    },\r\n    MAX: {\r\n      SYS: 110,\r\n      DIA: 79,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 13,\r\n    MIN: {\r\n      SYS: 90,\r\n      DIA: 60,\r\n    },\r\n    NORMAL: {\r\n      SYS: 105,\r\n      DIA: 70,\r\n    },\r\n    MAX: {\r\n      SYS: 115,\r\n      DIA: 80,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 19,\r\n    MIN: {\r\n      SYS: 105,\r\n      DIA: 73,\r\n    },\r\n    NORMAL: {\r\n      SYS: 117,\r\n      DIA: 77,\r\n    },\r\n    MAX: {\r\n      SYS: 120,\r\n      DIA: 81,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 24,\r\n    MIN: {\r\n      SYS: 107,\r\n      DIA: 75,\r\n    },\r\n    NORMAL: {\r\n      SYS: 120,\r\n      DIA: 79,\r\n    },\r\n    MAX: {\r\n      SYS: 132,\r\n      DIA: 83,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 29,\r\n    MIN: {\r\n      SYS: 109,\r\n      DIA: 76,\r\n    },\r\n    NORMAL: {\r\n      SYS: 121,\r\n      DIA: 80,\r\n    },\r\n    MAX: {\r\n      SYS: 133,\r\n      DIA: 84,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 34,\r\n    MIN: {\r\n      SYS: 110,\r\n      DIA: 77,\r\n    },\r\n    NORMAL: {\r\n      SYS: 122,\r\n      DIA: 81,\r\n    },\r\n    MAX: {\r\n      SYS: 134,\r\n      DIA: 85,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 39,\r\n    MIN: {\r\n      SYS: 111,\r\n      DIA: 78,\r\n    },\r\n    NORMAL: {\r\n      SYS: 123,\r\n      DIA: 82,\r\n    },\r\n    MAX: {\r\n      SYS: 135,\r\n      DIA: 86,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 44,\r\n    MIN: {\r\n      SYS: 112,\r\n      DIA: 79,\r\n    },\r\n    NORMAL: {\r\n      SYS: 125,\r\n      DIA: 83,\r\n    },\r\n    MAX: {\r\n      SYS: 137,\r\n      DIA: 87,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 49,\r\n    MIN: {\r\n      SYS: 115,\r\n      DIA: 80,\r\n    },\r\n    NORMAL: {\r\n      SYS: 127,\r\n      DIA: 84,\r\n    },\r\n    MAX: {\r\n      SYS: 139,\r\n      DIA: 88,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 54,\r\n    MIN: {\r\n      SYS: 116,\r\n      DIA: 81,\r\n    },\r\n    NORMAL: {\r\n      SYS: 129,\r\n      DIA: 85,\r\n    },\r\n    MAX: {\r\n      SYS: 142,\r\n      DIA: 89,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 59,\r\n    MIN: {\r\n      SYS: 118,\r\n      DIA: 82,\r\n    },\r\n    NORMAL: {\r\n      SYS: 131,\r\n      DIA: 86,\r\n    },\r\n    MAX: {\r\n      SYS: 144,\r\n      DIA: 90,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 64,\r\n    MIN: {\r\n      SYS: 121,\r\n      DIA: 83,\r\n    },\r\n    NORMAL: {\r\n      SYS: 134,\r\n      DIA: 87,\r\n    },\r\n    MAX: {\r\n      SYS: 147,\r\n      DIA: 91,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 65,\r\n    MIN: {\r\n      SYS: 123,\r\n      DIA: 85,\r\n    },\r\n    NORMAL: {\r\n      SYS: 135,\r\n      DIA: 88,\r\n    },\r\n    MAX: {\r\n      SYS: 148,\r\n      DIA: 94,\r\n    },\r\n  },\r\n];\r\n\r\nexport const findUserBloodPressureBasedOnAge = (age: number) =>\r\n  bloodPressureTable.find((bloodTable) => {\r\n    if (age <= bloodTable.age) {\r\n      return bloodTable;\r\n    }\r\n    return bloodTable.age === 65;\r\n  });\r\n\r\ninterface bloodPressure extends IBloodPressureBasedOnAge {\r\n  age: number;\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const PortalBG = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 999;\r\n  background-color: rgba(255, 255, 255, 0.4);\r\n`;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport { PortalBG } from \"./Portal.css\";\r\n\r\nexport enum PortalTarget {\r\n  MODAL = \"modal-portal\",\r\n  ROOT = \"root\",\r\n}\r\n\r\nexport const Portal: React.FC<IProps> = ({ target, children }) => {\r\n  const domElement = document.getElementById(target);\r\n\r\n  return domElement\r\n    ? ReactDom.createPortal(<PortalBG>{children}</PortalBG>, domElement)\r\n    : null;\r\n};\r\n\r\ninterface IProps {\r\n  target: PortalTarget;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { COLORS, TRANSITION_TIME } from \"../../../styles/variables\";\r\n\r\nexport const ExitButtonStyled = styled.button`\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n  background-color: ${COLORS.transparent};\r\n  border: none;\r\n  outline: none;\r\n\r\n  @media (min-width: 1024px) {\r\n    cursor: pointer;\r\n  }\r\n\r\n  i {\r\n    font-size: 14px;\r\n    color: ${COLORS.white};\r\n\r\n    @media (min-width: 411px) {\r\n      font-size: 15px;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 16px;\r\n    }\r\n\r\n    @media (min-width: 1024px) {\r\n      transition: ${TRANSITION_TIME};\r\n\r\n      :hover {\r\n        color: ${COLORS.darkGray};\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ExitButtonStyled } from \"./SharedExitButton.css\";\r\n\r\nexport const SharedExitButton: React.FC<IProps> = ({ setIsOpen }) => (\r\n  <ExitButtonStyled onClick={() => setIsOpen(false)}>\r\n    <i className=\"fas fa-times-circle\"></i>\r\n  </ExitButtonStyled>\r\n);\r\n\r\ninterface IProps {\r\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  PopupContentWrapper,\r\n  PopupTitleGreen,\r\n  PopupSelect,\r\n} from \"./../../../styles/mixins/Popups\";\r\nimport { Wrapper, FormStyled } from \"./AddUser.css\";\r\nimport { numRangeOptions } from \"./../../../common/optionsForSelectTag\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IGlobalState, IUser } from \"./../../../common/interfaces\";\r\nimport { Warnings } from \"./../../Popups/Warnings/Warnings\";\r\nimport { addProfile } from \"./../../../store/actions/profilesAction\";\r\nimport { findUserBloodPressureBasedOnAge } from \"./../../../common/bloodPressureTable\";\r\nimport { anonymous } from \"./../../../common/constants\";\r\nimport { Portal, PortalTarget } from \"./../../../common/Portal/Portal\";\r\nimport { SharedExitButton } from \"../../Buttons/SharedExitButton/SharedExitButton\";\r\nimport {\r\n  SharedApplyButton,\r\n  SharedApplyButtonType,\r\n} from \"../../Buttons/SharedApplyButton/SharedApplyButton\";\r\n\r\nexport const AddUser: React.FC<IProps> = ({ setIsOpenAddUserPopup }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState(1);\r\n  const dispatch = useDispatch();\r\n  const profiles = useSelector((state: IGlobalState) => state.profiles);\r\n  const { nextAvailableUserID } = profiles;\r\n  const [isOpenPortal, setIsOpenPortal] = useState(false);\r\n  const [popup, setPopup] = useState(Object);\r\n  const renderOptionsAge = numRangeOptions(1, 120);\r\n\r\n  const handleSubmit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault();\r\n\r\n    if (name === \"\") {\r\n      setPopup(\r\n        <Warnings\r\n          message=\"Puste pole, podaj imię :)\"\r\n          setIsOpen={setIsOpenPortal}\r\n        />\r\n      );\r\n      setIsOpenPortal(true);\r\n    } else if (name.length >= 15) {\r\n      setPopup(\r\n        <Warnings\r\n          message=\"Podane imię jest za długie. (max 15 znaków)\"\r\n          setIsOpen={setIsOpenPortal}\r\n        />\r\n      );\r\n      setIsOpenPortal(true);\r\n    } else {\r\n      const getUserBloodPressure =\r\n        findUserBloodPressureBasedOnAge(age) ||\r\n        anonymous.userBloodPressureBasedOnAge;\r\n\r\n      const newProfile: IUser = {\r\n        id: nextAvailableUserID,\r\n        name: name,\r\n        age: age,\r\n        userBloodPressureBasedOnAge: {\r\n          MIN: getUserBloodPressure?.MIN,\r\n          NORMAL: getUserBloodPressure?.NORMAL,\r\n          MAX: getUserBloodPressure?.MAX,\r\n        },\r\n        nextAvailablePeriodicTestID: 1,\r\n        periodicPressureTests: [],\r\n      };\r\n      setName(\"\");\r\n      setAge(1);\r\n      dispatch(addProfile(newProfile));\r\n      setIsOpenAddUserPopup(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PopupTitleGreen>\r\n        <p>Nowy profil</p>\r\n      </PopupTitleGreen>\r\n      <PopupContentWrapper>\r\n        <FormStyled>\r\n          <div className=\"label-input\">\r\n            <label htmlFor=\"name\">Imię: </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <div className=\"label-input\">\r\n            <label htmlFor=\"age\">Wiek: </label>\r\n            <PopupSelect\r\n              value={age}\r\n              id=\"age\"\r\n              onChange={(e) => setAge(parseInt(e.target.value))}\r\n              name=\"age\"\r\n            >\r\n              {renderOptionsAge}\r\n            </PopupSelect>\r\n          </div>\r\n          <div className=\"apply-button\">\r\n            <SharedApplyButton\r\n              type={SharedApplyButtonType.submit}\r\n              submitFunction={handleSubmit}\r\n            />\r\n          </div>\r\n        </FormStyled>\r\n      </PopupContentWrapper>\r\n      <SharedExitButton setIsOpen={setIsOpenAddUserPopup} />\r\n      {isOpenPortal ? (\r\n        <Portal target={PortalTarget.MODAL}>{popup}</Portal>\r\n      ) : null}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  setIsOpenAddUserPopup: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { COLORS, CORNER_RADIUS } from \"../variables\";\r\n\r\nexport const Fieldset = styled.fieldset`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 5px;\r\n  border: 2px solid ${COLORS.gray};\r\n  border-radius: ${CORNER_RADIUS};\r\n  overflow: hidden;\r\n\r\n  ul {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    flex-wrap: nowrap;\r\n    height: 100%;\r\n    margin: 10px 0;\r\n    overflow: auto;\r\n  }\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n  padding: 0 5px;\r\n  font-size: 16px;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  color: ${COLORS.darkGray};\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n  }\r\n\r\n  span {\r\n    color: ${COLORS.blue};\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Fieldset } from \"../../styles/mixins/Fieldset\";\r\n\r\nexport const ProfilesSelectorStyled = styled(Fieldset)`\r\n  width: 90%;\r\n  height: 70%;\r\n\r\n  @media (orientation: landscape) {\r\n    width: 70%;\r\n    height: 80%;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    width: 45%;\r\n    height: 70%;\r\n  }\r\n\r\n  @media (min-width: 768px) and (orientation: portrait) {\r\n    width: 45%;\r\n    height: 60%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 40%;\r\n    height: 75%;\r\n  }\r\n\r\n  ul {\r\n    height: 80%;\r\n\r\n    @media (orientation: landscape) {\r\n      height: 75%;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      height: 85%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UsersWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 80%;\r\n  padding: 10px;\r\n  overflow: auto;\r\n\r\n  @media (orientation: landscape) {\r\n    height: 75%;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    height: 85%;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/BG.1eeb38f6.jpg\";","import styled from \"styled-components\";\r\nimport { COLORS, CORNER_RADIUS } from \"./../../styles/variables\";\r\n\r\nexport const PageWrapperStyled = styled.div`\r\n  flex-grow: 1;\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: ${COLORS.white};\r\n  border-bottom-left-radius: ${CORNER_RADIUS};\r\n  border-bottom-right-radius: ${CORNER_RADIUS};\r\n  overflow: hidden;\r\n  z-index: 1;\r\n\r\n  img {\r\n    position: absolute;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    opacity: 0.15;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport BackGround from \"./../../images/BG.jpg\";\r\nimport { PageWrapperStyled } from \"./SharedPageWrapper.css\";\r\n\r\nexport const SharedPageWrapper: React.FC = ({ children }) => (\r\n  <PageWrapperStyled>\r\n    <img src={BackGround} alt=\"Sphygmomanometer\" />\r\n    {children}\r\n  </PageWrapperStyled>\r\n);\r\n","import styled from \"styled-components\";\r\nimport {\r\n  COLORS,\r\n  CORNER_RADIUS,\r\n  TRANSITION_TIME,\r\n} from \"./../../../styles/variables\";\r\n\r\nexport const AddButtonStyled = styled.button`\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 10px;\r\n  background-color: ${COLORS.transparent};\r\n  border: 2px solid ${COLORS.transparent};\r\n  border-radius: 50%;\r\n  outline-style: none;\r\n\r\n  @media (min-width: 411px) and (orientation: landscape) {\r\n    bottom: 10px;\r\n    right: 10px;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    bottom: 10px;\r\n    right: 10px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    bottom: 10px;\r\n    right: 20px;\r\n    cursor: pointer;\r\n\r\n    :hover > div {\r\n      display: block;\r\n      animation: move ${TRANSITION_TIME} both;\r\n\r\n      @keyframes move {\r\n        from {\r\n          right: 0;\r\n          opacity: 0;\r\n        }\r\n        to {\r\n          right: 105%;\r\n          opacity: 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  :focus {\r\n    border: 2px solid ${COLORS.orange};\r\n  }\r\n\r\n  :disabled {\r\n    :hover > div {\r\n      display: none;\r\n      animation: none;\r\n    }\r\n\r\n    i {\r\n      color: ${COLORS.gray};\r\n\r\n      :hover {\r\n        color: ${COLORS.gray};\r\n      }\r\n    }\r\n\r\n    @media (min-width: 1024px) {\r\n      cursor: no-drop;\r\n    }\r\n  }\r\n\r\n  div {\r\n    display: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 0;\r\n    padding: 5px 10px;\r\n    transform: translateY(-50%);\r\n    background-color: ${COLORS.blue};\r\n    border-radius: ${CORNER_RADIUS};\r\n\r\n    p {\r\n      font-size: 12px;\r\n      font-weight: bold;\r\n      white-space: nowrap;\r\n      color: ${COLORS.white};\r\n    }\r\n  }\r\n\r\n  i {\r\n    font-size: 30px;\r\n    color: ${COLORS.green};\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 40px;\r\n      transition: ${TRANSITION_TIME};\r\n\r\n      :hover {\r\n        color: ${COLORS.darkGreen};\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { AddButtonStyled } from \"./SharedAddButton.css\";\r\n\r\nexport const SharedAddButton: React.FC<IProps> = ({\r\n  addFunction,\r\n  hoverDescription,\r\n  disabled,\r\n}) => (\r\n  <AddButtonStyled onClick={() => addFunction()} disabled={disabled}>\r\n    <div>\r\n      <p>{hoverDescription}</p>\r\n    </div>\r\n    <i className=\"fas fa-plus-circle\"></i>\r\n  </AddButtonStyled>\r\n);\r\n\r\ninterface IProps {\r\n  addFunction: () => void;\r\n  hoverDescription: string;\r\n  disabled?: boolean;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  deleteProfile,\r\n  setSelectedUserID,\r\n} from \"./../../store/actions/profilesAction\";\r\nimport { UserProfile } from \"./UserProfile/UserProfile\";\r\nimport { AddUser } from \"./../Popups/AddUser/AddUser\";\r\nimport { WarningsYesNo } from \"./../Popups/Warnings/Warnings\";\r\nimport { Portal, PortalTarget } from \"./../../common/Portal/Portal\";\r\nimport { IGlobalState } from \"./../../common/interfaces\";\r\nimport { ProfilesSelectorStyled } from \"./ProfilesSelector.css\";\r\nimport { SharedPageWrapper } from \"./../SharedPageWrapper/SharedPageWrapper\";\r\nimport { Legend } from \"./../../styles/mixins/Fieldset\";\r\nimport { SharedAddButton } from \"../Buttons/SharedAddButton/SharedAddButton\";\r\n\r\nexport const ProfilesSelector: React.FC = () => {\r\n  const [isOpenPortal, setIsOpenPortal] = useState(false);\r\n  const [popup, setPopup] = useState<Object>({});\r\n  const users = useSelector((state: IGlobalState) => state.profiles.users);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDeleteProfile = (id: number, name: string) => {\r\n    setPopup(\r\n      <WarningsYesNo\r\n        message={`Usunąć użytkownika ${name}?`}\r\n        setIsOpen={setIsOpenPortal}\r\n        response={(res: boolean) => res && dispatch(deleteProfile(id))}\r\n      />\r\n    );\r\n    setIsOpenPortal(true);\r\n  };\r\n\r\n  const handleAddNewProfile = () => {\r\n    setPopup(<AddUser setIsOpenAddUserPopup={setIsOpenPortal} />);\r\n    setIsOpenPortal(true);\r\n  };\r\n\r\n  const handleSelectUserID = (id: number) => dispatch(setSelectedUserID(id));\r\n\r\n  const renderUsers =\r\n    users.map(({ id, name, age }) => (\r\n      <UserProfile\r\n        key={id}\r\n        id={id}\r\n        name={name}\r\n        age={age}\r\n        deleteProfile={handleDeleteProfile}\r\n        selectUserID={handleSelectUserID}\r\n      />\r\n    )) || [];\r\n\r\n  const legendTitle = renderUsers.length\r\n    ? \"Użytkownicy\"\r\n    : \"Dodaj pierwszego użytkownika\";\r\n\r\n  return (\r\n    <SharedPageWrapper>\r\n      <ProfilesSelectorStyled>\r\n        <Legend>{legendTitle}</Legend>\r\n        <ul>{renderUsers}</ul>\r\n        <SharedAddButton\r\n          addFunction={handleAddNewProfile}\r\n          hoverDescription={\"Dodaj nowego użytkownika\"}\r\n        />\r\n      </ProfilesSelectorStyled>\r\n      {isOpenPortal ? (\r\n        <Portal target={PortalTarget.MODAL}>{popup}</Portal>\r\n      ) : null}\r\n    </SharedPageWrapper>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { PopupWrapper, PopupForm } from \"./../../../styles/mixins/Popups\";\r\n\r\nexport const Wrapper = styled(PopupWrapper)`\r\n  width: 90%;\r\n  height: 35%;\r\n\r\n  @media (orientation: landscape) {\r\n    width: 60%;\r\n    height: 55%;\r\n  }\r\n\r\n  @media (min-width: 768px) and (orientation: landscape) {\r\n    width: 55%;\r\n    height: 50%;\r\n  }\r\n\r\n  @media (min-width: 768px) and (orientation: portrait) {\r\n    width: 55%;\r\n    height: 25%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 38%;\r\n    height: 33%;\r\n  }\r\n\r\n  @media (min-width: 1250px) {\r\n    width: 30%;\r\n    height: 33%;\r\n  }\r\n`;\r\n\r\nexport const FormStyled = styled(PopupForm)`\r\n  align-items: flex-start;\r\n  div {\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n\r\n    input {\r\n      width: 60%;\r\n    }\r\n  }\r\n\r\n  .apply-button {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    width: 100%;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addPeriodicPressureTest } from \"./../../../store/actions/profilesAction\";\r\nimport { numRangeOptions } from \"./../../../common/optionsForSelectTag\";\r\nimport {\r\n  generateDateArray,\r\n  generateDailyTestList,\r\n} from \"./AddPeriodicTestFunctions\";\r\nimport { PeriodicTestStates } from \"./../../../common/constants\";\r\nimport { SharedExitButton } from \"../../Buttons/SharedExitButton/SharedExitButton\";\r\nimport {\r\n  PopupContentWrapper,\r\n  PopupTitleGreen,\r\n  PopupSelect,\r\n} from \"./../../../styles/mixins/Popups\";\r\nimport { Wrapper, FormStyled } from \"./AddPeriodicTest.css\";\r\nimport {\r\n  SharedApplyButton,\r\n  SharedApplyButtonType,\r\n} from \"../../Buttons/SharedApplyButton/SharedApplyButton\";\r\n\r\nconst today = new Date();\r\n\r\nexport const AddPeriodicTest: React.FC<IProps> = ({\r\n  userID,\r\n  nextAvailablePeriodicTestID,\r\n  setIsOpenAddPeriodicTestPopup,\r\n}) => {\r\n  const [startDay, setStartDay] = useState(today.toISOString().slice(0, 10));\r\n  const [days, setDays] = useState(4);\r\n  const dispatch = useDispatch();\r\n  const renderOptionsDays = numRangeOptions(1, 7);\r\n\r\n  const handleSubmit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault();\r\n    const getDateArray = generateDateArray(startDay, days);\r\n    const getDailyTestList = generateDailyTestList(getDateArray);\r\n    const newPeriodicTest = {\r\n      id: nextAvailablePeriodicTestID,\r\n      start: getDateArray[0],\r\n      end: getDateArray[getDateArray.length - 1],\r\n      days: days,\r\n      state: PeriodicTestStates.IN_PROGRESS,\r\n      totalNumberOfTests: days * 2,\r\n      numberOfTestsDone: 0,\r\n      averageResults: {\r\n        morning: {\r\n          SYS: 0,\r\n          DIA: 0,\r\n          PULSE: 0,\r\n        },\r\n        evening: {\r\n          SYS: 0,\r\n          DIA: 0,\r\n          PULSE: 0,\r\n        },\r\n        total: {\r\n          SYS: 0,\r\n          DIA: 0,\r\n          PULSE: 0,\r\n        },\r\n      },\r\n      list: getDailyTestList,\r\n    };\r\n    dispatch(addPeriodicPressureTest(userID, newPeriodicTest));\r\n    setIsOpenAddPeriodicTestPopup(false);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PopupTitleGreen>\r\n        <p>Nowy pomiar okresowy</p>\r\n      </PopupTitleGreen>\r\n      <PopupContentWrapper>\r\n        <FormStyled>\r\n          <div>\r\n            <label htmlFor=\"dateStart\">Dzień rozpoczęcia: </label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"dateStart\"\r\n              value={startDay}\r\n              onChange={(e) => setStartDay(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"days\">Ilość dni: </label>\r\n            <PopupSelect\r\n              value={days}\r\n              id=\"days\"\r\n              onChange={(e) => setDays(Number(e.target.value))}\r\n            >\r\n              {renderOptionsDays}\r\n            </PopupSelect>\r\n          </div>\r\n          <div className=\"apply-button\">\r\n            <SharedApplyButton\r\n              type={SharedApplyButtonType.submit}\r\n              submitFunction={handleSubmit}\r\n            />\r\n          </div>\r\n        </FormStyled>\r\n      </PopupContentWrapper>\r\n      <SharedExitButton setIsOpen={setIsOpenAddPeriodicTestPopup} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  userID: number;\r\n  nextAvailablePeriodicTestID: number;\r\n  setIsOpenAddPeriodicTestPopup: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n","import { TimeOfDayStates } from \"./../../../common/constants\";\r\nimport { IDailyTest } from \"./../../../common/interfaces\";\r\n\r\nexport const generateDateArray = (startDashDate: string, numOfDays: number) => {\r\n  const arrDate = startDashDate.split(\"-\");\r\n  const year = Number(arrDate[0]);\r\n  const month = Number(arrDate[1]);\r\n  const day = Number(arrDate[2]);\r\n  const dateList = [];\r\n  for (let i = 0; i < numOfDays; i++) {\r\n    const date = Date.UTC(year, month - 1, day + i, 0, 0, 0);\r\n    let dateWithDots = new Intl.DateTimeFormat(\"pl\").format(date);\r\n    if (dateWithDots[1] === \".\") dateWithDots = `0${dateWithDots}`;\r\n    dateList.push(dateWithDots);\r\n  }\r\n  return dateList;\r\n};\r\n\r\nexport const generateDailyTestList = (dateList: string[]) => {\r\n  const itemList: IDailyTest[] = dateList.map((date, index) => ({\r\n    id: index + 1,\r\n    date: date,\r\n    morning: {\r\n      timeOfDay: TimeOfDayStates.MORNING,\r\n      omitted: false,\r\n      SYS: 0,\r\n      DIA: 0,\r\n      PULSE: 0,\r\n    },\r\n    evening: {\r\n      timeOfDay: TimeOfDayStates.EVENING,\r\n      omitted: false,\r\n      SYS: 0,\r\n      DIA: 0,\r\n      PULSE: 0,\r\n    },\r\n  }));\r\n  return itemList;\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Fieldset } from \"./../../../styles/mixins/Fieldset\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 15px;\r\n  opacity: 0.95;\r\n  overflow: hidden;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 70%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 60%;\r\n  }\r\n`;\r\n\r\nexport const FieldsetStyled = styled(Fieldset)`\r\n  padding-bottom: 15px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { COLORS } from \"../../../../styles/variables\";\r\nimport { LiElement } from \"./../../../../styles/mixins/LiElement\";\r\n\r\nexport const Wrapper = styled(LiElement)`\r\n  @media (orientation: landscape) {\r\n    width: 55%;\r\n  }\r\n\r\n  @media (orientation: landscape) and (min-width: 768px) {\r\n    width: 45%;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  margin-bottom: 10px;\r\n  font-size: 16px;\r\n  color: ${COLORS.black};\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 18px;\r\n  }\r\n\r\n  span {\r\n    font-size: 18px;\r\n    color: ${COLORS.blue};\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Subtitle = styled.div`\r\n  margin-bottom: 5px;\r\n  padding: 4px 10px;\r\n  border-bottom: 2px solid ${COLORS.blue};\r\n  border-top: 2px solid ${COLORS.blue};\r\n\r\n  p {\r\n    color: ${COLORS.black};\r\n    font-size: 12px;\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 14px;\r\n    }\r\n    span {\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Info = styled.p`\r\n  font-size: 12px;\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 14px;\r\n  }\r\n\r\n  span {\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nexport const Btns = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin-top: 10px;\r\n  width: 90%;\r\n`;\r\n","import React from \"react\";\r\nimport { IPeriodicPressureTests } from \"../../../../common/interfaces\";\r\nimport { SharedBasicButton } from \"./../../../Buttons/SharedBasicButton/SharedBasicButton\";\r\nimport { SharedDeleteButton } from \"../../../Buttons/SharedDeleteButton/SharedDeleteButton\";\r\nimport { Wrapper, Title, Subtitle, Info, Btns } from \"./PeriodicTest.css\";\r\n\r\nexport const PeriodicTest: React.FC<IProps> = ({\r\n  test,\r\n  openPeriodicTestDetails,\r\n  deletePeriodicTest,\r\n}) => {\r\n  const {\r\n    id,\r\n    start,\r\n    end,\r\n    days,\r\n    state,\r\n    totalNumberOfTests,\r\n    numberOfTestsDone,\r\n  } = test;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>\r\n        Pomiar okresowy <span>#{id}</span>\r\n      </Title>\r\n      <Subtitle>\r\n        <p>\r\n          od <span>{start}</span> do <span>{end}</span>\r\n        </p>\r\n      </Subtitle>\r\n\r\n      <Info>\r\n        Ilość dni: <span>{days}</span>\r\n      </Info>\r\n\r\n      <Info>\r\n        Wykonane testy: <span>{numberOfTestsDone}</span>/\r\n        <span>{totalNumberOfTests}</span>\r\n      </Info>\r\n\r\n      <Info>\r\n        Status: <span>{state}</span>\r\n      </Info>\r\n\r\n      <Btns>\r\n        <SharedBasicButton onClick={() => openPeriodicTestDetails(id)}>\r\n          Szczegóły...\r\n        </SharedBasicButton>\r\n        <SharedDeleteButton deleteFunction={() => deletePeriodicTest(id)} />\r\n      </Btns>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  test: IPeriodicPressureTests;\r\n  openPeriodicTestDetails: (id: number) => void;\r\n  deletePeriodicTest: (id: number) => void;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { AddPeriodicTest } from \"../../Popups/AddPeriodicTest/AddPeriodicTest\";\r\nimport { IPeriodicPressureTests } from \"../../../common/interfaces\";\r\nimport { Portal, PortalTarget } from \"../../../common/Portal/Portal\";\r\nimport { Wrapper, FieldsetStyled } from \"./PeriodicTestsList.css\";\r\nimport { PeriodicTest } from \"./PeriodicTest/PeriodicTest\";\r\nimport { Legend } from \"./../../../styles/mixins/Fieldset\";\r\nimport { SharedAddButton } from \"../../Buttons/SharedAddButton/SharedAddButton\";\r\nimport { deletePeriodicPressureTest } from \"./../../../store/actions/profilesAction\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { WarningsYesNo } from \"./../../Popups/Warnings/Warnings\";\r\n\r\nexport const PeriodicTestsList: React.FC<IProps> = ({\r\n  userID,\r\n  tests,\r\n  nextAvailablePeriodicTestID,\r\n  openPeriodicTestDetails,\r\n}) => {\r\n  const [isOpenPortal, setIsOpenPortal] = useState(false);\r\n  const [popup, setPopup] = useState<Object>({});\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDeletePeriodicTest = (id: number) => {\r\n    setIsOpenPortal(true);\r\n    setPopup(\r\n      <WarningsYesNo\r\n        message={`Usunąć pomiar okresowy #${id}?`}\r\n        setIsOpen={setIsOpenPortal}\r\n        response={(res: boolean) =>\r\n          res && dispatch(deletePeriodicPressureTest(userID, id))\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleAddPeriodicTest = () => {\r\n    setPopup(\r\n      <AddPeriodicTest\r\n        userID={userID}\r\n        nextAvailablePeriodicTestID={nextAvailablePeriodicTestID}\r\n        setIsOpenAddPeriodicTestPopup={setIsOpenPortal}\r\n      />\r\n    );\r\n    setIsOpenPortal(true);\r\n  };\r\n\r\n  const renderPeriodicTests =\r\n    tests.map((test) => (\r\n      <PeriodicTest\r\n        key={test.id}\r\n        test={test}\r\n        openPeriodicTestDetails={openPeriodicTestDetails}\r\n        deletePeriodicTest={handleDeletePeriodicTest}\r\n      />\r\n    )) || [];\r\n\r\n  const legendTitle =\r\n    userID === -1\r\n      ? \"Brak użytkownika\"\r\n      : renderPeriodicTests.length\r\n      ? \"Twoje pomiary okresowe\"\r\n      : \"Dodaj swój pierwszy pomiar\";\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FieldsetStyled>\r\n        <Legend>{legendTitle}</Legend>\r\n        <ul>{renderPeriodicTests}</ul>\r\n        <SharedAddButton\r\n          addFunction={handleAddPeriodicTest}\r\n          hoverDescription={\"Dodaj nowy pomiar\"}\r\n          disabled={userID === -1}\r\n        />\r\n        {isOpenPortal ? (\r\n          <Portal target={PortalTarget.MODAL}>{popup}</Portal>\r\n        ) : null}\r\n      </FieldsetStyled>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  userID: number;\r\n  nextAvailablePeriodicTestID: number;\r\n  tests: IPeriodicPressureTests[];\r\n  openPeriodicTestDetails: (id: number) => void;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { PopupWrapper, PopupForm } from \"./../../../styles/mixins/Popups\";\r\n\r\nexport const Wrapper = styled(PopupWrapper)`\r\n  width: 80%;\r\n  height: 35%;\r\n\r\n  @media (orientation: landscape) {\r\n    width: 45%;\r\n    height: 55%;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    width: 40%;\r\n    height: 45%;\r\n  }\r\n\r\n  @media (min-width: 768px) and (orientation: landscape) {\r\n    width: 40%;\r\n    height: 60%;\r\n  }\r\n\r\n  @media (min-width: 768px) and (orientation: portrait) {\r\n    width: 40%;\r\n    height: 25%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 25%;\r\n    height: 40%;\r\n  }\r\n`;\r\n\r\nexport const FormStyled = styled(PopupForm)`\r\n  div {\r\n    width: 60%;\r\n\r\n    @media (min-width: 1024px) {\r\n      width: 80%;\r\n    }\r\n\r\n    input {\r\n      width: 30%;\r\n\r\n      @media (min-width: 1024px) {\r\n        width: 35%;\r\n      }\r\n    }\r\n  }\r\n\r\n  .apply-button {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    width: 100%;\r\n  }\r\n`;\r\n","import { IUser } from \"../../../common/interfaces\";\r\nimport {\r\n  TimeOfDayStates,\r\n  MAX_SYS_DIA_PULSE_VALUE,\r\n} from \"./../../../common/constants\";\r\n\r\nexport const getDailyTimeOfDayTestValues = (\r\n  users: IUser[],\r\n  userID: number,\r\n  periodicID: number,\r\n  dailyID: number,\r\n  timeOfDay: TimeOfDayStates\r\n) => {\r\n  let testValues: {\r\n    timeOfDay: TimeOfDayStates;\r\n    omitted: boolean;\r\n    SYS: number;\r\n    DIA: number;\r\n    PULSE: number;\r\n  } = {\r\n    timeOfDay: TimeOfDayStates.MORNING,\r\n    omitted: false,\r\n    SYS: 0,\r\n    DIA: 0,\r\n    PULSE: 0,\r\n  };\r\n\r\n  users.forEach((user) => {\r\n    if (user.id === userID) {\r\n      user.periodicPressureTests.forEach((periodicTest) => {\r\n        if (periodicTest.id === periodicID) {\r\n          periodicTest.list.forEach((test) => {\r\n            if (test.id === dailyID && test.morning.timeOfDay === timeOfDay) {\r\n              testValues = test.morning;\r\n            } else if (\r\n              test.id === dailyID &&\r\n              test.evening.timeOfDay === timeOfDay\r\n            ) {\r\n              testValues = test.evening;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  const { SYS, DIA, PULSE } = testValues;\r\n  const sysValue = SYS !== 0 ? SYS.toString() : \"\";\r\n  const diaValue = DIA !== 0 ? DIA.toString() : \"\";\r\n  const pulseValue = PULSE !== 0 ? PULSE.toString() : \"\";\r\n\r\n  return {\r\n    currentSys: sysValue,\r\n    currentDia: diaValue,\r\n    currentPulse: pulseValue,\r\n  };\r\n};\r\n\r\nexport enum ValidateStateTypes {\r\n  notEnough = \"notEnough\",\r\n  tooMuch = \"tooMuch\",\r\n  badSign = \"badSign\",\r\n  correct = \"correct\",\r\n}\r\n\r\nexport const validateValues = (\r\n  sys: string,\r\n  dia: string,\r\n  pulse: string\r\n): IValidateValues => {\r\n  if (Number(sys) < 0 || Number(dia) < 0 || Number(pulse) < 0) {\r\n    return {\r\n      state: ValidateStateTypes.notEnough,\r\n      message: \"Conajmniej jedno pole zawiera ujemną wartość.\",\r\n    };\r\n  } else if (\r\n    Number(sys) > MAX_SYS_DIA_PULSE_VALUE ||\r\n    Number(dia) > MAX_SYS_DIA_PULSE_VALUE ||\r\n    Number(pulse) > MAX_SYS_DIA_PULSE_VALUE\r\n  ) {\r\n    return {\r\n      state: ValidateStateTypes.tooMuch,\r\n      message: `Conajmniej jedno pole zawiera zbyt dużą wartość. (max ${MAX_SYS_DIA_PULSE_VALUE})`,\r\n    };\r\n  } else if (\r\n    /\\D/gi.test(sys) ||\r\n    /\\D/gi.test(dia) ||\r\n    /\\D/gi.test(pulse) ||\r\n    sys === \"\" ||\r\n    dia === \"\" ||\r\n    pulse === \"\"\r\n  ) {\r\n    return {\r\n      state: ValidateStateTypes.badSign,\r\n      message: \"Conajmniej jedno pole ma nieprawidłową wartość.\",\r\n    };\r\n  }\r\n  return {\r\n    state: ValidateStateTypes.correct,\r\n    message: \"\",\r\n  };\r\n};\r\n\r\ninterface IValidateValues {\r\n  state: ValidateStateTypes;\r\n  message: string;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  PopupTitleGreen,\r\n  PopupContentWrapper,\r\n} from \"./../../../styles/mixins/Popups\";\r\nimport { Wrapper, FormStyled } from \"./EditDailyTest.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Warnings } from \"./../../Popups/Warnings/Warnings\";\r\nimport {\r\n  editDailyValues,\r\n  updateNumberOfTotalAndDoneTestsAndState,\r\n} from \"./../../../store/actions/profilesAction\";\r\nimport { TimeOfDayStates } from \"./../../../common/constants\";\r\nimport { Portal, PortalTarget } from \"./../../../common/Portal/Portal\";\r\nimport { SharedExitButton } from \"../../Buttons/SharedExitButton/SharedExitButton\";\r\nimport {\r\n  SharedApplyButton,\r\n  SharedApplyButtonType,\r\n} from \"../../Buttons/SharedApplyButton/SharedApplyButton\";\r\nimport { IGlobalState } from \"../../../common/interfaces\";\r\nimport {\r\n  getDailyTimeOfDayTestValues,\r\n  validateValues,\r\n  ValidateStateTypes,\r\n} from \"./EditDailyTestFunctions\";\r\n\r\nexport const EditDailyTest: React.FC<IProps> = ({\r\n  userID,\r\n  periodicID,\r\n  dailyID,\r\n  timeOfDay,\r\n  setIsOpenEditDailyTestPopup,\r\n  date,\r\n}) => {\r\n  const users = useSelector((state: IGlobalState) => state.profiles.users);\r\n  const currentTestValuesToRender = getDailyTimeOfDayTestValues(\r\n    users,\r\n    userID,\r\n    periodicID,\r\n    dailyID,\r\n    timeOfDay\r\n  );\r\n  const { currentSys, currentDia, currentPulse } = currentTestValuesToRender;\r\n  const [sys, setSys] = useState(currentSys);\r\n  const [dia, setDia] = useState(currentDia);\r\n  const [pulse, setPulse] = useState(currentPulse);\r\n  const [isOpenPortal, setIsOpenPortal] = useState(false);\r\n  const [popup, setPopup] = useState(Object);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault();\r\n    const checkValues = validateValues(sys, dia, pulse);\r\n    if (checkValues.state === ValidateStateTypes.notEnough) {\r\n      setPopup(\r\n        <Warnings message={checkValues.message} setIsOpen={setIsOpenPortal} />\r\n      );\r\n      setIsOpenPortal(true);\r\n    } else if (checkValues.state === ValidateStateTypes.tooMuch) {\r\n      setPopup(\r\n        <Warnings message={checkValues.message} setIsOpen={setIsOpenPortal} />\r\n      );\r\n      setIsOpenPortal(true);\r\n    } else if (checkValues.state === ValidateStateTypes.badSign) {\r\n      setPopup(\r\n        <Warnings message={checkValues.message} setIsOpen={setIsOpenPortal} />\r\n      );\r\n      setIsOpenPortal(true);\r\n    } else if (checkValues.state === ValidateStateTypes.correct) {\r\n      dispatch(\r\n        editDailyValues(\r\n          userID,\r\n          periodicID,\r\n          dailyID,\r\n          timeOfDay,\r\n          Number(sys),\r\n          Number(dia),\r\n          Number(pulse)\r\n        )\r\n      );\r\n      dispatch(updateNumberOfTotalAndDoneTestsAndState(userID, periodicID));\r\n      setIsOpenEditDailyTestPopup(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PopupTitleGreen>\r\n        <p>{`${\r\n          timeOfDay === TimeOfDayStates.MORNING\r\n            ? TimeOfDayStates.MORNING\r\n            : TimeOfDayStates.EVENING\r\n        } ${date}`}</p>\r\n      </PopupTitleGreen>\r\n      <PopupContentWrapper>\r\n        <FormStyled>\r\n          <div>\r\n            <label htmlFor=\"sys\">SYS: </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"sys\"\r\n              value={sys}\r\n              onChange={(e) => setSys(e.target.value)}\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"dia\">DIA: </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"dia\"\r\n              value={dia}\r\n              onChange={(e) => setDia(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"pulse\">PULS: </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"pulse\"\r\n              value={pulse}\r\n              onChange={(e) => setPulse(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"apply-button\">\r\n            <SharedApplyButton\r\n              type={SharedApplyButtonType.submit}\r\n              submitFunction={handleSubmit}\r\n            />\r\n          </div>\r\n        </FormStyled>\r\n      </PopupContentWrapper>\r\n      <SharedExitButton setIsOpen={setIsOpenEditDailyTestPopup} />\r\n      {isOpenPortal ? (\r\n        <Portal target={PortalTarget.MODAL}>{popup}</Portal>\r\n      ) : null}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  userID: number;\r\n  periodicID: number;\r\n  dailyID: number;\r\n  timeOfDay: TimeOfDayStates;\r\n  setIsOpenEditDailyTestPopup: React.Dispatch<React.SetStateAction<boolean>>;\r\n  date: string;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { Fieldset, Legend } from \"./../../../../styles/mixins/Fieldset\";\r\nimport { LiElement } from \"./../../../../styles/mixins/LiElement\";\r\nimport { COLORS } from \"../../../../styles/variables\";\r\n\r\nexport const Wrapper = styled(LiElement)`\r\n  @media (orientation: landscape) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 50%;\r\n  }\r\n\r\n  h4 {\r\n    text-align: center;\r\n    padding: 5px 0;\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 19px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FieldsetStyled = styled(Fieldset)`\r\n  margin-bottom: 10px;\r\n  border-color: ${({ sys, dia, pulse }: IProps) =>\r\n    sys > 0 && dia > 0 && pulse > 0 ? COLORS.darkGreen : COLORS.red} !important;\r\n  border-color: ${({ omitted }: IProps) =>\r\n    omitted ? COLORS.gray : \"\"} !important;\r\n`;\r\n\r\nexport const MorningEvening = styled(Legend)`\r\n  p {\r\n    color: ${({ sys, dia, pulse }: IProps) =>\r\n      sys > 0 && dia > 0 && pulse > 0 ? COLORS.darkGreen : COLORS.red};\r\n    color: ${({ omitted }: IProps) => (omitted ? COLORS.gray : \"\")} !important;\r\n  }\r\n`;\r\n\r\nexport const SysDiaPuls = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  width: 100%;\r\n\r\n  p {\r\n    span {\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SysAndDiaColored = styled.span`\r\n  color: ${(props: { color: string }) => props.color};\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const Btns = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  width: 100%;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\ninterface IProps {\r\n  sys: number;\r\n  dia: number;\r\n  pulse: number;\r\n  omitted?: boolean;\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { anonymous } from \"../../../../common/constants\";\r\nimport { IDailyTest, IGlobalState } from \"../../../../common/interfaces\";\r\nimport { COLORS } from \"../../../../styles/variables\";\r\nimport { SharedBasicButton } from \"../../../Buttons/SharedBasicButton/SharedBasicButton\";\r\nimport {\r\n  FieldsetStyled,\r\n  MorningEvening as MorningEveningStyled,\r\n  SysDiaPuls,\r\n  SysAndDiaColored,\r\n  Btns,\r\n} from \"./DailyTest.css\";\r\n\r\nenum sysDiaType {\r\n  SYS = \"SYS\",\r\n  DIA = \"DIA\",\r\n}\r\n\r\nexport const MorningEveningDetails: React.FC<IProps> = ({\r\n  userID,\r\n  dailyTest,\r\n  timeOfDayType,\r\n  editDailyTest,\r\n  setOmittedDaily,\r\n}) => {\r\n  const { id, date } = dailyTest;\r\n  const userBloodPressureBasedOnAge = useSelector(\r\n    (state: IGlobalState) =>\r\n      state.profiles.users.find((user) => userID === user.id)\r\n        ?.userBloodPressureBasedOnAge\r\n  );\r\n  const { MIN, MAX } =\r\n    userBloodPressureBasedOnAge || anonymous.userBloodPressureBasedOnAge;\r\n\r\n  const getSysDiaColor = (value: number, type: sysDiaType) => {\r\n    if (value === 0) return COLORS.black;\r\n    else if (\r\n      (value <= MIN.SYS && type === sysDiaType.SYS) ||\r\n      (value <= MIN.DIA && type === sysDiaType.DIA)\r\n    )\r\n      return COLORS.blue;\r\n    else if (\r\n      (value >= MAX.SYS && type === sysDiaType.SYS) ||\r\n      (value >= MAX.DIA && type === sysDiaType.DIA)\r\n    )\r\n      return COLORS.red;\r\n    return COLORS.darkGreen;\r\n  };\r\n\r\n  return (\r\n    <FieldsetStyled\r\n      sys={dailyTest[timeOfDayType].SYS}\r\n      dia={dailyTest[timeOfDayType].DIA}\r\n      pulse={dailyTest[timeOfDayType].PULSE}\r\n      omitted={dailyTest[timeOfDayType].omitted}\r\n    >\r\n      <MorningEveningStyled\r\n        sys={dailyTest[timeOfDayType].SYS}\r\n        dia={dailyTest[timeOfDayType].DIA}\r\n        pulse={dailyTest[timeOfDayType].PULSE}\r\n        omitted={dailyTest[timeOfDayType].omitted}\r\n      >\r\n        <p>{dailyTest[timeOfDayType].timeOfDay}</p>\r\n      </MorningEveningStyled>\r\n      <SysDiaPuls>\r\n        <p>\r\n          Ciśnienie:{\" \"}\r\n          <SysAndDiaColored\r\n            color={\r\n              dailyTest[timeOfDayType].omitted\r\n                ? COLORS.gray\r\n                : getSysDiaColor(dailyTest[timeOfDayType].SYS, sysDiaType.SYS)\r\n            }\r\n          >\r\n            {dailyTest[timeOfDayType].SYS}\r\n          </SysAndDiaColored>\r\n          /\r\n          <SysAndDiaColored\r\n            color={\r\n              dailyTest[timeOfDayType].omitted\r\n                ? COLORS.gray\r\n                : getSysDiaColor(dailyTest[timeOfDayType].DIA, sysDiaType.DIA)\r\n            }\r\n          >\r\n            {dailyTest[timeOfDayType].DIA}\r\n          </SysAndDiaColored>\r\n        </p>\r\n        <p>\r\n          Puls: <span>{dailyTest[timeOfDayType].PULSE}</span>\r\n        </p>\r\n      </SysDiaPuls>\r\n      <Btns>\r\n        <SharedBasicButton\r\n          onClick={() =>\r\n            editDailyTest(id, dailyTest[timeOfDayType].timeOfDay, date)\r\n          }\r\n          isDisabled={dailyTest[timeOfDayType].omitted}\r\n        >\r\n          Edytuj\r\n        </SharedBasicButton>\r\n        <SharedBasicButton\r\n          onClick={() =>\r\n            setOmittedDaily(\r\n              id,\r\n              dailyTest[timeOfDayType].timeOfDay,\r\n              !dailyTest[timeOfDayType].omitted\r\n            )\r\n          }\r\n        >\r\n          {dailyTest[timeOfDayType].omitted ? \"Przywróć\" : \"Pomiń\"}\r\n        </SharedBasicButton>\r\n      </Btns>\r\n    </FieldsetStyled>\r\n  );\r\n};\r\n\r\nexport enum timeOfDayType {\r\n  morning = \"morning\",\r\n  evenign = \"evening\",\r\n}\r\n\r\ninterface IProps {\r\n  userID: number;\r\n  dailyTest: IDailyTest;\r\n  timeOfDayType: timeOfDayType;\r\n  editDailyTest: Function;\r\n  setOmittedDaily: Function;\r\n}\r\n","import React from \"react\";\r\nimport { IDailyTest } from \"./../../../../common/interfaces\";\r\nimport { MorningEveningDetails, timeOfDayType } from \"./MorningEveningDetails\";\r\nimport { Wrapper } from \"./DailyTest.css\";\r\n\r\nexport const DailyTest: React.FC<IProps> = ({\r\n  userID,\r\n  dailyTest,\r\n  editDailyTest,\r\n  setOmittedDaily,\r\n}) => {\r\n  const { id, date } = dailyTest;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <h4>\r\n        Dzień {id} - (<span>{date}</span>)\r\n      </h4>\r\n\r\n      <MorningEveningDetails\r\n        userID={userID}\r\n        dailyTest={dailyTest}\r\n        timeOfDayType={timeOfDayType.morning}\r\n        editDailyTest={editDailyTest}\r\n        setOmittedDaily={setOmittedDaily}\r\n      />\r\n\r\n      <MorningEveningDetails\r\n        userID={userID}\r\n        dailyTest={dailyTest}\r\n        timeOfDayType={timeOfDayType.evenign}\r\n        editDailyTest={editDailyTest}\r\n        setOmittedDaily={setOmittedDaily}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  userID: number;\r\n  dailyTest: IDailyTest;\r\n  editDailyTest: Function;\r\n  setOmittedDaily: Function;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { Fieldset } from \"./../../../styles/mixins/Fieldset\";\r\nimport { COLORS, TRANSITION_TIME } from \"./../../../styles/variables\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 15px;\r\n  opacity: 0.95;\r\n  overflow: hidden;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 70%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 60%;\r\n  }\r\n`;\r\n\r\nexport const FieldsetStyled = styled(Fieldset)`\r\n  padding-bottom: 40px;\r\n`;\r\n\r\nexport const ControlPanel = styled.div`\r\n  display: flex;\r\n  padding: 5px 5px 0;\r\n\r\n  .buttons-wapper {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    width: 100%;\r\n\r\n    button {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const BackArrow = styled.button`\r\n  justify-self: flex-start;\r\n  background-color: transparent;\r\n  border: none;\r\n  outline: none;\r\n\r\n  i {\r\n    font-size: 28px;\r\n    color: ${COLORS.orange};\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 30px;\r\n      cursor: pointer;\r\n      transition: ${TRANSITION_TIME};\r\n      :hover {\r\n        color: ${COLORS.darkGray};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// export const SummaryBtn = styled(GrayButton)`\r\n//   margin-left: auto;\r\n// `;\r\n\r\n// export const PdfBtn = styled(GrayButton)`\r\n//   margin-left: 10px;\r\n// `;\r\n","import styled from \"styled-components\";\r\nimport { Fieldset, Legend } from \"./../../../styles/mixins/Fieldset\";\r\nimport {\r\n  PopupWrapper,\r\n  PopupTitleGreen,\r\n  PopupContentWrapper,\r\n} from \"./../../../styles/mixins/Popups\";\r\n\r\nexport const Wrapper = styled(PopupWrapper)`\r\n  width: 95%;\r\n\r\n  @media (orientation: landscape) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    width: 55%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 40%;\r\n  }\r\n\r\n  @media (min-width: 1200px) {\r\n    width: 30%;\r\n  }\r\n\r\n  h1 {\r\n    margin-top: 10px;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled(PopupTitleGreen)`\r\n  padding: 15px 0;\r\n`;\r\n\r\nexport const Content = styled(PopupContentWrapper)`\r\n  justify-content: center;\r\n`;\r\n\r\nexport const FieldsetStyled = styled(Fieldset)`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  height: auto;\r\n  margin-bottom: 20px;\r\n\r\n  p {\r\n    font-size: 14px;\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 16px;\r\n    }\r\n\r\n    span {\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LegendStyled = styled(Legend)``;\r\n\r\nexport const SysAndDiaColored = styled.span`\r\n  color: ${(props: { color: string }) => props.color};\r\n  font-weight: bold;\r\n`;\r\n","import React from \"react\";\r\nimport { sysDiaType } from \"./AverageResults\";\r\nimport {\r\n  FieldsetStyled,\r\n  LegendStyled,\r\n  SysAndDiaColored,\r\n} from \"./AverageResults.css\";\r\n\r\nexport enum resultNameType {\r\n  morninig = \"morning\",\r\n  evening = \"evening\",\r\n  total = \"total\",\r\n}\r\n\r\nexport const ResultsInFieldset: React.FC<IProps> = ({\r\n  timeOfDayName,\r\n  averageResults,\r\n  resultName,\r\n  getSysDiaColor,\r\n}) => (\r\n  <FieldsetStyled>\r\n    <LegendStyled>{timeOfDayName}</LegendStyled>\r\n    <p>\r\n      SYS:{\" \"}\r\n      <SysAndDiaColored\r\n        color={getSysDiaColor(averageResults[resultName].SYS, sysDiaType.SYS)}\r\n      >\r\n        {averageResults[resultName].SYS}\r\n      </SysAndDiaColored>\r\n    </p>\r\n    <p>\r\n      DIA:{\" \"}\r\n      <SysAndDiaColored\r\n        color={getSysDiaColor(averageResults[resultName].DIA, sysDiaType.DIA)}\r\n      >\r\n        {averageResults[resultName].DIA}\r\n      </SysAndDiaColored>\r\n    </p>\r\n    <p>\r\n      PULS: <span>{averageResults[resultName].PULSE}</span>\r\n    </p>\r\n  </FieldsetStyled>\r\n);\r\n\r\ninterface IProps {\r\n  timeOfDayName: string;\r\n  averageResults: {\r\n    morning: {\r\n      SYS: number;\r\n      DIA: number;\r\n      PULSE: number;\r\n    };\r\n    evening: { SYS: number; DIA: number; PULSE: number };\r\n    total: { SYS: number; DIA: number; PULSE: number };\r\n  };\r\n  resultName: resultNameType;\r\n  getSysDiaColor: Function;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/OpenSans-Regular.1b0809d5.ttf\";","export default __webpack_public_path__ + \"static/media/OpenSans-Bold.dbb97fd9.ttf\";","import { StyleSheet, Font } from \"@react-pdf/renderer\";\r\nimport OpenSansRegular from \"./PDF_Fonts/OpenSans-Regular.ttf\";\r\nimport OpenSansBold from \"./PDF_Fonts/OpenSans-Bold.ttf\";\r\nimport { COLORS } from \"../../styles/variables\";\r\n\r\nFont.register({\r\n  family: \"OpenSansRegular\",\r\n  src: OpenSansRegular,\r\n});\r\n\r\nFont.register({\r\n  family: \"OpenSansBold\",\r\n  src: OpenSansBold,\r\n});\r\n\r\nexport const styles = StyleSheet.create({\r\n  page: {\r\n    flexDirection: \"column\",\r\n    padding: 15,\r\n    fontFamily: \"OpenSansRegular\",\r\n    backgroundColor: COLORS.white,\r\n    color: COLORS.black,\r\n  },\r\n  logoView: {\r\n    padding: \"5 15\",\r\n    marginBottom: 5,\r\n    backgroundColor: COLORS.blue,\r\n  },\r\n  logoText: {\r\n    fontSize: 18,\r\n    fontFamily: \"OpenSansBold\",\r\n    color: COLORS.white,\r\n  },\r\n  userDataView: {\r\n    padding: \"5 10\",\r\n  },\r\n  periodicTestInfoView: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 30,\r\n    marginBottom: 20,\r\n    padding: \"5 10\",\r\n  },\r\n  periodicText: {\r\n    fontSize: 16,\r\n    fontFamily: \"OpenSansBold\",\r\n  },\r\n  tableHeaderView: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    padding: \"5 0\",\r\n    marginBottom: 5,\r\n    backgroundColor: COLORS.blue,\r\n  },\r\n  tableHeaderText: {\r\n    width: \"33%\",\r\n    fontSize: 14,\r\n    textAlign: \"center\",\r\n    fontFamily: \"OpenSansBold\",\r\n    color: COLORS.white,\r\n  },\r\n  tableContentView: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    padding: \"5 0\",\r\n    marginBottom: 5,\r\n    borderBottomWidth: 1,\r\n    borderBottomStyle: \"solid\",\r\n    borderBottomColor: COLORS.darkGray,\r\n    backgroundColor: COLORS.white,\r\n  },\r\n  tableContentText: {\r\n    width: \"33%\",\r\n    fontSize: 12,\r\n    textAlign: \"center\",\r\n  },\r\n  averageTitleView: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 30,\r\n    padding: \"5 10\",\r\n  },\r\n  averageTitleText: {\r\n    fontSize: 16,\r\n    fontFamily: \"OpenSansBold\",\r\n  },\r\n  freeSpaceView: {\r\n    flexGrow: 1,\r\n  },\r\n  footerView: {\r\n    padding: \"5 10\",\r\n    marginTop: 10,\r\n    borderTopWidth: 1,\r\n    borderTopStyle: \"solid\",\r\n    borderTopColor: COLORS.darkGray,\r\n  },\r\n  fotterText: {\r\n    fontSize: 10,\r\n    textAlign: \"center\",\r\n  },\r\n  normalText: {\r\n    fontSize: 12,\r\n  },\r\n  boldText: {\r\n    fontSize: 12,\r\n    fontFamily: \"OpenSansBold\",\r\n  },\r\n});\r\n","import { View, Text } from \"@react-pdf/renderer\";\r\nimport { styles } from \"./../PdfPage.styles\";\r\n\r\nenum PropNames {\r\n  morning = \"morning\",\r\n  evening = \"evening\",\r\n  total = \"total\",\r\n}\r\n\r\nexport const AverageResultsView = ({ averageResults }: IProps) => {\r\n  const getAverage = (prop: PropNames) => {\r\n    return (\r\n      <>\r\n        <Text style={styles.boldText}>{averageResults[prop].SYS}</Text>\r\n        <Text>/</Text>\r\n        <Text style={styles.boldText}>\r\n          {averageResults[prop].DIA}\r\n        </Text> Puls: {averageResults[prop].PULSE}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderAverageMorning = getAverage(PropNames.morning);\r\n  const renderAverageEvening = getAverage(PropNames.evening);\r\n  const renderAverageTotal = getAverage(PropNames.total);\r\n\r\n  const renderAllAverageResults = (\r\n    <View style={styles.tableContentView}>\r\n      <Text style={styles.tableContentText}>{renderAverageMorning}</Text>\r\n      <Text style={styles.tableContentText}>{renderAverageEvening}</Text>\r\n      <Text style={styles.tableContentText}>{renderAverageTotal}</Text>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.averageTitleView}>\r\n        <Text style={styles.averageTitleText}>ŚREDNIE WYNIKI</Text>\r\n      </View>\r\n      <View style={styles.tableHeaderView}>\r\n        <Text style={styles.tableHeaderText}>RANO</Text>\r\n        <Text style={styles.tableHeaderText}>WIECZÓR</Text>\r\n        <Text style={styles.tableHeaderText}>ŁĄCZNIE</Text>\r\n      </View>\r\n      {renderAllAverageResults}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  averageResults: {\r\n    morning: {\r\n      SYS: number;\r\n      DIA: number;\r\n      PULSE: number;\r\n    };\r\n    evening: {\r\n      SYS: number;\r\n      DIA: number;\r\n      PULSE: number;\r\n    };\r\n    total: {\r\n      SYS: number;\r\n      DIA: number;\r\n      PULSE: number;\r\n    };\r\n  };\r\n}\r\n","import { View, Text } from \"@react-pdf/renderer\";\r\nimport { COLORS } from \"./../../../styles/variables\";\r\nimport { styles } from \"./../PdfPage.styles\";\r\n\r\nexport const LogoView = () => (\r\n  <View style={styles.logoView}>\r\n    <Text style={styles.logoText}>\r\n      BADAJ <Text style={{ color: COLORS.orange }}>CIŚNIENIE</Text>\r\n    </Text>\r\n  </View>\r\n);\r\n","import { View, Text } from \"@react-pdf/renderer\";\r\nimport { styles } from \"./../PdfPage.styles\";\r\n\r\nexport const UserDataView = ({ name, age }: IProps) => (\r\n  <View style={styles.userDataView}>\r\n    <Text style={styles.normalText}>\r\n      {`Imię: `}\r\n      <Text style={styles.boldText}>{`${name}`}</Text>\r\n      {`, wiek: `}\r\n      <Text style={styles.boldText}>{`${age}`}</Text>\r\n    </Text>\r\n  </View>\r\n);\r\n\r\ninterface IProps {\r\n  name: string;\r\n  age: number;\r\n}\r\n","import { View, Text } from \"@react-pdf/renderer\";\r\nimport { COLORS } from \"./../../../styles/variables\";\r\nimport { styles } from \"./../PdfPage.styles\";\r\n\r\nexport const PeriodicTestInfoView = ({ periodicID, start, end }: IProps) => (\r\n  <View style={styles.periodicTestInfoView}>\r\n    <Text style={styles.periodicText}>\r\n      {`Pomiar okresowy`}\r\n      <Text style={{ color: COLORS.blue }}>{` #${periodicID}`}</Text>\r\n    </Text>\r\n    <Text style={styles.normalText}>{`(od ${start} do ${end})`}</Text>\r\n  </View>\r\n);\r\n\r\ninterface IProps {\r\n  periodicID: number;\r\n  start: string;\r\n  end: string;\r\n}\r\n","import { View, Text } from \"@react-pdf/renderer\";\r\nimport { IDailyTest } from \"../../interfaces\";\r\nimport { styles } from \"./../PdfPage.styles\";\r\n\r\nexport const DailyTestsTableView = ({ list }: IProps) => {\r\n  const renderDailyTests = list.map((item) => {\r\n    const isOmmitedMorning = item.morning.omitted ? (\r\n      <Text style={styles.normalText}>---</Text>\r\n    ) : (\r\n      <>\r\n        <Text style={styles.boldText}>{item.morning.SYS}</Text>\r\n        <Text>/</Text>\r\n        <Text style={styles.boldText}>{item.morning.DIA}</Text> Puls:{\" \"}\r\n        {item.morning.PULSE}\r\n      </>\r\n    );\r\n    const isOmmitedEvenign = item.evening.omitted ? (\r\n      <Text style={styles.normalText}>---</Text>\r\n    ) : (\r\n      <>\r\n        <Text style={styles.boldText}>{item.evening.SYS}</Text>\r\n        <Text>/</Text>\r\n        <Text style={styles.boldText}>{item.evening.DIA}</Text> Puls:{\" \"}\r\n        {item.evening.PULSE}\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <View key={item.id} style={styles.tableContentView}>\r\n        <Text style={styles.tableContentText}>{`${item.date}`}</Text>\r\n        <Text style={styles.tableContentText}>{isOmmitedMorning}</Text>\r\n        <Text style={styles.tableContentText}>{isOmmitedEvenign}</Text>\r\n      </View>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.tableHeaderView}>\r\n        <Text style={styles.tableHeaderText}>DATA</Text>\r\n        <Text style={styles.tableHeaderText}>RANO</Text>\r\n        <Text style={styles.tableHeaderText}>WIECZÓR</Text>\r\n      </View>\r\n      {renderDailyTests}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  list: IDailyTest[];\r\n}\r\n","import { View, Text } from \"@react-pdf/renderer\";\r\nimport { styles } from \"./../PdfPage.styles\";\r\n\r\nexport const FooterView = () => (\r\n  <View style={styles.footerView}>\r\n    <Text style={styles.fotterText}>\r\n      Wygenerowano za pomocą strony Badaj Ciśnienie\r\n      (https://mkphercog.github.io/checkthepressure/), niniejszy dokument jest\r\n      tylko zapisem okresowego pomiaru ciśnienia krwi pacjenta. Wszelkie\r\n      oznaczenia kolorystyczne używane na stronie (min, norma, max - względem\r\n      wieku) są tylko poglądowe i nie zastąpią konsultacji z lekarzem\r\n      prowadzącym. Autor strony: Marcin Hercog\r\n    </Text>\r\n  </View>\r\n);\r\n","import { styles } from \"./PdfPage.styles\";\r\nimport { Document, Page, View } from \"@react-pdf/renderer\";\r\nimport { IUser } from \"./../interfaces\";\r\nimport { anonymous } from \"../constants\";\r\nimport { LogoView } from \"./PageViews/LogoView\";\r\nimport { UserDataView } from \"./PageViews/UserDataView\";\r\nimport { PeriodicTestInfoView } from \"./PageViews/PeriodicTestInfoView\";\r\nimport { DailyTestsTableView } from \"./PageViews/DailyTestsTableView\";\r\nimport { AverageResultsView } from \"./PageViews/AverageResultsView\";\r\nimport { FooterView } from \"./PageViews/FooterView\";\r\n\r\nexport const MyDocument = ({ user, periodicID }: IProps) => {\r\n  const { name, age, periodicPressureTests } = user;\r\n  const test = periodicPressureTests.find((test) => test.id === periodicID);\r\n  const { start, end, list, averageResults } =\r\n    test || anonymous.periodicPressureTests[0];\r\n\r\n  return (\r\n    <Document>\r\n      <Page size=\"A4\" style={styles.page}>\r\n        <LogoView />\r\n        <UserDataView name={name} age={age} />\r\n        <PeriodicTestInfoView periodicID={periodicID} start={start} end={end} />\r\n        <DailyTestsTableView list={list} />\r\n        <AverageResultsView averageResults={averageResults} />\r\n        <View style={styles.freeSpaceView}></View>\r\n        <FooterView />\r\n      </Page>\r\n    </Document>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  user: IUser;\r\n  periodicID: number;\r\n}\r\n","import styled from \"styled-components\";\r\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\r\nimport {\r\n  COLORS,\r\n  CORNER_RADIUS,\r\n  TRANSITION_TIME,\r\n} from \"./../../styles/variables\";\r\n\r\nexport const PDFDownloadLinkStyled = styled(PDFDownloadLink)`\r\n  margin-bottom: 15px;\r\n  padding: 5px 10px;\r\n  border-radius: ${CORNER_RADIUS};\r\n  background-color: ${COLORS.darkGray};\r\n  color: ${COLORS.white};\r\n  font-weight: bold;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n\r\n  @media (min-width: 1024px) {\r\n    transition: ${TRANSITION_TIME};\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n      background-color: ${COLORS.darkGreen};\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { anonymous } from \"../../../common/constants\";\r\nimport { ResultsInFieldset, resultNameType } from \"./ResultsInFieldset\";\r\nimport {\r\n  IGlobalState,\r\n  IPeriodicPressureTests,\r\n} from \"../../../common/interfaces\";\r\nimport { SharedExitButton } from \"../../Buttons/SharedExitButton/SharedExitButton\";\r\nimport { COLORS } from \"../../../styles/variables\";\r\nimport { Wrapper, Title, Content } from \"./AverageResults.css\";\r\nimport { PdfPageGenerator } from \"../../../common/PDF/PdfPageGenerator\";\r\n\r\nexport enum sysDiaType {\r\n  SYS = \"SYS\",\r\n  DIA = \"DIA\",\r\n}\r\n\r\nexport const AverageResults: React.FC<IProps> = ({\r\n  userID,\r\n  periodicTest,\r\n  setIsOpenAverageResultsPopup,\r\n}) => {\r\n  const { id, averageResults } = periodicTest;\r\n\r\n  const userBloodPressureBasedOnAge = useSelector(\r\n    (state: IGlobalState) =>\r\n      state.profiles.users.find((user) => userID === user.id)\r\n        ?.userBloodPressureBasedOnAge\r\n  );\r\n  const { MIN, MAX } =\r\n    userBloodPressureBasedOnAge || anonymous.userBloodPressureBasedOnAge;\r\n\r\n  const getSysDiaColor = (value: number, type: sysDiaType) => {\r\n    if (value === 0) return COLORS.black;\r\n    else if (\r\n      (value <= MIN.SYS && type === sysDiaType.SYS) ||\r\n      (value <= MIN.DIA && type === sysDiaType.DIA)\r\n    )\r\n      return COLORS.blue;\r\n    else if (\r\n      (value >= MAX.SYS && type === sysDiaType.SYS) ||\r\n      (value >= MAX.DIA && type === sysDiaType.DIA)\r\n    )\r\n      return COLORS.red;\r\n    return COLORS.darkGreen;\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>\r\n        <p>Podsumowanie pomiaru #{id}</p>\r\n      </Title>\r\n      <Content>\r\n        <h1>Średnie wyniki</h1>\r\n        <ResultsInFieldset\r\n          timeOfDayName={\"Rano\"}\r\n          averageResults={averageResults}\r\n          resultName={resultNameType.morninig}\r\n          getSysDiaColor={getSysDiaColor}\r\n        />\r\n        <ResultsInFieldset\r\n          timeOfDayName={\"Wieczór\"}\r\n          averageResults={averageResults}\r\n          resultName={resultNameType.evening}\r\n          getSysDiaColor={getSysDiaColor}\r\n        />\r\n        <ResultsInFieldset\r\n          timeOfDayName={\"Łącznie\"}\r\n          averageResults={averageResults}\r\n          resultName={resultNameType.total}\r\n          getSysDiaColor={getSysDiaColor}\r\n        />\r\n        <PdfPageGenerator userID={userID} periodicID={id} />\r\n      </Content>\r\n      <SharedExitButton setIsOpen={setIsOpenAverageResultsPopup} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  userID: number;\r\n  periodicTest: IPeriodicPressureTests;\r\n  setIsOpenAverageResultsPopup: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { anonymous } from \"../constants\";\r\nimport { IGlobalState } from \"../interfaces\";\r\nimport { MyDocument } from \"./PdfPage\";\r\nimport { PDFDownloadLinkStyled } from \"./PdfPageGenerator.css\";\r\n\r\nexport const PdfPageGenerator: React.FC<IProps> = ({ userID, periodicID }) => {\r\n  const user = useSelector((state: IGlobalState) =>\r\n    state.profiles.users.find((user) => user.id === userID)\r\n  );\r\n\r\n  return (\r\n    <PDFDownloadLinkStyled\r\n      document={<MyDocument user={user || anonymous} periodicID={periodicID} />}\r\n      fileName={`Pomiar_okresowy_#${periodicID}_${user?.name}.pdf`}\r\n    >\r\n      {({ blob, url, loading, error }) =>\r\n        loading ? \"Ładowanie...\" : \"Wygeneruj pdf z wynikami\"\r\n      }\r\n    </PDFDownloadLinkStyled>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  userID: number;\r\n  periodicID: number;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { IPeriodicPressureTests } from \"../../../common/interfaces\";\r\nimport { Portal, PortalTarget } from \"../../../common/Portal/Portal\";\r\nimport { EditDailyTest } from \"../../Popups/EditDailyTest/EditDailyTest\";\r\nimport { DailyTest } from \"./DailyTest/DailyTest\";\r\nimport {\r\n  setOmittedDailyTest,\r\n  updateNumberOfTotalAndDoneTestsAndState,\r\n  calculateAverageResults,\r\n} from \"./../../../store/actions/profilesAction\";\r\nimport { TimeOfDayStates } from \"./../../../common/constants\";\r\nimport {\r\n  Wrapper,\r\n  FieldsetStyled,\r\n  ControlPanel,\r\n  BackArrow,\r\n} from \"./PeriodicTestDetails.css\";\r\nimport { PeriodicTestStates } from \"./../../../common/constants\";\r\nimport { Legend } from \"./../../../styles/mixins/Fieldset\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SharedBasicButton } from \"./../../Buttons/SharedBasicButton/SharedBasicButton\";\r\nimport { AverageResults } from \"../../Popups/AverageResults/AverageResults\";\r\n\r\nexport const PeriodicTestDetails: React.FC<IProps> = ({\r\n  test,\r\n  userID,\r\n  backToPeriodicTestsList,\r\n}) => {\r\n  const [isOpenPortal, setIsOpenPortal] = useState(false);\r\n  const [popup, setPopup] = useState<Object>({});\r\n  const dispatch = useDispatch();\r\n  const { list, id: periodicID, state, totalNumberOfTests } = test;\r\n  const testIsDone =\r\n    state === PeriodicTestStates.DONE && totalNumberOfTests !== 0\r\n      ? true\r\n      : false;\r\n\r\n  const renderList = list.map((item) => (\r\n    <DailyTest\r\n      userID={userID}\r\n      key={item.id}\r\n      dailyTest={item}\r\n      editDailyTest={(\r\n        dailyID: number,\r\n        timeOfDay: TimeOfDayStates,\r\n        date: string\r\n      ) => {\r\n        setPopup(\r\n          <EditDailyTest\r\n            userID={userID}\r\n            periodicID={periodicID}\r\n            dailyID={dailyID}\r\n            timeOfDay={timeOfDay}\r\n            setIsOpenEditDailyTestPopup={setIsOpenPortal}\r\n            date={date}\r\n          />\r\n        );\r\n        setIsOpenPortal(true);\r\n      }}\r\n      setOmittedDaily={(\r\n        dailyID: number,\r\n        timeOfDay: TimeOfDayStates,\r\n        omitted: boolean\r\n      ) => {\r\n        dispatch(\r\n          setOmittedDailyTest(userID, periodicID, dailyID, timeOfDay, omitted)\r\n        );\r\n        dispatch(updateNumberOfTotalAndDoneTestsAndState(userID, periodicID));\r\n      }}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FieldsetStyled>\r\n        <Legend>\r\n          Pomiar okresowy <span>#{periodicID}</span>\r\n        </Legend>\r\n        <ControlPanel>\r\n          <BackArrow onClick={backToPeriodicTestsList}>\r\n            <i className=\"fas fa-long-arrow-alt-left\"></i>\r\n          </BackArrow>\r\n          <div className=\"buttons-wapper\">\r\n            <SharedBasicButton\r\n              onClick={() => {\r\n                dispatch(calculateAverageResults(userID, periodicID));\r\n                setPopup(\r\n                  <AverageResults\r\n                    userID={userID}\r\n                    periodicTest={test}\r\n                    setIsOpenAverageResultsPopup={setIsOpenPortal}\r\n                  />\r\n                );\r\n                setIsOpenPortal(true);\r\n              }}\r\n              isDisabled={!testIsDone}\r\n            >\r\n              Podsumowanie\r\n            </SharedBasicButton>\r\n          </div>\r\n        </ControlPanel>\r\n        <ul>{renderList}</ul>\r\n      </FieldsetStyled>\r\n      {isOpenPortal ? (\r\n        <Portal target={PortalTarget.MODAL}>{popup}</Portal>\r\n      ) : null}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  test: IPeriodicPressureTests;\r\n  userID: number;\r\n  backToPeriodicTestsList: () => void;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { PeriodicTestsList } from \"./PeriodicTestsList/PeriodicTestsList\";\r\nimport { PeriodicTestDetails } from \"./PeriodicTestDetails/PeriodicTestDetails\";\r\nimport { IUser, IPeriodicPressureTests } from \"./../../common/interfaces\";\r\nimport { emptyPeriodicTest } from \"./../../common/constants\";\r\nimport { SharedPageWrapper } from \"./../SharedPageWrapper/SharedPageWrapper\";\r\n\r\nexport const Measurements: React.FC<IProps> = ({ selectedUser }) => {\r\n  const [\r\n    openedPeriodicTest,\r\n    setOpenedPeriodicTest,\r\n  ] = useState<IPeriodicPressureTests>();\r\n  const [isOpenPeriodicTestDetails, setIsOpenPeriodicTestDetails] = useState(\r\n    false\r\n  );\r\n  const {\r\n    id,\r\n    periodicPressureTests,\r\n    nextAvailablePeriodicTestID,\r\n  } = selectedUser;\r\n\r\n  const handleOpenPeriodicTestDetails = (id: number) => {\r\n    const getOpenedPeriodicTest = periodicPressureTests.find(\r\n      (test) => id === test.id\r\n    );\r\n    setOpenedPeriodicTest(getOpenedPeriodicTest);\r\n    setIsOpenPeriodicTestDetails(true);\r\n  };\r\n\r\n  return (\r\n    <SharedPageWrapper>\r\n      {isOpenPeriodicTestDetails ? (\r\n        <PeriodicTestDetails\r\n          test={openedPeriodicTest || emptyPeriodicTest}\r\n          userID={id}\r\n          backToPeriodicTestsList={() => setIsOpenPeriodicTestDetails(false)}\r\n        />\r\n      ) : (\r\n        <PeriodicTestsList\r\n          userID={id}\r\n          tests={periodicPressureTests}\r\n          nextAvailablePeriodicTestID={nextAvailablePeriodicTestID}\r\n          openPeriodicTestDetails={handleOpenPeriodicTestDetails}\r\n        />\r\n      )}\r\n    </SharedPageWrapper>\r\n  );\r\n};\r\n\r\ninterface IProps {\r\n  selectedUser: IUser;\r\n}\r\n","import React from \"react\";\r\nimport { SharedPageWrapper } from \"./../SharedPageWrapper/SharedPageWrapper\";\r\n\r\nexport const Advices: React.FC = () => (\r\n  <SharedPageWrapper>W budowie...</SharedPageWrapper>\r\n);\r\n","import React from \"react\";\r\nimport { SharedPageWrapper } from \"./../SharedPageWrapper/SharedPageWrapper\";\r\n\r\nexport const Info: React.FC = () => (\r\n  <SharedPageWrapper>W budowie...</SharedPageWrapper>\r\n);\r\n","import styled from \"styled-components\";\r\nimport { COLORS } from \"./styles/variables\";\r\n\r\nexport const AppBG = styled.div`\r\n  position: relative;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  padding: 10px 5px;\r\n  background-color: ${COLORS.lightGray};\r\n\r\n  @media (min-width: 1024px) {\r\n    padding: 20px 10px 30px;\r\n  }\r\n`;\r\n\r\nexport const AppWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  height: 100%;\r\n  max-width: 1250px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const AppBottomBar = styled.div`\r\n  position: absolute;\r\n  height: 70px;\r\n  width: 100%;\r\n  bottom: 0;\r\n  left: 0;\r\n  background-color: ${COLORS.gray};\r\n`;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { COLORS, CORNER_RADIUS } from \"./styles/variables\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n*{\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  font-family: 'Open Sans', sans-serif;\r\n\r\n  @media (min-width: 1024px) {\r\n    ::-webkit-scrollbar {\r\n      width: 10px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n      box-shadow: inset 0 0 6px #aaa;\r\n      border-radius: ${CORNER_RADIUS};\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n      border-radius: ${CORNER_RADIUS};\r\n      background-color: ${COLORS.gray};\r\n    }\r\n  }\r\n} \r\n`;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { Navigation } from \"./components/Navigation/Navigation\";\r\nimport { UserPressureBar } from \"./components/UserPressureBar/UserPressureBar\";\r\nimport { ProfilesSelector } from \"./components/ProfilesSelector/ProfilesSelector\";\r\nimport { Measurements } from \"./components/Measurements/Measurements\";\r\nimport { Advices } from \"./components/Advices/Advices\";\r\nimport { Info } from \"./components/Info/Info\";\r\nimport { anonymous } from \"./common/constants\";\r\nimport { IGlobalState } from \"./common/interfaces\";\r\nimport { AppBG, AppWrapper, AppBottomBar } from \"./App.css\";\r\nimport { GlobalStyles } from \"./index.css\";\r\n\r\nexport const App: React.FC = () => {\r\n  const getProfiles = useSelector((state: IGlobalState) => state.profiles);\r\n  const { users, selectedUserID } = getProfiles;\r\n  const selectedUser =\r\n    users.find((user) => selectedUserID === user.id) || anonymous;\r\n  const { name, age, userBloodPressureBasedOnAge } = selectedUser;\r\n\r\n  return (\r\n    <AppBG>\r\n      <AppBottomBar />\r\n      <GlobalStyles />\r\n      <AppWrapper>\r\n        <Navigation />\r\n        {selectedUser.id !== -1 ? (\r\n          <UserPressureBar\r\n            name={name}\r\n            age={age}\r\n            userBloodPressureBasedOnAge={userBloodPressureBasedOnAge}\r\n          />\r\n        ) : null}\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <ProfilesSelector />\r\n          </Route>\r\n          <Route path=\"/measurements\">\r\n            <Measurements selectedUser={selectedUser} />\r\n          </Route>\r\n          <Route path=\"/advices\">\r\n            <Advices />\r\n          </Route>\r\n          <Route path=\"/info\">\r\n            <Info />\r\n          </Route>\r\n        </Switch>\r\n      </AppWrapper>\r\n    </AppBG>\r\n  );\r\n};\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { IUser } from \"./interfaces\";\r\n\r\nconst LOCAL_PROFILES = \"localProfiles\";\r\nconst LOCAL_SELECTED_USER_ID = \"localSelectedUserID\";\r\n\r\nexport const updateLocalStorageProfiles = (profiles: IUser[]) =>\r\n  localStorage.setItem(LOCAL_PROFILES, JSON.stringify(profiles));\r\n\r\nexport const checkLocalProfiles = () => {\r\n  const isLocalList = localStorage.getItem(LOCAL_PROFILES);\r\n  if (isLocalList === null || isLocalList === \"[]\") return false;\r\n  return true;\r\n};\r\n\r\nexport const getLocalProfiles = () =>\r\n  JSON.parse(localStorage.getItem(LOCAL_PROFILES) || \"[]\");\r\n\r\nexport const setLocalEmptyProfiles = () =>\r\n  localStorage.setItem(LOCAL_PROFILES, \"[]\");\r\n\r\nexport const updateLocalSelectedUserID = (id: number) =>\r\n  localStorage.setItem(LOCAL_SELECTED_USER_ID, JSON.stringify(id));\r\n\r\nexport const getLocalSelectedUserID = () =>\r\n  JSON.parse(localStorage.getItem(LOCAL_SELECTED_USER_ID) || \"0\");\r\n\r\nexport const setLocalSelectedUserID = () =>\r\n  localStorage.setItem(LOCAL_SELECTED_USER_ID, \"0\");\r\n\r\nexport const configInitialStateWithLocalStorage = () => {\r\n  const isLocalProfiles = checkLocalProfiles();\r\n  let localProfiles: IUser[] = [];\r\n  let localID = 0;\r\n  let localSelectedUserID = 0;\r\n\r\n  if (isLocalProfiles) {\r\n    localProfiles = getLocalProfiles();\r\n    localID = localProfiles[localProfiles.length - 1][\"id\"] + 1;\r\n    localSelectedUserID = getLocalSelectedUserID();\r\n  } else {\r\n    setLocalEmptyProfiles();\r\n    setLocalSelectedUserID();\r\n  }\r\n\r\n  return {\r\n    users: localProfiles,\r\n    nextAvailableUserID: localID,\r\n    selectedUserID: localSelectedUserID,\r\n  };\r\n};\r\n","import { PeriodicTestStates } from \"../../common/constants\";\r\nimport { IUser } from \"../../common/interfaces\";\r\nimport { IAction } from \"./profilesReducer\";\r\n\r\nexport const addPeriodicPressureTest = (\r\n  usersList: IUser[],\r\n  action: IAction\r\n) => {\r\n  const { userID, newPeriodicTest } = action;\r\n  return usersList.map((user) => {\r\n    if (user.id === userID) {\r\n      user.periodicPressureTests = [\r\n        ...user.periodicPressureTests,\r\n        newPeriodicTest,\r\n      ];\r\n      user.nextAvailablePeriodicTestID += 1;\r\n    }\r\n    return user;\r\n  });\r\n};\r\n\r\nexport const deletePeriodicPressureTest = (\r\n  usersList: IUser[],\r\n  action: IAction\r\n) => {\r\n  const { userID, idToDelete } = action;\r\n  return usersList.map((user) => {\r\n    if (user.id === userID) {\r\n      user.periodicPressureTests = user.periodicPressureTests.filter(\r\n        (test) => idToDelete !== test.id\r\n      );\r\n      user.nextAvailablePeriodicTestID = user.periodicPressureTests.length\r\n        ? user.periodicPressureTests[user.periodicPressureTests.length - 1][\r\n            \"id\"\r\n          ] + 1\r\n        : 1;\r\n    }\r\n    return user;\r\n  });\r\n};\r\n\r\nexport const editDailyTestValues = (usersList: IUser[], action: IAction) => {\r\n  const { userID, periodicID, dailyID, timeOfDay, sys, dia, pulse } = action;\r\n  return usersList.map((user) => {\r\n    if (user.id === userID) {\r\n      user.periodicPressureTests.map((periodicTest) => {\r\n        if (periodicTest.id === periodicID) {\r\n          periodicTest.list.map((daily) => {\r\n            if (daily.id === dailyID && daily.morning.timeOfDay === timeOfDay) {\r\n              daily.morning.SYS = sys;\r\n              daily.morning.DIA = dia;\r\n              daily.morning.PULSE = pulse;\r\n            } else if (\r\n              daily.id === dailyID &&\r\n              daily.evening.timeOfDay === timeOfDay\r\n            ) {\r\n              daily.evening.SYS = sys;\r\n              daily.evening.DIA = dia;\r\n              daily.evening.PULSE = pulse;\r\n            }\r\n            return daily;\r\n          });\r\n        }\r\n        return periodicTest;\r\n      });\r\n    }\r\n    return user;\r\n  });\r\n};\r\n\r\nexport const setOmittedDailyTest = (usersList: IUser[], action: IAction) => {\r\n  const { userID, periodicID, dailyID, timeOfDay, omitted } = action;\r\n\r\n  return usersList.map((user) => {\r\n    if (user.id === userID) {\r\n      user.periodicPressureTests.map((periodicTest) => {\r\n        if (periodicTest.id === periodicID) {\r\n          periodicTest.list.map((daily) => {\r\n            if (daily.id === dailyID && daily.morning.timeOfDay === timeOfDay) {\r\n              daily.morning.omitted = omitted;\r\n            } else if (\r\n              daily.id === dailyID &&\r\n              daily.evening.timeOfDay === timeOfDay\r\n            ) {\r\n              daily.evening.omitted = omitted;\r\n            }\r\n            return daily;\r\n          });\r\n        }\r\n        return periodicTest;\r\n      });\r\n    }\r\n    return user;\r\n  });\r\n};\r\n\r\nexport const updateNumberOfTotalAndDoneTestsAndState = (\r\n  usersList: IUser[],\r\n  action: IAction\r\n) => {\r\n  const { userID, periodicID } = action;\r\n  let total = 0;\r\n  let done = 0;\r\n\r\n  return usersList.map((user) => {\r\n    if (user.id === userID) {\r\n      user.periodicPressureTests.map((periodicTest) => {\r\n        if (periodicTest.id === periodicID) {\r\n          periodicTest.list.forEach((daily) => {\r\n            if (!daily.morning.omitted) total++;\r\n            if (!daily.evening.omitted) total++;\r\n            if (\r\n              daily.morning.SYS !== 0 &&\r\n              daily.morning.DIA !== 0 &&\r\n              daily.morning.PULSE !== 0 &&\r\n              !daily.morning.omitted\r\n            )\r\n              done++;\r\n            if (\r\n              daily.evening.SYS !== 0 &&\r\n              daily.evening.DIA !== 0 &&\r\n              daily.evening.PULSE !== 0 &&\r\n              !daily.evening.omitted\r\n            )\r\n              done++;\r\n\r\n            periodicTest.totalNumberOfTests = total;\r\n            periodicTest.numberOfTestsDone = done;\r\n\r\n            if (\r\n              periodicTest.totalNumberOfTests === periodicTest.numberOfTestsDone\r\n            ) {\r\n              periodicTest.state = PeriodicTestStates.DONE;\r\n            } else {\r\n              periodicTest.state = PeriodicTestStates.IN_PROGRESS;\r\n            }\r\n            return daily;\r\n          });\r\n        }\r\n        return periodicTest;\r\n      });\r\n    }\r\n    return user;\r\n  });\r\n};\r\n\r\nconst calculateAverageValue = (arr: number[]) => {\r\n  if (arr.length === 0) return 0;\r\n  else if (arr.length === 1) return arr[0];\r\n  return Math.round(arr.reduce((acu, value) => acu + value) / arr.length);\r\n};\r\n\r\nexport const calculateAverageResults = (\r\n  usersList: IUser[],\r\n  action: IAction\r\n) => {\r\n  const { userID, periodicID } = action;\r\n  const morningValuesOfSys: number[] = [];\r\n  const morningValuesOfDia: number[] = [];\r\n  const morningValuesOfPulse: number[] = [];\r\n  const eveningValuesOfSys: number[] = [];\r\n  const eveningValuesOfDia: number[] = [];\r\n  const eveningValuesOfPulse: number[] = [];\r\n\r\n  return usersList.map((user) => {\r\n    if (user.id === userID) {\r\n      user.periodicPressureTests.map((periodicTest) => {\r\n        if (periodicTest.id === periodicID) {\r\n          periodicTest.list.forEach((daily) => {\r\n            if (!daily.morning.omitted) {\r\n              morningValuesOfSys.push(daily.morning.SYS);\r\n              morningValuesOfDia.push(daily.morning.DIA);\r\n              morningValuesOfPulse.push(daily.morning.PULSE);\r\n            }\r\n            if (!daily.evening.omitted) {\r\n              eveningValuesOfSys.push(daily.evening.SYS);\r\n              eveningValuesOfDia.push(daily.evening.DIA);\r\n              eveningValuesOfPulse.push(daily.evening.PULSE);\r\n            }\r\n          });\r\n          periodicTest.averageResults.morning.SYS = calculateAverageValue(\r\n            morningValuesOfSys\r\n          );\r\n          periodicTest.averageResults.morning.DIA = calculateAverageValue(\r\n            morningValuesOfDia\r\n          );\r\n          periodicTest.averageResults.morning.PULSE = calculateAverageValue(\r\n            morningValuesOfPulse\r\n          );\r\n          periodicTest.averageResults.evening.SYS = calculateAverageValue(\r\n            eveningValuesOfSys\r\n          );\r\n          periodicTest.averageResults.evening.DIA = calculateAverageValue(\r\n            eveningValuesOfDia\r\n          );\r\n          periodicTest.averageResults.evening.PULSE = calculateAverageValue(\r\n            eveningValuesOfPulse\r\n          );\r\n          periodicTest.averageResults.total.SYS = calculateAverageValue([\r\n            ...morningValuesOfSys,\r\n            ...eveningValuesOfSys,\r\n          ]);\r\n          periodicTest.averageResults.total.DIA = calculateAverageValue([\r\n            ...morningValuesOfDia,\r\n            ...eveningValuesOfDia,\r\n          ]);\r\n          periodicTest.averageResults.total.PULSE = calculateAverageValue([\r\n            ...morningValuesOfPulse,\r\n            ...eveningValuesOfPulse,\r\n          ]);\r\n        }\r\n        return periodicTest;\r\n      });\r\n    }\r\n    return user;\r\n  });\r\n};\r\n","import {\r\n  ADD_PROFILE,\r\n  DELETE_PROFILE,\r\n  SET_SELECTED_USER_ID,\r\n  ADD_PERIODIC_PRESSURE_TEST,\r\n  DELETE_PERIODIC_PRESSURE_TEST,\r\n  EDIT_DAILY_VALUES,\r\n  SET_OMITTED_DAILY_TEST,\r\n  UPDATE_NUMBER_OF_TOTAL_AND_DONE_TESTS_AND_STATE,\r\n  CALCULATE_AVERAGE_RESULTS,\r\n} from \"./../types/\";\r\nimport { IUser, IPeriodicPressureTests } from \"./../../common/interfaces\";\r\nimport { TimeOfDayStates } from \"./../../common/constants\";\r\nimport {\r\n  updateLocalStorageProfiles,\r\n  updateLocalSelectedUserID,\r\n  configInitialStateWithLocalStorage,\r\n} from \"./../../common/localStorage\";\r\nimport {\r\n  addPeriodicPressureTest,\r\n  deletePeriodicPressureTest,\r\n  editDailyTestValues,\r\n  setOmittedDailyTest,\r\n  updateNumberOfTotalAndDoneTestsAndState,\r\n  calculateAverageResults,\r\n} from \"./profilesReducerFunctions\";\r\n\r\nconst initialState = configInitialStateWithLocalStorage();\r\n\r\nexport const profilesReducer = (state = initialState, action: IAction) => {\r\n  switch (action.type) {\r\n    case ADD_PROFILE: {\r\n      const updatedProfiles = [...state.users, action.newUser];\r\n      updateLocalStorageProfiles(updatedProfiles);\r\n      updateLocalSelectedUserID(action.newUser.id);\r\n      return {\r\n        ...state,\r\n        users: updatedProfiles,\r\n        selectedUserID: action.newUser.id,\r\n        nextAvailableUserID: state.nextAvailableUserID + 1,\r\n      };\r\n    }\r\n\r\n    case DELETE_PROFILE: {\r\n      const updatedProfiles = state.users.filter(\r\n        (user) => user.id !== action.idToDelete\r\n      );\r\n      updateLocalStorageProfiles(updatedProfiles);\r\n      if (action.idToDelete === state.selectedUserID) {\r\n        const availableID = updatedProfiles.length\r\n          ? updatedProfiles[0][\"id\"]\r\n          : 0;\r\n        updateLocalSelectedUserID(availableID);\r\n        return {\r\n          ...state,\r\n          users: updatedProfiles,\r\n          selectedUserID: availableID,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        users: updatedProfiles,\r\n      };\r\n    }\r\n\r\n    case SET_SELECTED_USER_ID: {\r\n      updateLocalSelectedUserID(action.selectedUserID);\r\n      return { ...state, selectedUserID: action.selectedUserID };\r\n    }\r\n\r\n    case ADD_PERIODIC_PRESSURE_TEST: {\r\n      const updatedProfiles = addPeriodicPressureTest(state.users, action);\r\n      updateLocalStorageProfiles(updatedProfiles);\r\n      return { ...state, users: updatedProfiles };\r\n    }\r\n\r\n    case DELETE_PERIODIC_PRESSURE_TEST: {\r\n      const updatedProfiles = deletePeriodicPressureTest(state.users, action);\r\n      updateLocalStorageProfiles(updatedProfiles);\r\n      return { ...state, users: updatedProfiles };\r\n    }\r\n\r\n    case EDIT_DAILY_VALUES: {\r\n      const updatedProfiles = editDailyTestValues(state.users, action);\r\n      updateLocalStorageProfiles(updatedProfiles);\r\n      return { ...state, users: updatedProfiles };\r\n    }\r\n\r\n    case SET_OMITTED_DAILY_TEST: {\r\n      const updatedProfiles = setOmittedDailyTest(state.users, action);\r\n      updateLocalStorageProfiles(updatedProfiles);\r\n      return { ...state, users: updatedProfiles };\r\n    }\r\n\r\n    case UPDATE_NUMBER_OF_TOTAL_AND_DONE_TESTS_AND_STATE: {\r\n      const updatedProfiles = updateNumberOfTotalAndDoneTestsAndState(\r\n        state.users,\r\n        action\r\n      );\r\n      updateLocalStorageProfiles(updatedProfiles);\r\n      return { ...state, users: updatedProfiles };\r\n    }\r\n\r\n    case CALCULATE_AVERAGE_RESULTS: {\r\n      const updatedProfiles = calculateAverageResults(state.users, action);\r\n      updateLocalStorageProfiles(updatedProfiles);\r\n      return { ...state, users: updatedProfiles };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport interface IAction {\r\n  type: string;\r\n  newUser: IUser;\r\n  userID: number;\r\n  selectedUserID: number;\r\n  periodicID: number;\r\n  dailyID: number;\r\n  idToDelete: number;\r\n  newPeriodicTest: IPeriodicPressureTests;\r\n  timeOfDay: TimeOfDayStates;\r\n  sys: number;\r\n  dia: number;\r\n  pulse: number;\r\n  omitted: boolean;\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { profilesReducer } from \"./../reducers/profilesReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  profiles: profilesReducer,\r\n});\r\n","import { createStore } from \"redux\";\r\nimport { rootReducer } from \"./../store/reducers/\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools());\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename=\"/\">\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}