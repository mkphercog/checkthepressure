{"version":3,"sources":["common/constants.ts","store/types/index.ts","common/localStorage.ts","store/reducers/profilesReducerFunctions.ts","store/reducers/profilesReducer.ts","store/reducers/index.ts","store/index.ts","styles/variables.ts","components/Navigation/Navigation.css.ts","components/Navigation/Navigation.tsx","components/UserPressureBar/UserPressureBar.css.ts","components/UserPressureBar/UserPressureBar.tsx","store/actions/profilesAction.ts","common/Portal/Portal.css.ts","common/Portal/Portal.tsx","components/shared/SharedAddButton/SharedAddButton.css.ts","components/shared/SharedAddButton/SharedAddButton.tsx","images/BG.jpg","components/shared/SharedPageWrapper/SharedPageWrapper.css.ts","components/shared/SharedButton/SharedButtonTypes.ts","components/shared/SharedPageWrapper/SharedPageWrapper.tsx","components/shared/SharedButton/SharedButton.css.ts","components/shared/SharedButton/SharedButton.tsx","components/shared/SharedButton/helpers.ts","styles/mixins/Popups.ts","components/Popups/Warnings/Warnings.css.ts","components/Popups/Warnings/Warnings.tsx","common/bloodPressureTable.ts","components/Popups/AddUser/AddUser.css.ts","components/Popups/AddUser/AddUser.tsx","styles/mixins/LiElement.ts","components/ProfilesSelector/UserProfile/UserProfile.css.ts","components/ProfilesSelector/UserProfile/UserProfile.tsx","styles/mixins/Fieldset.ts","components/ProfilesSelector/ProfilesSelector.css.ts","components/ProfilesSelector/ProfilesSelector.tsx","components/Popups/AddPeriodicTest/AddPeriodicTest.css.ts","components/Popups/AddPeriodicTest/AddPeriodicTest.tsx","common/optionsForSelectTag.tsx","components/Popups/AddPeriodicTest/AddPeriodicTestFunctions.ts","components/Measurements/PeriodicTestsList/PeriodicTest/PeriodicTest.css.ts","components/Measurements/PeriodicTestsList/PeriodicTest/PeriodicTest.tsx","components/Measurements/PeriodicTestsList/PeriodicTestsList.css.ts","components/Measurements/PeriodicTestsList/PeriodicTestsList.tsx","components/Popups/Information/Information.css.ts","components/Popups/EditDailyTest/EditDailyTestFunctions.ts","components/Popups/Information/Information.tsx","components/Popups/EditDailyTest/EditDailyTest.css.ts","components/Popups/EditDailyTest/EditDailyTest.tsx","common/PDF/PDF_Fonts/OpenSans-Regular.ttf","common/PDF/PDF_Fonts/OpenSans-Bold.ttf","common/PDF/PdfPage.styles.ts","common/PDF/PageViews/LogoView.tsx","common/PDF/PageViews/UserDataView.tsx","common/PDF/PageViews/PeriodicTestInfoView.tsx","common/PDF/PageViews/DailyTestsTableView.tsx","common/PDF/PageViews/AverageResultsView.tsx","common/PDF/PageViews/FooterView.tsx","common/PDF/PdfPage.tsx","common/PDF/PdfPageGenerator.css.ts","common/PDF/PdfPageGenerator.tsx","components/Popups/AverageResults/AverageResults.css.ts","components/Popups/AverageResults/ResultsInFieldset.tsx","components/Popups/AverageResults/AverageResults.tsx","components/Measurements/PeriodicTestDetails/DailyTest/DailyTest.css.ts","components/Measurements/PeriodicTestDetails/DailyTest/MorningEveningDetails.tsx","components/Measurements/PeriodicTestDetails/DailyTest/DailyTest.tsx","components/Measurements/PeriodicTestDetails/PeriodicTestDetails.css.ts","components/Measurements/PeriodicTestDetails/PeriodicTestDetails.tsx","components/Measurements/Measurements.tsx","components/Info/Info.css.ts","components/Info/Info.tsx","App.css.ts","index.css.ts","App.tsx","index.tsx"],"names":["PeriodicTestStates","TimeOfDayTypes","TimeOfDayAverageTypes","ADD_PROFILE","DELETE_PROFILE","SET_SELECTED_USER_ID","ADD_PERIODIC_PRESSURE_TEST","DELETE_PERIODIC_PRESSURE_TEST","EDIT_DAILY_VALUES","SET_OMITTED_DAILY_TEST","UPDATE_NUMBER_OF_TOTAL_AND_DONE_TESTS_AND_STATE","CALCULATE_AVERAGE_RESULTS","LOCAL_PROFILES","LOCAL_SELECTED_USER_ID","updateLocalStorageProfiles","profiles","localStorage","setItem","JSON","stringify","updateLocalSelectedUserID","id","MeasurementSymbols","TimeOfDayDisplayNames","MAX_SYS_DIA_PULSE_VALUE","emptyPeriodicTest","start","end","days","state","totalNumberOfTests","numberOfTestsDone","averageResults","morning","SYS","DIA","PULSE","evening","total","list","anonymous","name","age","userBloodPressureBasedOnAge","MIN","NORMAL","MAX","nextAvailablePeriodicTestID","periodicPressureTests","TEST_VALUES_INFO","addPeriodicPressureTest","usersList","action","userID","newPeriodicTest","map","user","deletePeriodicPressureTest","idToDelete","filter","test","length","editDailyTestValues","periodicID","dailyID","timeOfDay","sys","dia","pulse","periodicTest","daily","setOmittedDailyTest","omitted","updateNumberOfTotalAndDoneTestsAndState","done","forEach","DONE","IN_PROGRESS","calculateAverageValue","arr","Math","round","reduce","acu","value","calculateAverageResults","morningValuesOfSys","morningValuesOfDia","morningValuesOfPulse","eveningValuesOfSys","eveningValuesOfDia","eveningValuesOfPulse","push","initialState","localProfiles","localID","localSelectedUserID","isLocalList","getItem","checkLocalProfiles","parse","users","nextAvailableUserID","selectedUserID","configInitialStateWithLocalStorage","rootReducer","combineReducers","type","updatedProfiles","newUser","availableID","store","createStore","composeWithDevTools","COLORS","CORNER_RADIUS","TRANSITION_TIME","widthWithoutMenuIcon","opacityAnimation","keyframes","Header","styled","header","Logo","h1","Nav","nav","MenuIcon","i","BackArrowIcon","Navigation","useState","menuVisibility","setMenuVisibility","window","innerWidth","windowWidth","setWindowWidth","history","useHistory","document","body","onresize","useEffect","onClick","location","pathname","to","exact","className","Bar","div","UserData","PressureMin","PressureNormal","PressureMax","UserPressureBar","PortalTarget","PortalBG","Portal","target","children","domElement","getElementById","ReactDom","createPortal","AddButtonStyled","button","SharedAddButton","hoverDescription","isDisabled","disabled","SharedButtonType","SharedButtonStyles","SharedButtonIcons","PageWrapperStyled","SharedPageWrapper","src","BackGround","alt","BasicButtonStyled","ApplyButtonStyled","DenyButtonStyled","DeleteButtonStyled","ExitButtonStyled","InfoButtonStyled","SharedButton","styles","basic","icon","undefined","StyledButton","apply","deny","delete","exit","info","getButtonStyles","event","PopupWrapper","PopupTitleGreen","PopupTitleRed","PopupTitleBlue","PopupContentWrapper","PopupForm","form","PopupSelect","select","PopupSelectOption","option","BtnWrapper","Warnings","message","setIsOpen","WarningsYesNo","response","bloodPressureTable","FormStyled","AddUser","setIsOpenAddUserPopup","setName","setAge","dispatch","useDispatch","useSelector","isOpenPortal","setIsOpenPortal","Object","popup","setPopup","htmlFor","onChange","e","autoFocus","preventDefault","parsedAge","parseInt","getUserBloodPressure","find","bloodTable","findUserBloodPressureBasedOnAge","newProfile","addProfile","submit","MODAL","LiElement","li","Wrapper","Options","UserProfile","deleteProfile","selectUserID","Fieldset","fieldset","Legend","legend","ProfilesSelectorStyled","ProfilesSelector","handleDeleteProfile","res","handleSelectUserID","setSelectedUserID","renderUsers","legendTitle","today","Date","AddPeriodicTest","setIsOpenAddPeriodicTestPopup","toISOString","slice","startDay","setStartDay","setDays","renderOptionsDays","minValue","maxValue","numbers","item","numRangeOptions","Number","getDateArray","startDashDate","numOfDays","arrDate","split","year","month","day","dateList","date","UTC","dateWithDots","Intl","DateTimeFormat","format","generateDateArray","getDailyTestList","index","newTest","Title","h2","Subtitle","Info","p","Btns","PeriodicTest","openPeriodicTestDetails","deletePeriodicTest","FieldsetStyled","PeriodicTestsList","tests","handleDeletePeriodicTest","renderPeriodicTests","ValidateStateTypes","Information","EditDailyTest","setIsOpenEditDailyTestPopup","currentTestValuesToRender","testValues","currentSys","toString","currentDia","currentPulse","getDailyTimeOfDayTestValues","setSys","setDia","setPulse","handleShowInfo","messageType","messageToShow","checkValues","notEnough","tooMuch","badSign","correct","validateValues","editDailyValues","Font","register","family","OpenSansRegular","OpenSansBold","StyleSheet","create","page","flexDirection","padding","fontFamily","backgroundColor","color","logoView","marginBottom","logoText","fontSize","userDataView","periodicTestInfoView","display","justifyContent","alignItems","marginTop","periodicText","tableHeaderView","tableHeaderText","width","textAlign","tableContentView","borderBottomWidth","borderBottomStyle","borderBottomColor","tableContentText","averageTitleView","averageTitleText","freeSpaceView","flexGrow","footerView","borderTopWidth","borderTopStyle","borderTopColor","fotterText","normalText","boldText","LogoView","style","UserDataView","PeriodicTestInfoView","DailyTestsTableView","renderDailyTests","isOmmitedMorning","isOmmitedEvenign","AverageResultsView","getAverage","renderAverageMorning","renderAverageEvening","renderAverageTotal","renderAllAverageResults","FooterView","MyDocument","size","PDFDownloadLinkStyled","PDFDownloadLink","PdfPageGenerator","startDate","endDate","fileName","blob","url","loading","error","Content","SysAndDiaColored","span","props","ResultsInFieldset","timeOfDayName","resultName","getSysDiaColor","AverageResults","setIsOpenAverageResultsPopup","MorningEvening","SysDiaPuls","MorningEveningDetails","dailyTest","timeOfDayType","editDailyTest","setOmittedDaily","DailyTest","ControlPanel","BackArrow","PeriodicTestDetails","backToPeriodicTestsList","testIsDone","renderList","Measurements","selectedUser","openedPeriodicTest","setOpenedPeriodicTest","isOpenPeriodicTestDetails","setIsOpenPeriodicTestDetails","getOpenedPeriodicTest","href","rel","AppBG","AppWrapper","AppBottomBar","GlobalStyles","createGlobalStyle","App","getProfiles","path","ReactDOM","render","StrictMode","basename"],"mappings":"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","file":"static/js/main.a53cf7bd.chunk.js","sourcesContent":["import { IPeriodicPressureTests, IUser } from \"common/interfaces\";\r\n\r\nexport enum PeriodicTestStates {\r\n  DONE = \"Zakończono\",\r\n  IN_PROGRESS = \"W realizacji\",\r\n}\r\n\r\nexport enum TimeOfDayTypes {\r\n  morning = \"morning\",\r\n  evening = \"evening\",\r\n}\r\n\r\nexport enum TimeOfDayAverageTypes {\r\n  morning = \"morning\",\r\n  evening = \"evening\",\r\n  total = \"total\",\r\n}\r\n\r\nexport const TimeOfDayDisplayNames = {\r\n  morning: \"Rano\",\r\n  evening: \"Wieczór\",\r\n  total: \"Łącznie\",\r\n};\r\n\r\nexport enum MeasurementSymbols {\r\n  sys = \"sys\",\r\n  dia = \"dia\",\r\n  pulse = \"pulse\",\r\n}\r\n\r\nexport const MAX_SYS_DIA_PULSE_VALUE = 250;\r\nexport const NAME_MAX_CHARS = 15;\r\nexport const MAX_AGE = 150;\r\n\r\nexport const emptyPeriodicTest: IPeriodicPressureTests = {\r\n  id: 0,\r\n  start: \"\",\r\n  end: \"\",\r\n  days: 0,\r\n  state: \"\",\r\n  totalNumberOfTests: 0,\r\n  numberOfTestsDone: 0,\r\n  averageResults: {\r\n    morning: {\r\n      SYS: 0,\r\n      DIA: 0,\r\n      PULSE: 0,\r\n    },\r\n    evening: {\r\n      SYS: 0,\r\n      DIA: 0,\r\n      PULSE: 0,\r\n    },\r\n    total: {\r\n      SYS: 0,\r\n      DIA: 0,\r\n      PULSE: 0,\r\n    },\r\n  },\r\n  list: [],\r\n};\r\n\r\nexport const anonymous: IUser = {\r\n  id: -1,\r\n  name: \"Anonim\",\r\n  age: 0,\r\n  userBloodPressureBasedOnAge: {\r\n    MIN: { SYS: 0, DIA: 0 },\r\n    NORMAL: { SYS: 0, DIA: 0 },\r\n    MAX: { SYS: 0, DIA: 0 },\r\n  },\r\n  nextAvailablePeriodicTestID: 0,\r\n  periodicPressureTests: [],\r\n};\r\n\r\nexport const TEST_VALUES_INFO = {\r\n  SYS:\r\n    \"SYS (Systole) - oznacza ciśnienie skurczowe, wartość przed ukośnikiem. Przykładowo w wyniku 120/70, wartość 120 będzie wartością SYS.\",\r\n  DIA:\r\n    \"DIA (Diastole) - oznacza ciśnienie rozkurczowe, wartość po ukośniku. Przykładowo w wyniku 120/70, wartość 70 będzie wartością DIA.\",\r\n  PULSE:\r\n    \"PULS (Tętno) - mierząc puls, określamy liczbę uderzeń serca w ciągu jednej minuty.\",\r\n};\r\n","export const ADD_PROFILE = \"ADD_PROFILE\";\r\nexport const DELETE_PROFILE = \"DELETE_PROFILE\";\r\n\r\nexport const SET_SELECTED_USER_ID = \"SET_SELECTED_USER_ID\";\r\n\r\nexport const ADD_PERIODIC_PRESSURE_TEST = \"ADD_PERIODIC_PRESSURE_TEST\";\r\nexport const DELETE_PERIODIC_PRESSURE_TEST = \"DELETE_PERIODIC_PRESSURE_TEST\";\r\n\r\nexport const EDIT_DAILY_VALUES = \"EDIT_DAILY_VALUES\";\r\nexport const SET_OMITTED_DAILY_TEST = \"SET_OMITTED_DAILY_TEST\";\r\nexport const UPDATE_NUMBER_OF_TOTAL_AND_DONE_TESTS_AND_STATE =\r\n  \"UPDATE_NUMBER_OF_TOTAL_AND_DONE_TESTS_AND_STATE\";\r\n\r\nexport const CALCULATE_AVERAGE_RESULTS = \"CALCULATE_AVERAGE_RESULTS\";\r\n","import { IUser } from \"common/interfaces\";\r\n\r\nconst LOCAL_PROFILES = \"localProfiles\";\r\nconst LOCAL_SELECTED_USER_ID = \"localSelectedUserID\";\r\n\r\nexport const updateLocalStorageProfiles = (profiles: IUser[]) =>\r\n  localStorage.setItem(LOCAL_PROFILES, JSON.stringify(profiles));\r\n\r\nexport const checkLocalProfiles = () => {\r\n  const isLocalList = localStorage.getItem(LOCAL_PROFILES);\r\n  if (isLocalList === null || isLocalList === \"[]\") return false;\r\n  return true;\r\n};\r\n\r\nexport const getLocalProfiles = () =>\r\n  JSON.parse(localStorage.getItem(LOCAL_PROFILES) || \"[]\");\r\n\r\nexport const setLocalEmptyProfiles = () =>\r\n  localStorage.setItem(LOCAL_PROFILES, \"[]\");\r\n\r\nexport const updateLocalSelectedUserID = (id: number) =>\r\n  localStorage.setItem(LOCAL_SELECTED_USER_ID, JSON.stringify(id));\r\n\r\nexport const getLocalSelectedUserID = () =>\r\n  JSON.parse(localStorage.getItem(LOCAL_SELECTED_USER_ID) || \"0\");\r\n\r\nexport const setLocalSelectedUserID = () =>\r\n  localStorage.setItem(LOCAL_SELECTED_USER_ID, \"0\");\r\n\r\nexport const configInitialStateWithLocalStorage = () => {\r\n  const isLocalProfiles = checkLocalProfiles();\r\n  let localProfiles: IUser[] = [];\r\n  let localID = 0;\r\n  let localSelectedUserID = 0;\r\n\r\n  if (isLocalProfiles) {\r\n    localProfiles = getLocalProfiles();\r\n    localID = localProfiles[localProfiles.length - 1][\"id\"] + 1;\r\n    localSelectedUserID = getLocalSelectedUserID();\r\n  } else {\r\n    setLocalEmptyProfiles();\r\n    setLocalSelectedUserID();\r\n  }\r\n\r\n  return {\r\n    users: localProfiles,\r\n    nextAvailableUserID: localID,\r\n    selectedUserID: localSelectedUserID,\r\n  };\r\n};\r\n","import { PeriodicTestStates } from \"common/constants\";\r\nimport { IUser } from \"common/interfaces\";\r\n\r\nimport { IAction } from \"./profilesReducer\";\r\n\r\nexport const addPeriodicPressureTest = (\r\n  usersList: IUser[],\r\n  action: IAction\r\n) => {\r\n  const { userID, newPeriodicTest } = action;\r\n  return usersList.map((user) => {\r\n    if (user.id === userID) {\r\n      user.periodicPressureTests = [\r\n        ...user.periodicPressureTests,\r\n        newPeriodicTest,\r\n      ];\r\n      user.nextAvailablePeriodicTestID += 1;\r\n    }\r\n    return user;\r\n  });\r\n};\r\n\r\nexport const deletePeriodicPressureTest = (\r\n  usersList: IUser[],\r\n  action: IAction\r\n) => {\r\n  const { userID, idToDelete } = action;\r\n  return usersList.map((user) => {\r\n    if (user.id === userID) {\r\n      user.periodicPressureTests = user.periodicPressureTests.filter(\r\n        (test) => idToDelete !== test.id\r\n      );\r\n      user.nextAvailablePeriodicTestID = user.periodicPressureTests.length\r\n        ? user.periodicPressureTests[user.periodicPressureTests.length - 1][\r\n            \"id\"\r\n          ] + 1\r\n        : 1;\r\n    }\r\n    return user;\r\n  });\r\n};\r\n\r\nexport const editDailyTestValues = (usersList: IUser[], action: IAction) => {\r\n  const { userID, periodicID, dailyID, timeOfDay, sys, dia, pulse } = action;\r\n  return usersList.map((user) => {\r\n    if (user.id === userID) {\r\n      user.periodicPressureTests.map((periodicTest) => {\r\n        if (periodicTest.id === periodicID) {\r\n          periodicTest.list.map((daily) => {\r\n            if (daily.id === dailyID && daily.morning.timeOfDay === timeOfDay) {\r\n              daily.morning.SYS = sys;\r\n              daily.morning.DIA = dia;\r\n              daily.morning.PULSE = pulse;\r\n            } else if (\r\n              daily.id === dailyID &&\r\n              daily.evening.timeOfDay === timeOfDay\r\n            ) {\r\n              daily.evening.SYS = sys;\r\n              daily.evening.DIA = dia;\r\n              daily.evening.PULSE = pulse;\r\n            }\r\n            return daily;\r\n          });\r\n        }\r\n        return periodicTest;\r\n      });\r\n    }\r\n    return user;\r\n  });\r\n};\r\n\r\nexport const setOmittedDailyTest = (usersList: IUser[], action: IAction) => {\r\n  const { userID, periodicID, dailyID, timeOfDay, omitted } = action;\r\n\r\n  return usersList.map((user) => {\r\n    if (user.id === userID) {\r\n      user.periodicPressureTests.map((periodicTest) => {\r\n        if (periodicTest.id === periodicID) {\r\n          periodicTest.list.map((daily) => {\r\n            if (daily.id === dailyID && daily.morning.timeOfDay === timeOfDay) {\r\n              daily.morning.omitted = omitted;\r\n            } else if (\r\n              daily.id === dailyID &&\r\n              daily.evening.timeOfDay === timeOfDay\r\n            ) {\r\n              daily.evening.omitted = omitted;\r\n            }\r\n            return daily;\r\n          });\r\n        }\r\n        return periodicTest;\r\n      });\r\n    }\r\n    return user;\r\n  });\r\n};\r\n\r\nexport const updateNumberOfTotalAndDoneTestsAndState = (\r\n  usersList: IUser[],\r\n  action: IAction\r\n) => {\r\n  const { userID, periodicID } = action;\r\n  let total = 0;\r\n  let done = 0;\r\n\r\n  return usersList.map((user) => {\r\n    if (user.id === userID) {\r\n      user.periodicPressureTests.map((periodicTest) => {\r\n        if (periodicTest.id === periodicID) {\r\n          periodicTest.list.forEach((daily) => {\r\n            if (!daily.morning.omitted) total++;\r\n            if (!daily.evening.omitted) total++;\r\n            if (\r\n              daily.morning.SYS !== 0 &&\r\n              daily.morning.DIA !== 0 &&\r\n              daily.morning.PULSE !== 0 &&\r\n              !daily.morning.omitted\r\n            )\r\n              done++;\r\n            if (\r\n              daily.evening.SYS !== 0 &&\r\n              daily.evening.DIA !== 0 &&\r\n              daily.evening.PULSE !== 0 &&\r\n              !daily.evening.omitted\r\n            )\r\n              done++;\r\n\r\n            periodicTest.totalNumberOfTests = total;\r\n            periodicTest.numberOfTestsDone = done;\r\n\r\n            if (\r\n              periodicTest.totalNumberOfTests === periodicTest.numberOfTestsDone\r\n            ) {\r\n              periodicTest.state = PeriodicTestStates.DONE;\r\n            } else {\r\n              periodicTest.state = PeriodicTestStates.IN_PROGRESS;\r\n            }\r\n            return daily;\r\n          });\r\n        }\r\n        return periodicTest;\r\n      });\r\n    }\r\n    return user;\r\n  });\r\n};\r\n\r\nconst calculateAverageValue = (arr: number[]) => {\r\n  if (arr.length === 0) return 0;\r\n  else if (arr.length === 1) return arr[0];\r\n  return Math.round(arr.reduce((acu, value) => acu + value) / arr.length);\r\n};\r\n\r\nexport const calculateAverageResults = (\r\n  usersList: IUser[],\r\n  action: IAction\r\n) => {\r\n  const { userID, periodicID } = action;\r\n  const morningValuesOfSys: number[] = [];\r\n  const morningValuesOfDia: number[] = [];\r\n  const morningValuesOfPulse: number[] = [];\r\n  const eveningValuesOfSys: number[] = [];\r\n  const eveningValuesOfDia: number[] = [];\r\n  const eveningValuesOfPulse: number[] = [];\r\n\r\n  return usersList.map((user) => {\r\n    if (user.id === userID) {\r\n      user.periodicPressureTests.map((periodicTest) => {\r\n        if (periodicTest.id === periodicID) {\r\n          periodicTest.list.forEach((daily) => {\r\n            if (!daily.morning.omitted) {\r\n              morningValuesOfSys.push(daily.morning.SYS);\r\n              morningValuesOfDia.push(daily.morning.DIA);\r\n              morningValuesOfPulse.push(daily.morning.PULSE);\r\n            }\r\n            if (!daily.evening.omitted) {\r\n              eveningValuesOfSys.push(daily.evening.SYS);\r\n              eveningValuesOfDia.push(daily.evening.DIA);\r\n              eveningValuesOfPulse.push(daily.evening.PULSE);\r\n            }\r\n          });\r\n          periodicTest.averageResults.morning.SYS = calculateAverageValue(\r\n            morningValuesOfSys\r\n          );\r\n          periodicTest.averageResults.morning.DIA = calculateAverageValue(\r\n            morningValuesOfDia\r\n          );\r\n          periodicTest.averageResults.morning.PULSE = calculateAverageValue(\r\n            morningValuesOfPulse\r\n          );\r\n          periodicTest.averageResults.evening.SYS = calculateAverageValue(\r\n            eveningValuesOfSys\r\n          );\r\n          periodicTest.averageResults.evening.DIA = calculateAverageValue(\r\n            eveningValuesOfDia\r\n          );\r\n          periodicTest.averageResults.evening.PULSE = calculateAverageValue(\r\n            eveningValuesOfPulse\r\n          );\r\n          periodicTest.averageResults.total.SYS = calculateAverageValue([\r\n            ...morningValuesOfSys,\r\n            ...eveningValuesOfSys,\r\n          ]);\r\n          periodicTest.averageResults.total.DIA = calculateAverageValue([\r\n            ...morningValuesOfDia,\r\n            ...eveningValuesOfDia,\r\n          ]);\r\n          periodicTest.averageResults.total.PULSE = calculateAverageValue([\r\n            ...morningValuesOfPulse,\r\n            ...eveningValuesOfPulse,\r\n          ]);\r\n        }\r\n        return periodicTest;\r\n      });\r\n    }\r\n    return user;\r\n  });\r\n};\r\n","import {\r\n  ADD_PROFILE,\r\n  DELETE_PROFILE,\r\n  SET_SELECTED_USER_ID,\r\n  ADD_PERIODIC_PRESSURE_TEST,\r\n  DELETE_PERIODIC_PRESSURE_TEST,\r\n  EDIT_DAILY_VALUES,\r\n  SET_OMITTED_DAILY_TEST,\r\n  UPDATE_NUMBER_OF_TOTAL_AND_DONE_TESTS_AND_STATE,\r\n  CALCULATE_AVERAGE_RESULTS,\r\n} from \"store/types/\";\r\nimport { IUser, IPeriodicPressureTests } from \"common/interfaces\";\r\nimport { TimeOfDayTypes } from \"common/constants\";\r\nimport {\r\n  updateLocalStorageProfiles,\r\n  updateLocalSelectedUserID,\r\n  configInitialStateWithLocalStorage,\r\n} from \"common/localStorage\";\r\n\r\nimport {\r\n  addPeriodicPressureTest,\r\n  deletePeriodicPressureTest,\r\n  editDailyTestValues,\r\n  setOmittedDailyTest,\r\n  updateNumberOfTotalAndDoneTestsAndState,\r\n  calculateAverageResults,\r\n} from \"./profilesReducerFunctions\";\r\n\r\nconst initialState = configInitialStateWithLocalStorage();\r\n\r\nexport interface IAction {\r\n  type: string;\r\n  newUser: IUser;\r\n  userID: number;\r\n  selectedUserID: number;\r\n  periodicID: number;\r\n  dailyID: number;\r\n  idToDelete: number;\r\n  newPeriodicTest: IPeriodicPressureTests;\r\n  timeOfDay: TimeOfDayTypes;\r\n  sys: number;\r\n  dia: number;\r\n  pulse: number;\r\n  omitted: boolean;\r\n}\r\n\r\nexport const profilesReducer = (state = initialState, action: IAction) => {\r\n  switch (action.type) {\r\n    case ADD_PROFILE: {\r\n      const updatedProfiles = [...state.users, action.newUser];\r\n      updateLocalStorageProfiles(updatedProfiles);\r\n      updateLocalSelectedUserID(action.newUser.id);\r\n      return {\r\n        ...state,\r\n        users: updatedProfiles,\r\n        selectedUserID: action.newUser.id,\r\n        nextAvailableUserID: state.nextAvailableUserID + 1,\r\n      };\r\n    }\r\n\r\n    case DELETE_PROFILE: {\r\n      const updatedProfiles = state.users.filter(\r\n        (user) => user.id !== action.idToDelete\r\n      );\r\n      updateLocalStorageProfiles(updatedProfiles);\r\n      if (action.idToDelete === state.selectedUserID) {\r\n        const availableID = updatedProfiles.length\r\n          ? updatedProfiles[0][\"id\"]\r\n          : 0;\r\n        updateLocalSelectedUserID(availableID);\r\n        return {\r\n          ...state,\r\n          users: updatedProfiles,\r\n          selectedUserID: availableID,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        users: updatedProfiles,\r\n      };\r\n    }\r\n\r\n    case SET_SELECTED_USER_ID: {\r\n      updateLocalSelectedUserID(action.selectedUserID);\r\n      return { ...state, selectedUserID: action.selectedUserID };\r\n    }\r\n\r\n    case ADD_PERIODIC_PRESSURE_TEST: {\r\n      const updatedProfiles = addPeriodicPressureTest(state.users, action);\r\n      updateLocalStorageProfiles(updatedProfiles);\r\n      return { ...state, users: updatedProfiles };\r\n    }\r\n\r\n    case DELETE_PERIODIC_PRESSURE_TEST: {\r\n      const updatedProfiles = deletePeriodicPressureTest(state.users, action);\r\n      updateLocalStorageProfiles(updatedProfiles);\r\n      return { ...state, users: updatedProfiles };\r\n    }\r\n\r\n    case EDIT_DAILY_VALUES: {\r\n      const updatedProfiles = editDailyTestValues(state.users, action);\r\n      updateLocalStorageProfiles(updatedProfiles);\r\n      return { ...state, users: updatedProfiles };\r\n    }\r\n\r\n    case SET_OMITTED_DAILY_TEST: {\r\n      const updatedProfiles = setOmittedDailyTest(state.users, action);\r\n      updateLocalStorageProfiles(updatedProfiles);\r\n      return { ...state, users: updatedProfiles };\r\n    }\r\n\r\n    case UPDATE_NUMBER_OF_TOTAL_AND_DONE_TESTS_AND_STATE: {\r\n      const updatedProfiles = updateNumberOfTotalAndDoneTestsAndState(\r\n        state.users,\r\n        action\r\n      );\r\n      updateLocalStorageProfiles(updatedProfiles);\r\n      return { ...state, users: updatedProfiles };\r\n    }\r\n\r\n    case CALCULATE_AVERAGE_RESULTS: {\r\n      const updatedProfiles = calculateAverageResults(state.users, action);\r\n      updateLocalStorageProfiles(updatedProfiles);\r\n      return { ...state, users: updatedProfiles };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { profilesReducer } from \"store/reducers/profilesReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  profiles: profilesReducer,\r\n});\r\n","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport { rootReducer } from \"store/reducers/\";\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools());\r\n","export const COLORS = {\r\n  blue: \"#315aeb\",\r\n  green: \"#86db51\",\r\n  darkGreen: \"#5e963b\",\r\n  orange: \"#ffbb0d\",\r\n  red: \"#eb601a\",\r\n  darkRed: \"#a34312\",\r\n  white: \"#ffffff\",\r\n  whiteOpacity: \"rgba(255,255,255,0.4)\",\r\n  lightGray: \"#e6e6e6\",\r\n  gray: \"#969696\",\r\n  grayWithOpacity: \"rgba(150, 150, 150, 0.45)\",\r\n  darkGray: \"#505050\",\r\n  black: \"#000000\",\r\n  transparent: \"transparent\",\r\n};\r\n\r\nexport const CORNER_RADIUS = \"15px\";\r\nexport const TRANSITION_TIME = \"0.3s\";\r\n","import styled, { keyframes } from \"styled-components\";\r\nimport { COLORS, CORNER_RADIUS, TRANSITION_TIME } from \"styles/variables\";\r\n\r\nconst widthWithoutMenuIcon = \"640px\";\r\nconst opacityAnimation = keyframes`\r\n  from {\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    opacity: 100%;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  flex-shrink: 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 8px 0;\r\n  background-color: ${COLORS.blue};\r\n  border-top-right-radius: ${CORNER_RADIUS};\r\n  border-top-left-radius: ${CORNER_RADIUS};\r\n`;\r\n\r\nexport const Logo = styled.h1`\r\n  margin-left: 10px;\r\n  font-size: 18px;\r\n  text-transform: uppercase;\r\n  color: ${COLORS.white};\r\n  animation: ${opacityAnimation} linear 0.5s;\r\n\r\n  @media (min-width: ${widthWithoutMenuIcon}) {\r\n    animation: none;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 24px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    margin-left: 20px;\r\n    font-size: 28px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  span {\r\n    color: ${COLORS.orange};\r\n  }\r\n`;\r\n\r\nexport const Nav = styled.nav`\r\n  flex-basis: 60%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  height: 100%;\r\n  margin: 0 10px;\r\n  animation: ${opacityAnimation} linear 0.5s;\r\n\r\n  @media (min-width: ${widthWithoutMenuIcon}) {\r\n    animation: none;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    margin-right: 20px;\r\n  }\r\n\r\n  li {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    list-style: none;\r\n\r\n    a {\r\n      padding: 0 15px;\r\n      text-transform: uppercase;\r\n      text-decoration: none;\r\n      font-weight: bold;\r\n      font-size: 12px;\r\n      color: ${COLORS.white};\r\n      transition: ${TRANSITION_TIME};\r\n\r\n      @media (min-width: 768px) {\r\n        font-size: 16px;\r\n      }\r\n\r\n      @media (min-width: 1024px) {\r\n        font-size: 18px;\r\n        cursor: pointer;\r\n        transition: ${TRANSITION_TIME};\r\n\r\n        :hover {\r\n          color: ${COLORS.orange};\r\n        }\r\n      }\r\n    }\r\n\r\n    .active {\r\n      border-bottom: 3px solid ${COLORS.orange};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MenuIcon = styled.i`\r\n  margin-right: 15px;\r\n  font-size: 22px;\r\n  color: ${COLORS.white};\r\n  cursor: pointer;\r\n  animation: ${opacityAnimation} linear 0.5s;\r\n\r\n  @media (min-width: ${widthWithoutMenuIcon}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const BackArrowIcon = styled.i`\r\n  margin-right: 15px;\r\n  color: ${COLORS.orange};\r\n  font-size: 25px;\r\n  transform: rotate(180deg);\r\n  cursor: pointer;\r\n  animation: ${opacityAnimation} linear 0.5s;\r\n\r\n  @media (min-width: ${widthWithoutMenuIcon}) {\r\n    display: none;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\nimport { Header, Logo, Nav, MenuIcon, BackArrowIcon } from \"./Navigation.css\";\r\n\r\nexport const Navigation: React.FC = () => {\r\n  const [menuVisibility, setMenuVisibility] = useState(false);\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  const history = useHistory();\r\n\r\n  document.body.onresize = () => setWindowWidth(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    if (windowWidth >= 640) {\r\n      setMenuVisibility(false);\r\n    }\r\n  }, [windowWidth]);\r\n\r\n  return (\r\n    <Header>\r\n      {menuVisibility ? null : (\r\n        <Logo\r\n          onClick={() => {\r\n            if (history.location.pathname !== \"/\") history.push(\"/\");\r\n          }}\r\n        >\r\n          Badaj <span>ciśnienie</span>\r\n        </Logo>\r\n      )}\r\n      {menuVisibility || windowWidth >= 640 ? (\r\n        <>\r\n          <Nav>\r\n            <li>\r\n              <NavLink to=\"/\" exact>\r\n                Profile\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/measurements\">Pomiary</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/info\">Info</NavLink>\r\n            </li>\r\n          </Nav>\r\n          <BackArrowIcon\r\n            className=\"fas fa-long-arrow-alt-left back\"\r\n            onClick={() => setMenuVisibility(false)}\r\n          ></BackArrowIcon>\r\n        </>\r\n      ) : (\r\n        <MenuIcon\r\n          className=\"fas fa-ellipsis-v menu\"\r\n          onClick={() => setMenuVisibility(true)}\r\n        ></MenuIcon>\r\n      )}\r\n    </Header>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { COLORS, TRANSITION_TIME } from \"styles/variables\";\r\n\r\nexport const Bar = styled.div`\r\n  flex-shrink: 0;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  padding: 4px 0;\r\n  border-bottom: 2px solid ${COLORS.blue};\r\n  background-color: ${COLORS.white};\r\n  animation: show ${TRANSITION_TIME} linear both;\r\n\r\n  @keyframes show {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UserData = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-bottom: 5px;\r\n\r\n  @media (orientation: landscape) {\r\n    width: auto;\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  p {\r\n    font-size: 10px;\r\n\r\n    @media (min-width: 411px) {\r\n      font-size: 11px;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 12px;\r\n    }\r\n\r\n    span {\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PressureMin = styled.div`\r\n  p {\r\n    font-size: 10px;\r\n    color: ${COLORS.blue};\r\n\r\n    @media (min-width: 411px) {\r\n      font-size: 11px;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PressureNormal = styled.div`\r\n  p {\r\n    font-size: 10px;\r\n    color: ${COLORS.darkGreen};\r\n    font-weight: bold;\r\n\r\n    @media (min-width: 411px) {\r\n      font-size: 11px;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 12px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PressureMax = styled.div`\r\n  p {\r\n    font-size: 10px;\r\n    color: ${COLORS.red};\r\n\r\n    @media (min-width: 411px) {\r\n      font-size: 11px;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { IBloodPressureBasedOnAge } from \"common/interfaces\";\r\n\r\nimport {\r\n  Bar,\r\n  UserData,\r\n  PressureMin,\r\n  PressureNormal,\r\n  PressureMax,\r\n} from \"./UserPressureBar.css\";\r\n\r\ninterface IProps {\r\n  name: string;\r\n  age: number;\r\n  userBloodPressureBasedOnAge: IBloodPressureBasedOnAge;\r\n}\r\n\r\nexport const UserPressureBar: React.FC<IProps> = ({\r\n  name,\r\n  age,\r\n  userBloodPressureBasedOnAge,\r\n}) => {\r\n  const { MIN, NORMAL, MAX } = userBloodPressureBasedOnAge;\r\n\r\n  return (\r\n    <Bar>\r\n      <UserData>\r\n        <p>\r\n          <span>{name}, </span>\r\n          wiek: {age}\r\n        </p>\r\n      </UserData>\r\n      <PressureMin>\r\n        <p>\r\n          MIN: {MIN.SYS}/{MIN.DIA}\r\n        </p>\r\n      </PressureMin>\r\n\r\n      <PressureNormal>\r\n        <p>\r\n          NORMA: {NORMAL.SYS}/{NORMAL.DIA}\r\n        </p>\r\n      </PressureNormal>\r\n\r\n      <PressureMax>\r\n        <p>\r\n          MAX: {MAX.SYS}/{MAX.DIA}\r\n        </p>\r\n      </PressureMax>\r\n    </Bar>\r\n  );\r\n};\r\n","import {\r\n  ADD_PROFILE,\r\n  DELETE_PROFILE,\r\n  SET_SELECTED_USER_ID,\r\n  ADD_PERIODIC_PRESSURE_TEST,\r\n  DELETE_PERIODIC_PRESSURE_TEST,\r\n  EDIT_DAILY_VALUES,\r\n  SET_OMITTED_DAILY_TEST,\r\n  UPDATE_NUMBER_OF_TOTAL_AND_DONE_TESTS_AND_STATE,\r\n  CALCULATE_AVERAGE_RESULTS,\r\n} from \"store/types/\";\r\nimport { IUser, IPeriodicPressureTests } from \"common/interfaces\";\r\nimport { TimeOfDayTypes } from \"common/constants\";\r\n\r\nexport const addProfile = (newProfile: IUser) => ({\r\n  type: ADD_PROFILE,\r\n  newUser: newProfile,\r\n});\r\n\r\nexport const deleteProfile = (deletedProfileID: number) => ({\r\n  type: DELETE_PROFILE,\r\n  idToDelete: deletedProfileID,\r\n});\r\n\r\nexport const setSelectedUserID = (id: number) => ({\r\n  type: SET_SELECTED_USER_ID,\r\n  selectedUserID: id,\r\n});\r\n\r\nexport const addPeriodicPressureTest = (\r\n  userID: number,\r\n  newTest: IPeriodicPressureTests\r\n) => ({\r\n  type: ADD_PERIODIC_PRESSURE_TEST,\r\n  userID,\r\n  newPeriodicTest: newTest,\r\n});\r\n\r\nexport const deletePeriodicPressureTest = (\r\n  userID: number,\r\n  idToDelete: number\r\n) => ({ type: DELETE_PERIODIC_PRESSURE_TEST, userID, idToDelete });\r\n\r\nexport const editDailyValues = (\r\n  userID: number,\r\n  periodicID: number,\r\n  dailyID: number,\r\n  timeOfDay: TimeOfDayTypes,\r\n  sys: number,\r\n  dia: number,\r\n  pulse: number\r\n) => ({\r\n  type: EDIT_DAILY_VALUES,\r\n  userID,\r\n  periodicID,\r\n  dailyID,\r\n  timeOfDay,\r\n  sys,\r\n  dia,\r\n  pulse,\r\n});\r\n\r\nexport const setOmittedDailyTest = (\r\n  userID: number,\r\n  periodicID: number,\r\n  dailyID: number,\r\n  timeOfDay: TimeOfDayTypes,\r\n  omitted: boolean\r\n) => ({\r\n  type: SET_OMITTED_DAILY_TEST,\r\n  userID,\r\n  periodicID,\r\n  dailyID,\r\n  timeOfDay,\r\n  omitted,\r\n});\r\n\r\nexport const updateNumberOfTotalAndDoneTestsAndState = (\r\n  userID: number,\r\n  periodicID: number\r\n) => ({\r\n  type: UPDATE_NUMBER_OF_TOTAL_AND_DONE_TESTS_AND_STATE,\r\n  userID,\r\n  periodicID,\r\n});\r\n\r\nexport const calculateAverageResults = (\r\n  userID: number,\r\n  periodicID: number\r\n) => ({\r\n  type: CALCULATE_AVERAGE_RESULTS,\r\n  userID,\r\n  periodicID,\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const PortalBG = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 999;\r\n  background-color: rgba(255, 255, 255, 0.4);\r\n`;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\n\r\nimport { PortalBG } from \"./Portal.css\";\r\n\r\nexport enum PortalTarget {\r\n  MODAL = \"modal-portal\",\r\n  ROOT = \"root\",\r\n}\r\n\r\ninterface IProps {\r\n  target: PortalTarget;\r\n}\r\n\r\nexport const Portal: React.FC<IProps> = ({ target, children }) => {\r\n  const domElement = document.getElementById(target);\r\n\r\n  return domElement\r\n    ? ReactDom.createPortal(<PortalBG>{children}</PortalBG>, domElement)\r\n    : null;\r\n};\r\n","import styled from \"styled-components\";\r\nimport { COLORS, CORNER_RADIUS, TRANSITION_TIME } from \"styles/variables\";\r\n\r\nexport const AddButtonStyled = styled.button`\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 10px;\r\n  background-color: ${COLORS.transparent};\r\n  border: 2px solid ${COLORS.transparent};\r\n  border-radius: 50%;\r\n  outline-style: none;\r\n\r\n  @media (min-width: 411px) and (orientation: landscape) {\r\n    bottom: 10px;\r\n    right: 10px;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    bottom: 10px;\r\n    right: 10px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    bottom: 10px;\r\n    right: 20px;\r\n    cursor: pointer;\r\n\r\n    :hover > div {\r\n      display: block;\r\n      animation: move ${TRANSITION_TIME} both;\r\n\r\n      @keyframes move {\r\n        from {\r\n          right: 0;\r\n          opacity: 0;\r\n        }\r\n        to {\r\n          right: 105%;\r\n          opacity: 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  :focus {\r\n    border: 2px solid ${COLORS.orange};\r\n  }\r\n\r\n  :disabled {\r\n    :hover > div {\r\n      display: none;\r\n      animation: none;\r\n    }\r\n\r\n    i {\r\n      color: ${COLORS.gray};\r\n\r\n      :hover {\r\n        color: ${COLORS.gray};\r\n      }\r\n    }\r\n\r\n    @media (min-width: 1024px) {\r\n      cursor: no-drop;\r\n    }\r\n  }\r\n\r\n  div {\r\n    display: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 0;\r\n    padding: 5px 10px;\r\n    transform: translateY(-50%);\r\n    background-color: ${COLORS.blue};\r\n    border-radius: ${CORNER_RADIUS};\r\n\r\n    p {\r\n      font-size: 12px;\r\n      font-weight: bold;\r\n      white-space: nowrap;\r\n      color: ${COLORS.white};\r\n    }\r\n  }\r\n\r\n  i {\r\n    font-size: 30px;\r\n    color: ${COLORS.green};\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 40px;\r\n      transition: ${TRANSITION_TIME};\r\n\r\n      :hover {\r\n        color: ${COLORS.darkGreen};\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { AddButtonStyled } from \"./SharedAddButton.css\";\r\n\r\ninterface IProps {\r\n  onClick: () => void;\r\n  hoverDescription: string;\r\n  isDisabled?: boolean;\r\n}\r\n\r\nexport const SharedAddButton: React.FC<IProps> = ({\r\n  onClick,\r\n  hoverDescription,\r\n  isDisabled,\r\n}) => (\r\n  <AddButtonStyled onClick={onClick} disabled={isDisabled}>\r\n    <div>\r\n      <p>{hoverDescription}</p>\r\n    </div>\r\n    <i className=\"fas fa-plus-circle\"></i>\r\n  </AddButtonStyled>\r\n);\r\n","export default __webpack_public_path__ + \"static/media/BG.1eeb38f6.jpg\";","import styled from \"styled-components\";\r\nimport { COLORS, CORNER_RADIUS } from \"styles/variables\";\r\n\r\nexport const PageWrapperStyled = styled.div`\r\n  flex-grow: 1;\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: ${COLORS.white};\r\n  border-bottom-left-radius: ${CORNER_RADIUS};\r\n  border-bottom-right-radius: ${CORNER_RADIUS};\r\n  overflow: hidden;\r\n  z-index: 1;\r\n\r\n  img {\r\n    position: absolute;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    opacity: 0.15;\r\n  }\r\n`;\r\n","export enum SharedButtonType {\r\n  button = \"button\",\r\n  submit = \"submit\",\r\n}\r\n\r\nexport enum SharedButtonStyles {\r\n  basic = \"basic\",\r\n  apply = \"apply\",\r\n  deny = \"deny\",\r\n  delete = \"delete\",\r\n  exit = \"exit\",\r\n  info = \"info\",\r\n}\r\n\r\nexport enum SharedButtonIcons {\r\n  apply = \"fas fa-check\",\r\n  deny = \"fas fa-times\",\r\n  delete = \"fas fa-trash\",\r\n  exit = \"fas fa-times-circle\",\r\n  info = \"fas fa-info-circle\",\r\n}\r\n","import React from \"react\";\r\n\r\nimport BackGround from \"images/BG.jpg\";\r\nimport { PageWrapperStyled } from \"./SharedPageWrapper.css\";\r\n\r\nexport const SharedPageWrapper: React.FC = ({ children }) => (\r\n  <PageWrapperStyled>\r\n    <img src={BackGround} alt=\"Sphygmomanometer\" />\r\n    {children}\r\n  </PageWrapperStyled>\r\n);\r\n","import styled from \"styled-components\";\r\nimport { COLORS, TRANSITION_TIME, CORNER_RADIUS } from \"styles/variables\";\r\n\r\nexport const BasicButtonStyled = styled.button`\r\n  padding: 3px 10px;\r\n  color: ${COLORS.white};\r\n  font-size: 12px;\r\n  text-transform: uppercase;\r\n  background-color: ${COLORS.darkGray};\r\n  border: none;\r\n  border-radius: ${CORNER_RADIUS};\r\n  outline-style: none;\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    transition: ${TRANSITION_TIME};\r\n\r\n    :hover {\r\n      background-color: ${COLORS.gray};\r\n    }\r\n  }\r\n\r\n  :disabled {\r\n    background-color: ${COLORS.grayWithOpacity};\r\n    color: ${COLORS.lightGray};\r\n\r\n    @media (min-width: 1024px) {\r\n      cursor: no-drop;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ApplyButtonStyled = styled.button`\r\n  padding: 5px 10px;\r\n  background-color: ${COLORS.green};\r\n  border: none;\r\n  border-radius: ${CORNER_RADIUS};\r\n  cursor: pointer;\r\n  transition: ${TRANSITION_TIME};\r\n  color: ${COLORS.white};\r\n  outline: none;\r\n\r\n  @media (min-width: 1024px) {\r\n    :hover {\r\n      background-color: ${COLORS.darkGreen};\r\n    }\r\n  }\r\n\r\n  :focus {\r\n    box-shadow: 0 0 5px ${COLORS.gray};\r\n  }\r\n\r\n  i {\r\n    font-weight: bold;\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 18px;\r\n    }\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DenyButtonStyled = styled(ApplyButtonStyled)`\r\n  padding: 5px 12px;\r\n  background-color: ${COLORS.red};\r\n\r\n  @media (min-width: 1024px) {\r\n    :hover {\r\n      background-color: ${COLORS.darkRed};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DeleteButtonStyled = styled.button`\r\n  background-color: ${COLORS.transparent};\r\n  border: none;\r\n  outline: none;\r\n\r\n  @media (min-width: 1024px) {\r\n    cursor: pointer;\r\n  }\r\n\r\n  i {\r\n    font-size: 16px;\r\n    color: ${COLORS.red};\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 18px;\r\n      transition: ${TRANSITION_TIME};\r\n\r\n      :hover {\r\n        transform: scale(1.3);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ExitButtonStyled = styled.button`\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n  background-color: ${COLORS.transparent};\r\n  border: none;\r\n  outline: none;\r\n\r\n  @media (min-width: 1024px) {\r\n    cursor: pointer;\r\n  }\r\n\r\n  i {\r\n    font-size: 14px;\r\n    color: ${COLORS.white};\r\n\r\n    @media (min-width: 411px) {\r\n      font-size: 15px;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 16px;\r\n    }\r\n\r\n    @media (min-width: 1024px) {\r\n      transition: ${TRANSITION_TIME};\r\n\r\n      :hover {\r\n        color: ${COLORS.darkGray};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const InfoButtonStyled = styled.button`\r\n  margin-left: 10px;\r\n  background-color: ${COLORS.transparent};\r\n  border: none;\r\n  outline: none;\r\n\r\n  @media (min-width: 1024px) {\r\n    cursor: pointer;\r\n  }\r\n\r\n  i {\r\n    font-size: 14px;\r\n    color: ${COLORS.darkGray};\r\n\r\n    @media (min-width: 411px) {\r\n      font-size: 15px;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 19px;\r\n    }\r\n\r\n    @media (min-width: 1024px) {\r\n      transition: ${TRANSITION_TIME};\r\n\r\n      :hover {\r\n        color: ${COLORS.gray};\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { getButtonStyles } from \"./helpers\";\r\nimport {\r\n  SharedButtonIcons,\r\n  SharedButtonStyles,\r\n  SharedButtonType,\r\n} from \"./SharedButtonTypes\";\r\n\r\ninterface IProps {\r\n  onClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n  styles?: SharedButtonStyles;\r\n  type?: SharedButtonType;\r\n  icon?: SharedButtonIcons;\r\n  isDisabled?: boolean;\r\n}\r\n\r\nexport const SharedButton: React.FC<IProps> = ({\r\n  onClick,\r\n  type = SharedButtonType.button,\r\n  styles = SharedButtonStyles.basic,\r\n  icon = undefined,\r\n  isDisabled,\r\n  children,\r\n}) => {\r\n  const StyledButton = getButtonStyles(styles);\r\n\r\n  return (\r\n    <StyledButton\r\n      onClick={(event) => onClick(event)}\r\n      type={type}\r\n      disabled={isDisabled}\r\n    >\r\n      {children || <i className={icon}></i>}\r\n    </StyledButton>\r\n  );\r\n};\r\n","import { SharedButtonStyles } from \"./SharedButtonTypes\";\r\n\r\nimport {\r\n  BasicButtonStyled,\r\n  ApplyButtonStyled,\r\n  DenyButtonStyled,\r\n  DeleteButtonStyled,\r\n  ExitButtonStyled,\r\n  InfoButtonStyled,\r\n} from \"./SharedButton.css\";\r\n\r\nexport const getButtonStyles = (styles: SharedButtonStyles) => {\r\n  switch (styles) {\r\n    case SharedButtonStyles.apply:\r\n      return ApplyButtonStyled;\r\n    case SharedButtonStyles.deny:\r\n      return DenyButtonStyled;\r\n    case SharedButtonStyles.delete:\r\n      return DeleteButtonStyled;\r\n    case SharedButtonStyles.exit:\r\n      return ExitButtonStyled;\r\n    case SharedButtonStyles.info:\r\n      return InfoButtonStyled;\r\n    default:\r\n      return BasicButtonStyled;\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\nimport { COLORS, CORNER_RADIUS } from \"styles/variables\";\r\n\r\nexport const PopupWrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  border-radius: ${CORNER_RADIUS};\r\n  box-shadow: 0 0 5px ${COLORS.black};\r\n`;\r\n\r\nexport const PopupTitleGreen = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 5px 30px;\r\n  background-color: ${COLORS.green};\r\n  border-top-left-radius: ${CORNER_RADIUS};\r\n  border-top-right-radius: ${CORNER_RADIUS};\r\n\r\n  p {\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    color: ${COLORS.white};\r\n    text-transform: uppercase;\r\n\r\n    @media (min-width: 411px) {\r\n      font-size: 20px;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 22px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PopupTitleRed = styled(PopupTitleGreen)`\r\n  background-color: ${COLORS.red};\r\n`;\r\n\r\nexport const PopupTitleBlue = styled(PopupTitleGreen)`\r\n  background-color: ${COLORS.blue};\r\n`;\r\n\r\nexport const PopupContentWrapper = styled.div`\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 10px 15px;\r\n  background-color: ${COLORS.white};\r\n  border-bottom-left-radius: ${CORNER_RADIUS};\r\n  border-bottom-right-radius: ${CORNER_RADIUS};\r\n\r\n  p {\r\n    display: block;\r\n    width: 100%;\r\n    text-align: center;\r\n    color: ${COLORS.black};\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 18px;\r\n    }\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n\r\n  button {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nexport const PopupForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  div {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    width: 100%;\r\n    margin-top: 20px;\r\n\r\n    label {\r\n      margin-right: 10px;\r\n      font-size: 14px;\r\n\r\n      @media (min-width: 411px) {\r\n        font-size: 16px;\r\n      }\r\n\r\n      @media (min-width: 768px) {\r\n        font-size: 17px;\r\n      }\r\n    }\r\n\r\n    input {\r\n      height: 30px;\r\n      width: 60%;\r\n      padding: 5px;\r\n      border: none;\r\n      border-bottom: 3px solid ${COLORS.green};\r\n      outline-style: none;\r\n      font-size: 16px;\r\n      outline-offset: 0;\r\n\r\n      @media (min-width: 768px) {\r\n        font-size: 17px;\r\n      }\r\n\r\n      :focus {\r\n        border-bottom: 3px solid ${COLORS.orange};\r\n      }\r\n    }\r\n  }\r\n\r\n  .apply-button {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    width: 100%;\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nexport const PopupSelect = styled.select`\r\n  color: ${COLORS.black};\r\n  font-size: 16px;\r\n  outline-style: none;\r\n  border: none;\r\n  border-bottom: 3px solid ${COLORS.green};\r\n  cursor: pointer;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 17px;\r\n  }\r\n\r\n  :focus {\r\n    font-weight: bold;\r\n    border-bottom: 3px solid ${COLORS.orange};\r\n  }\r\n`;\r\n\r\nexport const PopupSelectOption = styled.option`\r\n  font-size: 12px;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const BtnWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-top: 10px;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { SharedButton } from \"components/shared/SharedButton/SharedButton\";\r\nimport {\r\n  SharedButtonStyles,\r\n  SharedButtonIcons,\r\n} from \"components/shared/SharedButton/SharedButtonTypes\";\r\n\r\nimport {\r\n  PopupWrapper,\r\n  PopupTitleRed,\r\n  PopupContentWrapper,\r\n} from \"styles/mixins/Popups\";\r\nimport { BtnWrapper } from \"./Warnings.css\";\r\n\r\ninterface IProps {\r\n  message: string;\r\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\ninterface IPropsYesNo extends IProps {\r\n  response: (res: boolean) => void;\r\n}\r\n\r\nexport const Warnings: React.FC<IProps> = ({ message, setIsOpen }) => (\r\n  <PopupWrapper>\r\n    <PopupTitleRed>\r\n      <p>Uwaga!</p>\r\n    </PopupTitleRed>\r\n    <PopupContentWrapper>\r\n      <p>{message}</p>\r\n      <SharedButton\r\n        onClick={() => {\r\n          setIsOpen(false);\r\n        }}\r\n        styles={SharedButtonStyles.apply}\r\n        icon={SharedButtonIcons.apply}\r\n      />\r\n    </PopupContentWrapper>\r\n  </PopupWrapper>\r\n);\r\n\r\nexport const WarningsYesNo: React.FC<IPropsYesNo> = ({\r\n  message,\r\n  setIsOpen,\r\n  response,\r\n}) => (\r\n  <PopupWrapper>\r\n    <PopupTitleRed>\r\n      <p>Uwaga!</p>\r\n    </PopupTitleRed>\r\n    <PopupContentWrapper>\r\n      <p>{message}</p>\r\n      <BtnWrapper>\r\n        <SharedButton\r\n          onClick={() => {\r\n            setIsOpen(false);\r\n            response(false);\r\n          }}\r\n          styles={SharedButtonStyles.deny}\r\n          icon={SharedButtonIcons.deny}\r\n        />\r\n        <SharedButton\r\n          onClick={() => {\r\n            setIsOpen(false);\r\n            response(true);\r\n          }}\r\n          styles={SharedButtonStyles.apply}\r\n          icon={SharedButtonIcons.apply}\r\n        />\r\n      </BtnWrapper>\r\n    </PopupContentWrapper>\r\n  </PopupWrapper>\r\n);\r\n","import { IBloodPressureBasedOnAge } from \"common/interfaces\";\r\n\r\ninterface bloodPressure extends IBloodPressureBasedOnAge {\r\n  age: number;\r\n}\r\n\r\nexport const bloodPressureTable: bloodPressure[] = [\r\n  {\r\n    age: 1,\r\n    MIN: {\r\n      SYS: 75,\r\n      DIA: 50,\r\n    },\r\n    NORMAL: {\r\n      SYS: 90,\r\n      DIA: 60,\r\n    },\r\n    MAX: {\r\n      SYS: 110,\r\n      DIA: 75,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 5,\r\n    MIN: {\r\n      SYS: 70,\r\n      DIA: 85,\r\n    },\r\n    NORMAL: {\r\n      SYS: 95,\r\n      DIA: 65,\r\n    },\r\n    MAX: {\r\n      SYS: 110,\r\n      DIA: 79,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 13,\r\n    MIN: {\r\n      SYS: 90,\r\n      DIA: 60,\r\n    },\r\n    NORMAL: {\r\n      SYS: 105,\r\n      DIA: 70,\r\n    },\r\n    MAX: {\r\n      SYS: 115,\r\n      DIA: 80,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 19,\r\n    MIN: {\r\n      SYS: 105,\r\n      DIA: 73,\r\n    },\r\n    NORMAL: {\r\n      SYS: 117,\r\n      DIA: 77,\r\n    },\r\n    MAX: {\r\n      SYS: 120,\r\n      DIA: 81,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 24,\r\n    MIN: {\r\n      SYS: 107,\r\n      DIA: 75,\r\n    },\r\n    NORMAL: {\r\n      SYS: 120,\r\n      DIA: 79,\r\n    },\r\n    MAX: {\r\n      SYS: 132,\r\n      DIA: 83,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 29,\r\n    MIN: {\r\n      SYS: 109,\r\n      DIA: 76,\r\n    },\r\n    NORMAL: {\r\n      SYS: 121,\r\n      DIA: 80,\r\n    },\r\n    MAX: {\r\n      SYS: 133,\r\n      DIA: 84,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 34,\r\n    MIN: {\r\n      SYS: 110,\r\n      DIA: 77,\r\n    },\r\n    NORMAL: {\r\n      SYS: 122,\r\n      DIA: 81,\r\n    },\r\n    MAX: {\r\n      SYS: 134,\r\n      DIA: 85,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 39,\r\n    MIN: {\r\n      SYS: 111,\r\n      DIA: 78,\r\n    },\r\n    NORMAL: {\r\n      SYS: 123,\r\n      DIA: 82,\r\n    },\r\n    MAX: {\r\n      SYS: 135,\r\n      DIA: 86,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 44,\r\n    MIN: {\r\n      SYS: 112,\r\n      DIA: 79,\r\n    },\r\n    NORMAL: {\r\n      SYS: 125,\r\n      DIA: 83,\r\n    },\r\n    MAX: {\r\n      SYS: 137,\r\n      DIA: 87,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 49,\r\n    MIN: {\r\n      SYS: 115,\r\n      DIA: 80,\r\n    },\r\n    NORMAL: {\r\n      SYS: 127,\r\n      DIA: 84,\r\n    },\r\n    MAX: {\r\n      SYS: 139,\r\n      DIA: 88,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 54,\r\n    MIN: {\r\n      SYS: 116,\r\n      DIA: 81,\r\n    },\r\n    NORMAL: {\r\n      SYS: 129,\r\n      DIA: 85,\r\n    },\r\n    MAX: {\r\n      SYS: 142,\r\n      DIA: 89,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 59,\r\n    MIN: {\r\n      SYS: 118,\r\n      DIA: 82,\r\n    },\r\n    NORMAL: {\r\n      SYS: 131,\r\n      DIA: 86,\r\n    },\r\n    MAX: {\r\n      SYS: 144,\r\n      DIA: 90,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 64,\r\n    MIN: {\r\n      SYS: 121,\r\n      DIA: 83,\r\n    },\r\n    NORMAL: {\r\n      SYS: 134,\r\n      DIA: 87,\r\n    },\r\n    MAX: {\r\n      SYS: 147,\r\n      DIA: 91,\r\n    },\r\n  },\r\n\r\n  {\r\n    age: 65,\r\n    MIN: {\r\n      SYS: 123,\r\n      DIA: 85,\r\n    },\r\n    NORMAL: {\r\n      SYS: 135,\r\n      DIA: 88,\r\n    },\r\n    MAX: {\r\n      SYS: 148,\r\n      DIA: 94,\r\n    },\r\n  },\r\n];\r\n\r\nexport const findUserBloodPressureBasedOnAge = (age: number) =>\r\n  bloodPressureTable.find((bloodTable) => {\r\n    if (age <= bloodTable.age) {\r\n      return bloodTable;\r\n    }\r\n    return bloodTable.age === 65;\r\n  });\r\n","import styled from \"styled-components\";\r\nimport { PopupForm } from \"styles/mixins/Popups\";\r\n\r\nexport const FormStyled = styled(PopupForm)`\r\n  align-items: flex-start;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { addProfile } from \"store/actions/profilesAction\";\r\nimport { anonymous } from \"common/constants\";\r\nimport { IGlobalState, IUser } from \"common/interfaces\";\r\nimport { NAME_MAX_CHARS, MAX_AGE } from \"common/constants\";\r\nimport { Portal, PortalTarget } from \"common/Portal/Portal\";\r\nimport { findUserBloodPressureBasedOnAge } from \"common/bloodPressureTable\";\r\nimport { SharedButton } from \"components/shared/SharedButton/SharedButton\";\r\nimport {\r\n  SharedButtonStyles,\r\n  SharedButtonIcons,\r\n  SharedButtonType,\r\n} from \"components/shared/SharedButton/SharedButtonTypes\";\r\nimport { Warnings } from \"components/Popups/Warnings/Warnings\";\r\n\r\nimport {\r\n  PopupWrapper,\r\n  PopupContentWrapper,\r\n  PopupTitleGreen,\r\n} from \"styles/mixins/Popups\";\r\nimport { FormStyled } from \"./AddUser.css\";\r\n\r\ninterface IProps {\r\n  setIsOpenAddUserPopup: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport const AddUser: React.FC<IProps> = ({ setIsOpenAddUserPopup }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const profiles = useSelector((state: IGlobalState) => state.profiles);\r\n  const { nextAvailableUserID } = profiles;\r\n  const [isOpenPortal, setIsOpenPortal] = useState(false);\r\n  const [popup, setPopup] = useState(Object);\r\n\r\n  const handleSubmit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault();\r\n    const parsedAge = parseInt(age);\r\n\r\n    if (name === \"\" || age === \"\") {\r\n      setPopup(\r\n        <Warnings\r\n          message=\"Uzupełnij wszystkie pola.\"\r\n          setIsOpen={setIsOpenPortal}\r\n        />\r\n      );\r\n      setIsOpenPortal(true);\r\n    } else if (name.length >= NAME_MAX_CHARS) {\r\n      setPopup(\r\n        <Warnings\r\n          message={`Podane imię jest za długie. (max ${NAME_MAX_CHARS} znaków)`}\r\n          setIsOpen={setIsOpenPortal}\r\n        />\r\n      );\r\n      setIsOpenPortal(true);\r\n    } else if (parsedAge < 0) {\r\n      setPopup(\r\n        <Warnings\r\n          message=\"Wiek nie może być wartością ujemną.\"\r\n          setIsOpen={setIsOpenPortal}\r\n        />\r\n      );\r\n      setIsOpenPortal(true);\r\n    } else if (parsedAge > MAX_AGE) {\r\n      setPopup(\r\n        <Warnings\r\n          message={`Wiek zbyt duży. (max ${MAX_AGE})`}\r\n          setIsOpen={setIsOpenPortal}\r\n        />\r\n      );\r\n      setIsOpenPortal(true);\r\n    } else if (/\\D/gi.test(age)) {\r\n      setPopup(\r\n        <Warnings\r\n          message=\"Wiek posiada niepoprawną wartość.\"\r\n          setIsOpen={setIsOpenPortal}\r\n        />\r\n      );\r\n      setIsOpenPortal(true);\r\n    } else {\r\n      const getUserBloodPressure =\r\n        findUserBloodPressureBasedOnAge(parsedAge) ||\r\n        anonymous.userBloodPressureBasedOnAge;\r\n\r\n      const newProfile: IUser = {\r\n        id: nextAvailableUserID,\r\n        name: name,\r\n        age: parsedAge,\r\n        userBloodPressureBasedOnAge: {\r\n          MIN: getUserBloodPressure?.MIN,\r\n          NORMAL: getUserBloodPressure?.NORMAL,\r\n          MAX: getUserBloodPressure?.MAX,\r\n        },\r\n        nextAvailablePeriodicTestID: 1,\r\n        periodicPressureTests: [],\r\n      };\r\n      setName(\"\");\r\n      setAge(\"\");\r\n      dispatch(addProfile(newProfile));\r\n      setIsOpenAddUserPopup(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PopupWrapper>\r\n      <PopupTitleGreen>\r\n        <p>Nowy profil</p>\r\n      </PopupTitleGreen>\r\n      <PopupContentWrapper>\r\n        <FormStyled>\r\n          <div>\r\n            <label htmlFor=\"name\">Imię: </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"age\">Wiek: </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"age\"\r\n              value={age}\r\n              onChange={(e) => setAge(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"apply-button\">\r\n            <SharedButton\r\n              onClick={handleSubmit}\r\n              type={SharedButtonType.submit}\r\n              styles={SharedButtonStyles.apply}\r\n              icon={SharedButtonIcons.apply}\r\n            />\r\n          </div>\r\n        </FormStyled>\r\n      </PopupContentWrapper>\r\n      <SharedButton\r\n        onClick={() => setIsOpenAddUserPopup(false)}\r\n        styles={SharedButtonStyles.exit}\r\n        icon={SharedButtonIcons.exit}\r\n      />\r\n      {isOpenPortal ? (\r\n        <Portal target={PortalTarget.MODAL}>{popup}</Portal>\r\n      ) : null}\r\n    </PopupWrapper>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { COLORS, CORNER_RADIUS } from \"styles/variables\";\r\n\r\nexport const LiElement = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 90%;\r\n  margin-bottom: 20px;\r\n  padding: 10px;\r\n  list-style: none;\r\n  background-color: ${COLORS.lightGray};\r\n  border-radius: ${CORNER_RADIUS};\r\n  list-style: none;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { COLORS } from \"styles/variables\";\r\nimport { LiElement } from \"styles/mixins/LiElement\";\r\n\r\nexport const Wrapper = styled(LiElement)``;\r\n\r\nexport const UserData = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 10px;\r\n  border-bottom: 2px solid ${COLORS.darkGray};\r\n\r\n  p {\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Options = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { SharedButton } from \"components/shared/SharedButton/SharedButton\";\r\nimport {\r\n  SharedButtonStyles,\r\n  SharedButtonIcons,\r\n} from \"components/shared/SharedButton/SharedButtonTypes\";\r\n\r\nimport { Wrapper, UserData, Options } from \"./UserProfile.css\";\r\n\r\ninterface UserProfileProps {\r\n  id: number;\r\n  name: string;\r\n  age: number;\r\n  deleteProfile: (id: number, name: string) => void;\r\n  selectUserID: (id: number) => void;\r\n}\r\n\r\nexport const UserProfile: React.FC<UserProfileProps> = ({\r\n  id,\r\n  name,\r\n  age,\r\n  deleteProfile,\r\n  selectUserID,\r\n}) => {\r\n  const history = useHistory();\r\n  return (\r\n    <Wrapper>\r\n      <UserData>\r\n        <p>{name}</p>\r\n        <p>wiek: {age}</p>\r\n      </UserData>\r\n      <Options>\r\n        <SharedButton\r\n          onClick={() => {\r\n            selectUserID(id);\r\n            history.push(\"/measurements\");\r\n          }}\r\n        >\r\n          Otwórz profil\r\n        </SharedButton>\r\n        <SharedButton\r\n          onClick={() => deleteProfile(id, name)}\r\n          styles={SharedButtonStyles.delete}\r\n          icon={SharedButtonIcons.delete}\r\n        />\r\n      </Options>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { COLORS, CORNER_RADIUS } from \"styles/variables\";\r\n\r\nexport const Fieldset = styled.fieldset`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 5px;\r\n  border: 2px solid ${COLORS.gray};\r\n  border-radius: ${CORNER_RADIUS};\r\n  overflow: hidden;\r\n\r\n  ul {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    flex-wrap: nowrap;\r\n    height: 100%;\r\n    margin: 10px 0;\r\n    overflow: auto;\r\n  }\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n  padding: 0 5px;\r\n  font-size: 16px;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  color: ${COLORS.darkGray};\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 18px;\r\n  }\r\n\r\n  span {\r\n    color: ${COLORS.blue};\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Fieldset } from \"styles/mixins/Fieldset\";\r\n\r\nexport const ProfilesSelectorStyled = styled(Fieldset)`\r\n  width: 90%;\r\n  height: 70%;\r\n\r\n  @media (orientation: landscape) {\r\n    width: 70%;\r\n    height: 80%;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    width: 45%;\r\n    height: 70%;\r\n  }\r\n\r\n  @media (min-width: 768px) and (orientation: portrait) {\r\n    width: 45%;\r\n    height: 60%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 40%;\r\n    height: 75%;\r\n  }\r\n\r\n  ul {\r\n    height: 80%;\r\n\r\n    @media (orientation: landscape) {\r\n      height: 75%;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n      height: 85%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UsersWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 80%;\r\n  padding: 10px;\r\n  overflow: auto;\r\n\r\n  @media (orientation: landscape) {\r\n    height: 75%;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    height: 85%;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { deleteProfile, setSelectedUserID } from \"store/actions/profilesAction\";\r\nimport { Portal, PortalTarget } from \"common/Portal/Portal\";\r\nimport { IGlobalState } from \"common/interfaces\";\r\nimport { SharedAddButton } from \"components/shared/SharedAddButton/SharedAddButton\";\r\nimport { SharedPageWrapper } from \"components/shared/SharedPageWrapper/SharedPageWrapper\";\r\nimport { WarningsYesNo } from \"components/Popups/Warnings/Warnings\";\r\nimport { AddUser } from \"components/Popups/AddUser/AddUser\";\r\n\r\nimport { UserProfile } from \"./UserProfile/UserProfile\";\r\nimport { Legend } from \"styles/mixins/Fieldset\";\r\nimport { ProfilesSelectorStyled } from \"./ProfilesSelector.css\";\r\n\r\nexport const ProfilesSelector: React.FC = () => {\r\n  const [isOpenPortal, setIsOpenPortal] = useState(false);\r\n  const [popup, setPopup] = useState<Object>({});\r\n  const users = useSelector((state: IGlobalState) => state.profiles.users);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDeleteProfile = (id: number, name: string) => {\r\n    setPopup(\r\n      <WarningsYesNo\r\n        message={`Usunąć użytkownika ${name}?`}\r\n        setIsOpen={setIsOpenPortal}\r\n        response={(res: boolean) => res && dispatch(deleteProfile(id))}\r\n      />\r\n    );\r\n    setIsOpenPortal(true);\r\n  };\r\n\r\n  const handleAddNewProfile = () => {\r\n    setPopup(<AddUser setIsOpenAddUserPopup={setIsOpenPortal} />);\r\n    setIsOpenPortal(true);\r\n  };\r\n\r\n  const handleSelectUserID = (id: number) => dispatch(setSelectedUserID(id));\r\n\r\n  const renderUsers =\r\n    users.map(({ id, name, age }) => (\r\n      <UserProfile\r\n        key={id}\r\n        id={id}\r\n        name={name}\r\n        age={age}\r\n        deleteProfile={handleDeleteProfile}\r\n        selectUserID={handleSelectUserID}\r\n      />\r\n    )) || [];\r\n\r\n  const legendTitle = renderUsers.length\r\n    ? \"Użytkownicy\"\r\n    : \"Dodaj pierwszego użytkownika\";\r\n\r\n  return (\r\n    <SharedPageWrapper>\r\n      <ProfilesSelectorStyled>\r\n        <Legend>{legendTitle}</Legend>\r\n        <ul>{renderUsers}</ul>\r\n        <SharedAddButton\r\n          onClick={handleAddNewProfile}\r\n          hoverDescription={\"Dodaj nowego użytkownika\"}\r\n        />\r\n      </ProfilesSelectorStyled>\r\n      {isOpenPortal ? (\r\n        <Portal target={PortalTarget.MODAL}>{popup}</Portal>\r\n      ) : null}\r\n    </SharedPageWrapper>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { PopupForm } from \"styles/mixins/Popups\";\r\n\r\nexport const FormStyled = styled(PopupForm)`\r\n  align-items: flex-start;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { addPeriodicPressureTest } from \"store/actions/profilesAction\";\r\nimport { numRangeOptions } from \"common/optionsForSelectTag\";\r\nimport { PeriodicTestStates } from \"common/constants\";\r\nimport { SharedButton } from \"components/shared/SharedButton/SharedButton\";\r\nimport {\r\n  SharedButtonStyles,\r\n  SharedButtonIcons,\r\n  SharedButtonType,\r\n} from \"components/shared/SharedButton/SharedButtonTypes\";\r\n\r\nimport {\r\n  generateDateArray,\r\n  generateDailyTestList,\r\n} from \"./AddPeriodicTestFunctions\";\r\nimport {\r\n  PopupWrapper,\r\n  PopupContentWrapper,\r\n  PopupTitleGreen,\r\n  PopupSelect,\r\n} from \"styles/mixins/Popups\";\r\nimport { FormStyled } from \"./AddPeriodicTest.css\";\r\n\r\nconst today = new Date();\r\n\r\ninterface IProps {\r\n  userID: number;\r\n  nextAvailablePeriodicTestID: number;\r\n  setIsOpenAddPeriodicTestPopup: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport const AddPeriodicTest: React.FC<IProps> = ({\r\n  userID,\r\n  nextAvailablePeriodicTestID,\r\n  setIsOpenAddPeriodicTestPopup,\r\n}) => {\r\n  const [startDay, setStartDay] = useState(today.toISOString().slice(0, 10));\r\n  const [days, setDays] = useState(4);\r\n  const dispatch = useDispatch();\r\n  const renderOptionsDays = numRangeOptions(1, 7);\r\n\r\n  const handleSubmit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault();\r\n    const getDateArray = generateDateArray(startDay, days);\r\n    const getDailyTestList = generateDailyTestList(getDateArray);\r\n    const newPeriodicTest = {\r\n      id: nextAvailablePeriodicTestID,\r\n      start: getDateArray[0],\r\n      end: getDateArray[getDateArray.length - 1],\r\n      days: days,\r\n      state: PeriodicTestStates.IN_PROGRESS,\r\n      totalNumberOfTests: days * 2,\r\n      numberOfTestsDone: 0,\r\n      averageResults: {\r\n        morning: {\r\n          SYS: 0,\r\n          DIA: 0,\r\n          PULSE: 0,\r\n        },\r\n        evening: {\r\n          SYS: 0,\r\n          DIA: 0,\r\n          PULSE: 0,\r\n        },\r\n        total: {\r\n          SYS: 0,\r\n          DIA: 0,\r\n          PULSE: 0,\r\n        },\r\n      },\r\n      list: getDailyTestList,\r\n    };\r\n    dispatch(addPeriodicPressureTest(userID, newPeriodicTest));\r\n    setIsOpenAddPeriodicTestPopup(false);\r\n  };\r\n\r\n  return (\r\n    <PopupWrapper>\r\n      <PopupTitleGreen>\r\n        <p>Nowy pomiar okresowy</p>\r\n      </PopupTitleGreen>\r\n      <PopupContentWrapper>\r\n        <FormStyled>\r\n          <div>\r\n            <label htmlFor=\"dateStart\">Start: </label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"dateStart\"\r\n              value={startDay}\r\n              onChange={(e) => setStartDay(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"days\">Ilość dni: </label>\r\n            <PopupSelect\r\n              value={days}\r\n              id=\"days\"\r\n              onChange={(e) => setDays(Number(e.target.value))}\r\n            >\r\n              {renderOptionsDays}\r\n            </PopupSelect>\r\n          </div>\r\n          <div className=\"apply-button\">\r\n            <SharedButton\r\n              onClick={handleSubmit}\r\n              type={SharedButtonType.submit}\r\n              styles={SharedButtonStyles.apply}\r\n              icon={SharedButtonIcons.apply}\r\n            />\r\n          </div>\r\n        </FormStyled>\r\n      </PopupContentWrapper>\r\n      <SharedButton\r\n        onClick={() => setIsOpenAddPeriodicTestPopup(false)}\r\n        styles={SharedButtonStyles.exit}\r\n        icon={SharedButtonIcons.exit}\r\n      />\r\n    </PopupWrapper>\r\n  );\r\n};\r\n","import { PopupSelectOption } from \"styles/mixins/Popups\";\r\n\r\nexport const numRangeOptions = (minValue: number, maxValue: number) => {\r\n  let numbers = [];\r\n\r\n  for (let i = minValue; i <= maxValue; i++) {\r\n    numbers.push(i);\r\n  }\r\n\r\n  return numbers.map((item) => (\r\n    <PopupSelectOption key={item} value={item}>\r\n      {item}\r\n    </PopupSelectOption>\r\n  ));\r\n};\r\n\r\nexport const elementsListOptions = (elementsList: any[]) => {\r\n  let elements = [];\r\n\r\n  for (let i = 0; i < elementsList.length; i++) {\r\n    elements.push(elementsList[i]);\r\n  }\r\n\r\n  return elements.map((item) => (\r\n    <PopupSelectOption key={item} value={item}>\r\n      {item}\r\n    </PopupSelectOption>\r\n  ));\r\n};\r\n","import { TimeOfDayTypes } from \"common/constants\";\r\nimport { IDailyTest } from \"common/interfaces\";\r\n\r\nexport const generateDateArray = (startDashDate: string, numOfDays: number) => {\r\n  const arrDate = startDashDate.split(\"-\");\r\n  const year = Number(arrDate[0]);\r\n  const month = Number(arrDate[1]);\r\n  const day = Number(arrDate[2]);\r\n  const dateList = [];\r\n  for (let i = 0; i < numOfDays; i++) {\r\n    const date = Date.UTC(year, month - 1, day + i, 0, 0, 0);\r\n    let dateWithDots = new Intl.DateTimeFormat(\"pl\").format(date);\r\n    if (dateWithDots[1] === \".\") dateWithDots = `0${dateWithDots}`;\r\n    dateList.push(dateWithDots);\r\n  }\r\n  return dateList;\r\n};\r\n\r\nexport const generateDailyTestList = (dateList: string[]) => {\r\n  const itemList: IDailyTest[] = dateList.map((date, index) => ({\r\n    id: index + 1,\r\n    date: date,\r\n    morning: {\r\n      timeOfDay: TimeOfDayTypes.morning,\r\n      omitted: false,\r\n      SYS: 0,\r\n      DIA: 0,\r\n      PULSE: 0,\r\n    },\r\n    evening: {\r\n      timeOfDay: TimeOfDayTypes.evening,\r\n      omitted: false,\r\n      SYS: 0,\r\n      DIA: 0,\r\n      PULSE: 0,\r\n    },\r\n  }));\r\n  return itemList;\r\n};\r\n","import styled from \"styled-components\";\r\nimport { COLORS } from \"styles/variables\";\r\nimport { LiElement } from \"styles/mixins/LiElement\";\r\n\r\nexport const Wrapper = styled(LiElement)`\r\n  @media (orientation: landscape) {\r\n    width: 55%;\r\n  }\r\n\r\n  @media (orientation: landscape) and (min-width: 768px) {\r\n    width: 45%;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  margin-bottom: 10px;\r\n  font-size: 16px;\r\n  color: ${COLORS.black};\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 18px;\r\n  }\r\n\r\n  span {\r\n    font-size: 18px;\r\n    color: ${COLORS.blue};\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Subtitle = styled.div`\r\n  margin-bottom: 5px;\r\n  padding: 4px 10px;\r\n  border-bottom: 2px solid ${COLORS.blue};\r\n  border-top: 2px solid ${COLORS.blue};\r\n\r\n  p {\r\n    color: ${COLORS.black};\r\n    font-size: 12px;\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 14px;\r\n    }\r\n    span {\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Info = styled.p`\r\n  font-size: 12px;\r\n\r\n  @media (min-width: 1024px) {\r\n    font-size: 14px;\r\n  }\r\n\r\n  span {\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nexport const Btns = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin-top: 10px;\r\n  width: 90%;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { IPeriodicPressureTests } from \"common/interfaces\";\r\nimport { SharedButton } from \"components/shared/SharedButton/SharedButton\";\r\nimport {\r\n  SharedButtonStyles,\r\n  SharedButtonIcons,\r\n} from \"components/shared/SharedButton/SharedButtonTypes\";\r\n\r\nimport { Wrapper, Title, Subtitle, Info, Btns } from \"./PeriodicTest.css\";\r\n\r\ninterface IProps {\r\n  test: IPeriodicPressureTests;\r\n  openPeriodicTestDetails: (id: number) => void;\r\n  deletePeriodicTest: (id: number) => void;\r\n}\r\n\r\nexport const PeriodicTest: React.FC<IProps> = ({\r\n  test,\r\n  openPeriodicTestDetails,\r\n  deletePeriodicTest,\r\n}) => {\r\n  const {\r\n    id,\r\n    start,\r\n    end,\r\n    days,\r\n    state,\r\n    totalNumberOfTests,\r\n    numberOfTestsDone,\r\n  } = test;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>\r\n        Pomiar okresowy <span>#{id}</span>\r\n      </Title>\r\n      <Subtitle>\r\n        <p>\r\n          od <span>{start}</span> do <span>{end}</span>\r\n        </p>\r\n      </Subtitle>\r\n\r\n      <Info>\r\n        Ilość dni: <span>{days}</span>\r\n      </Info>\r\n\r\n      <Info>\r\n        Wykonane testy: <span>{numberOfTestsDone}</span>/\r\n        <span>{totalNumberOfTests}</span>\r\n      </Info>\r\n\r\n      <Info>\r\n        Status: <span>{state}</span>\r\n      </Info>\r\n\r\n      <Btns>\r\n        <SharedButton onClick={() => openPeriodicTestDetails(id)}>\r\n          Szczegóły...\r\n        </SharedButton>\r\n        <SharedButton\r\n          onClick={() => deletePeriodicTest(id)}\r\n          styles={SharedButtonStyles.delete}\r\n          icon={SharedButtonIcons.delete}\r\n        />\r\n      </Btns>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Fieldset } from \"styles/mixins/Fieldset\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 15px;\r\n  opacity: 0.95;\r\n  overflow: hidden;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 70%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 60%;\r\n  }\r\n`;\r\n\r\nexport const FieldsetStyled = styled(Fieldset)`\r\n  padding-bottom: 15px;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { deletePeriodicPressureTest } from \"store/actions/profilesAction\";\r\nimport { IPeriodicPressureTests } from \"common/interfaces\";\r\nimport { Portal, PortalTarget } from \"common/Portal/Portal\";\r\nimport { SharedAddButton } from \"components/shared/SharedAddButton/SharedAddButton\";\r\nimport { AddPeriodicTest } from \"components/Popups/AddPeriodicTest/AddPeriodicTest\";\r\nimport { WarningsYesNo } from \"components/Popups/Warnings/Warnings\";\r\n\r\nimport { PeriodicTest } from \"./PeriodicTest/PeriodicTest\";\r\nimport { Legend } from \"styles/mixins/Fieldset\";\r\nimport { Wrapper, FieldsetStyled } from \"./PeriodicTestsList.css\";\r\n\r\ninterface IProps {\r\n  userID: number;\r\n  nextAvailablePeriodicTestID: number;\r\n  tests: IPeriodicPressureTests[];\r\n  openPeriodicTestDetails: (id: number) => void;\r\n}\r\n\r\nexport const PeriodicTestsList: React.FC<IProps> = ({\r\n  userID,\r\n  tests,\r\n  nextAvailablePeriodicTestID,\r\n  openPeriodicTestDetails,\r\n}) => {\r\n  const [isOpenPortal, setIsOpenPortal] = useState(false);\r\n  const [popup, setPopup] = useState<Object>({});\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDeletePeriodicTest = (id: number) => {\r\n    setIsOpenPortal(true);\r\n    setPopup(\r\n      <WarningsYesNo\r\n        message={`Usunąć pomiar okresowy #${id}?`}\r\n        setIsOpen={setIsOpenPortal}\r\n        response={(res: boolean) =>\r\n          res && dispatch(deletePeriodicPressureTest(userID, id))\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleAddPeriodicTest = () => {\r\n    setPopup(\r\n      <AddPeriodicTest\r\n        userID={userID}\r\n        nextAvailablePeriodicTestID={nextAvailablePeriodicTestID}\r\n        setIsOpenAddPeriodicTestPopup={setIsOpenPortal}\r\n      />\r\n    );\r\n    setIsOpenPortal(true);\r\n  };\r\n\r\n  const renderPeriodicTests =\r\n    tests.map((test) => (\r\n      <PeriodicTest\r\n        key={test.id}\r\n        test={test}\r\n        openPeriodicTestDetails={openPeriodicTestDetails}\r\n        deletePeriodicTest={handleDeletePeriodicTest}\r\n      />\r\n    )) || [];\r\n\r\n  const legendTitle =\r\n    userID === -1\r\n      ? \"Brak użytkownika\"\r\n      : renderPeriodicTests.length\r\n      ? \"Twoje pomiary okresowe\"\r\n      : \"Dodaj swój pierwszy pomiar\";\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FieldsetStyled>\r\n        <Legend>{legendTitle}</Legend>\r\n        <ul>{renderPeriodicTests}</ul>\r\n        <SharedAddButton\r\n          onClick={handleAddPeriodicTest}\r\n          hoverDescription={\"Dodaj nowy pomiar\"}\r\n          isDisabled={userID === -1}\r\n        />\r\n        {isOpenPortal ? (\r\n          <Portal target={PortalTarget.MODAL}>{popup}</Portal>\r\n        ) : null}\r\n      </FieldsetStyled>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { PopupWrapper } from \"styles/mixins/Popups\";\r\n\r\nexport const Wrapper = styled(PopupWrapper)`\r\n  max-width: 80%;\r\n\r\n  @media (min-width: 768px) {\r\n    max-width: 45%;\r\n  }\r\n`;\r\n","import { TimeOfDayTypes, MAX_SYS_DIA_PULSE_VALUE } from \"common/constants\";\r\nimport { IUser } from \"common/interfaces\";\r\n\r\nexport const getDailyTimeOfDayTestValues = (\r\n  users: IUser[],\r\n  userID: number,\r\n  periodicID: number,\r\n  dailyID: number,\r\n  timeOfDay: TimeOfDayTypes\r\n) => {\r\n  let testValues: {\r\n    timeOfDay: TimeOfDayTypes;\r\n    omitted: boolean;\r\n    SYS: number;\r\n    DIA: number;\r\n    PULSE: number;\r\n  } = {\r\n    timeOfDay: TimeOfDayTypes.morning,\r\n    omitted: false,\r\n    SYS: 0,\r\n    DIA: 0,\r\n    PULSE: 0,\r\n  };\r\n\r\n  users.forEach((user) => {\r\n    if (user.id === userID) {\r\n      user.periodicPressureTests.forEach((periodicTest) => {\r\n        if (periodicTest.id === periodicID) {\r\n          periodicTest.list.forEach((test) => {\r\n            if (test.id === dailyID && test.morning.timeOfDay === timeOfDay) {\r\n              testValues = test.morning;\r\n            } else if (\r\n              test.id === dailyID &&\r\n              test.evening.timeOfDay === timeOfDay\r\n            ) {\r\n              testValues = test.evening;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  const { SYS, DIA, PULSE } = testValues;\r\n  const sysValue = SYS !== 0 ? SYS.toString() : \"\";\r\n  const diaValue = DIA !== 0 ? DIA.toString() : \"\";\r\n  const pulseValue = PULSE !== 0 ? PULSE.toString() : \"\";\r\n\r\n  return {\r\n    currentSys: sysValue,\r\n    currentDia: diaValue,\r\n    currentPulse: pulseValue,\r\n  };\r\n};\r\n\r\nexport enum ValidateStateTypes {\r\n  notEnough = \"notEnough\",\r\n  tooMuch = \"tooMuch\",\r\n  badSign = \"badSign\",\r\n  correct = \"correct\",\r\n}\r\n\r\nexport const validateValues = (\r\n  sys: string,\r\n  dia: string,\r\n  pulse: string\r\n): IValidateValues => {\r\n  if (Number(sys) < 0 || Number(dia) < 0 || Number(pulse) < 0) {\r\n    return {\r\n      state: ValidateStateTypes.notEnough,\r\n      message: \"Conajmniej jedno pole zawiera ujemną wartość.\",\r\n    };\r\n  } else if (\r\n    Number(sys) > MAX_SYS_DIA_PULSE_VALUE ||\r\n    Number(dia) > MAX_SYS_DIA_PULSE_VALUE ||\r\n    Number(pulse) > MAX_SYS_DIA_PULSE_VALUE\r\n  ) {\r\n    return {\r\n      state: ValidateStateTypes.tooMuch,\r\n      message: `Conajmniej jedno pole zawiera zbyt dużą wartość. (max ${MAX_SYS_DIA_PULSE_VALUE})`,\r\n    };\r\n  } else if (\r\n    /\\D/gi.test(sys) ||\r\n    /\\D/gi.test(dia) ||\r\n    /\\D/gi.test(pulse) ||\r\n    sys === \"\" ||\r\n    dia === \"\" ||\r\n    pulse === \"\"\r\n  ) {\r\n    return {\r\n      state: ValidateStateTypes.badSign,\r\n      message: \"Conajmniej jedno pole ma nieprawidłową wartość.\",\r\n    };\r\n  }\r\n  return {\r\n    state: ValidateStateTypes.correct,\r\n    message: \"\",\r\n  };\r\n};\r\n\r\ninterface IValidateValues {\r\n  state: ValidateStateTypes;\r\n  message: string;\r\n}\r\n","import React from \"react\";\r\n\r\nimport { SharedButton } from \"components/shared/SharedButton/SharedButton\";\r\nimport {\r\n  SharedButtonStyles,\r\n  SharedButtonIcons,\r\n} from \"components/shared/SharedButton/SharedButtonTypes\";\r\n\r\nimport { PopupTitleBlue, PopupContentWrapper } from \"styles/mixins/Popups\";\r\nimport { Wrapper } from \"./Information.css\";\r\n\r\ninterface IProps {\r\n  message: string;\r\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport const Information: React.FC<IProps> = ({ message, setIsOpen }) => (\r\n  <Wrapper>\r\n    <PopupTitleBlue>\r\n      <p>Informacja</p>\r\n    </PopupTitleBlue>\r\n    <PopupContentWrapper>\r\n      <p>{message}</p>\r\n      <SharedButton\r\n        onClick={() => setIsOpen(false)}\r\n        styles={SharedButtonStyles.apply}\r\n        icon={SharedButtonIcons.apply}\r\n      />\r\n    </PopupContentWrapper>\r\n  </Wrapper>\r\n);\r\n","import styled from \"styled-components\";\r\nimport { PopupForm } from \"styles/mixins/Popups\";\r\n\r\nexport const FormStyled = styled(PopupForm)`\r\n  div {\r\n    justify-content: center;\r\n\r\n    input {\r\n      width: 30%;\r\n\r\n      @media (min-width: 1024px) {\r\n        width: 35%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  editDailyValues,\r\n  updateNumberOfTotalAndDoneTestsAndState,\r\n} from \"store/actions/profilesAction\";\r\nimport {\r\n  TimeOfDayTypes,\r\n  TEST_VALUES_INFO,\r\n  TimeOfDayDisplayNames,\r\n  MeasurementSymbols,\r\n} from \"common/constants\";\r\nimport { Portal, PortalTarget } from \"common/Portal/Portal\";\r\nimport { IGlobalState } from \"common/interfaces\";\r\nimport { SharedButton } from \"components/shared/SharedButton/SharedButton\";\r\nimport {\r\n  SharedButtonStyles,\r\n  SharedButtonIcons,\r\n  SharedButtonType,\r\n} from \"components/shared/SharedButton/SharedButtonTypes\";\r\nimport { Information } from \"components/Popups/Information/Information\";\r\nimport { Warnings } from \"components/Popups/Warnings/Warnings\";\r\n\r\nimport {\r\n  getDailyTimeOfDayTestValues,\r\n  validateValues,\r\n  ValidateStateTypes,\r\n} from \"./EditDailyTestFunctions\";\r\nimport {\r\n  PopupWrapper,\r\n  PopupTitleGreen,\r\n  PopupContentWrapper,\r\n} from \"styles/mixins/Popups\";\r\nimport { FormStyled } from \"./EditDailyTest.css\";\r\n\r\ninterface IProps {\r\n  userID: number;\r\n  periodicID: number;\r\n  dailyID: number;\r\n  timeOfDay: TimeOfDayTypes;\r\n  setIsOpenEditDailyTestPopup: React.Dispatch<React.SetStateAction<boolean>>;\r\n  date: string;\r\n}\r\n\r\nexport const EditDailyTest: React.FC<IProps> = ({\r\n  userID,\r\n  periodicID,\r\n  dailyID,\r\n  timeOfDay,\r\n  setIsOpenEditDailyTestPopup,\r\n  date,\r\n}) => {\r\n  const users = useSelector((state: IGlobalState) => state.profiles.users);\r\n  const currentTestValuesToRender = getDailyTimeOfDayTestValues(\r\n    users,\r\n    userID,\r\n    periodicID,\r\n    dailyID,\r\n    timeOfDay\r\n  );\r\n  const { currentSys, currentDia, currentPulse } = currentTestValuesToRender;\r\n  const [sys, setSys] = useState(currentSys);\r\n  const [dia, setDia] = useState(currentDia);\r\n  const [pulse, setPulse] = useState(currentPulse);\r\n  const [isOpenPortal, setIsOpenPortal] = useState(false);\r\n  const [popup, setPopup] = useState(Object);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault();\r\n    const checkValues = validateValues(sys, dia, pulse);\r\n    if (checkValues.state === ValidateStateTypes.notEnough) {\r\n      setPopup(\r\n        <Warnings message={checkValues.message} setIsOpen={setIsOpenPortal} />\r\n      );\r\n      setIsOpenPortal(true);\r\n    } else if (checkValues.state === ValidateStateTypes.tooMuch) {\r\n      setPopup(\r\n        <Warnings message={checkValues.message} setIsOpen={setIsOpenPortal} />\r\n      );\r\n      setIsOpenPortal(true);\r\n    } else if (checkValues.state === ValidateStateTypes.badSign) {\r\n      setPopup(\r\n        <Warnings message={checkValues.message} setIsOpen={setIsOpenPortal} />\r\n      );\r\n      setIsOpenPortal(true);\r\n    } else if (checkValues.state === ValidateStateTypes.correct) {\r\n      dispatch(\r\n        editDailyValues(\r\n          userID,\r\n          periodicID,\r\n          dailyID,\r\n          timeOfDay,\r\n          Number(sys),\r\n          Number(dia),\r\n          Number(pulse)\r\n        )\r\n      );\r\n      dispatch(updateNumberOfTotalAndDoneTestsAndState(userID, periodicID));\r\n      setIsOpenEditDailyTestPopup(false);\r\n    }\r\n  };\r\n\r\n  const handleShowInfo = (messageType: MeasurementSymbols) => {\r\n    let messageToShow = \"\";\r\n\r\n    switch (messageType) {\r\n      case MeasurementSymbols.sys: {\r\n        messageToShow = TEST_VALUES_INFO.SYS;\r\n        break;\r\n      }\r\n      case MeasurementSymbols.dia: {\r\n        messageToShow = TEST_VALUES_INFO.DIA;\r\n        break;\r\n      }\r\n      case MeasurementSymbols.pulse: {\r\n        messageToShow = TEST_VALUES_INFO.PULSE;\r\n        break;\r\n      }\r\n    }\r\n    setPopup(\r\n      <Information message={messageToShow} setIsOpen={setIsOpenPortal} />\r\n    );\r\n    setIsOpenPortal(true);\r\n  };\r\n\r\n  return (\r\n    <PopupWrapper>\r\n      <PopupTitleGreen>\r\n        <p>{`${\r\n          timeOfDay === TimeOfDayTypes.morning\r\n            ? TimeOfDayDisplayNames.morning\r\n            : TimeOfDayDisplayNames.evening\r\n        } ${date}`}</p>\r\n      </PopupTitleGreen>\r\n      <PopupContentWrapper>\r\n        <FormStyled>\r\n          <div>\r\n            <label htmlFor=\"sys\">SYS: </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"sys\"\r\n              value={sys}\r\n              onChange={(e) => setSys(e.target.value)}\r\n              autoFocus\r\n            />\r\n            <SharedButton\r\n              onClick={() => handleShowInfo(MeasurementSymbols.sys)}\r\n              styles={SharedButtonStyles.info}\r\n              icon={SharedButtonIcons.info}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"dia\">DIA: </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"dia\"\r\n              value={dia}\r\n              onChange={(e) => setDia(e.target.value)}\r\n            />\r\n            <SharedButton\r\n              onClick={() => handleShowInfo(MeasurementSymbols.dia)}\r\n              styles={SharedButtonStyles.info}\r\n              icon={SharedButtonIcons.info}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"pulse\">PULS: </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"pulse\"\r\n              value={pulse}\r\n              onChange={(e) => setPulse(e.target.value)}\r\n            />\r\n            <SharedButton\r\n              onClick={() => handleShowInfo(MeasurementSymbols.pulse)}\r\n              styles={SharedButtonStyles.info}\r\n              icon={SharedButtonIcons.info}\r\n            />\r\n          </div>\r\n          <div className=\"apply-button\">\r\n            <SharedButton\r\n              onClick={handleSubmit}\r\n              type={SharedButtonType.submit}\r\n              styles={SharedButtonStyles.apply}\r\n              icon={SharedButtonIcons.apply}\r\n            />\r\n          </div>\r\n        </FormStyled>\r\n      </PopupContentWrapper>\r\n      <SharedButton\r\n        onClick={() => setIsOpenEditDailyTestPopup(false)}\r\n        styles={SharedButtonStyles.exit}\r\n        icon={SharedButtonIcons.exit}\r\n      />\r\n      {isOpenPortal ? (\r\n        <Portal target={PortalTarget.MODAL}>{popup}</Portal>\r\n      ) : null}\r\n    </PopupWrapper>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/OpenSans-Regular.1b0809d5.ttf\";","export default __webpack_public_path__ + \"static/media/OpenSans-Bold.dbb97fd9.ttf\";","import { StyleSheet, Font } from \"@react-pdf/renderer\";\r\n\r\nimport OpenSansRegular from \"./PDF_Fonts/OpenSans-Regular.ttf\";\r\nimport OpenSansBold from \"./PDF_Fonts/OpenSans-Bold.ttf\";\r\n\r\nimport { COLORS } from \"styles/variables\";\r\n\r\nFont.register({\r\n  family: \"OpenSansRegular\",\r\n  src: OpenSansRegular,\r\n});\r\n\r\nFont.register({\r\n  family: \"OpenSansBold\",\r\n  src: OpenSansBold,\r\n});\r\n\r\nexport const styles = StyleSheet.create({\r\n  page: {\r\n    flexDirection: \"column\",\r\n    padding: 15,\r\n    fontFamily: \"OpenSansRegular\",\r\n    backgroundColor: COLORS.white,\r\n    color: COLORS.black,\r\n  },\r\n  logoView: {\r\n    padding: \"5 15\",\r\n    marginBottom: 5,\r\n    backgroundColor: COLORS.blue,\r\n  },\r\n  logoText: {\r\n    fontSize: 18,\r\n    fontFamily: \"OpenSansBold\",\r\n    color: COLORS.white,\r\n  },\r\n  userDataView: {\r\n    padding: \"5 10\",\r\n  },\r\n  periodicTestInfoView: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 30,\r\n    marginBottom: 20,\r\n    padding: \"5 10\",\r\n  },\r\n  periodicText: {\r\n    fontSize: 14,\r\n    fontFamily: \"OpenSansBold\",\r\n  },\r\n  tableHeaderView: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    padding: \"5 0\",\r\n    marginBottom: 5,\r\n    backgroundColor: COLORS.blue,\r\n  },\r\n  tableHeaderText: {\r\n    width: \"33%\",\r\n    fontSize: 12,\r\n    textAlign: \"center\",\r\n    fontFamily: \"OpenSansBold\",\r\n    color: COLORS.white,\r\n  },\r\n  tableContentView: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    padding: \"5 0\",\r\n    marginBottom: 5,\r\n    borderBottomWidth: 1,\r\n    borderBottomStyle: \"solid\",\r\n    borderBottomColor: COLORS.darkGray,\r\n    backgroundColor: COLORS.white,\r\n  },\r\n  tableContentText: {\r\n    width: \"33%\",\r\n    fontSize: 12,\r\n    textAlign: \"center\",\r\n  },\r\n  averageTitleView: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 30,\r\n    padding: \"5 10\",\r\n  },\r\n  averageTitleText: {\r\n    fontSize: 14,\r\n    fontFamily: \"OpenSansBold\",\r\n  },\r\n  freeSpaceView: {\r\n    flexGrow: 1,\r\n  },\r\n  footerView: {\r\n    padding: \"5 10\",\r\n    marginTop: 10,\r\n    borderTopWidth: 1,\r\n    borderTopStyle: \"solid\",\r\n    borderTopColor: COLORS.darkGray,\r\n  },\r\n  fotterText: {\r\n    fontSize: 9,\r\n    textAlign: \"center\",\r\n  },\r\n  normalText: {\r\n    fontSize: 11,\r\n  },\r\n  boldText: {\r\n    fontSize: 11,\r\n    fontFamily: \"OpenSansBold\",\r\n  },\r\n});\r\n","import { View, Text } from \"@react-pdf/renderer\";\r\n\r\nimport { COLORS } from \"styles/variables\";\r\nimport { styles } from \"common/PDF/PdfPage.styles\";\r\n\r\nexport const LogoView = () => (\r\n  <View style={styles.logoView}>\r\n    <Text style={styles.logoText}>\r\n      BADAJ <Text style={{ color: COLORS.orange }}>CIŚNIENIE</Text>\r\n    </Text>\r\n  </View>\r\n);\r\n","import { View, Text } from \"@react-pdf/renderer\";\r\n\r\nimport { styles } from \"common/PDF/PdfPage.styles\";\r\n\r\ninterface IProps {\r\n  name: string;\r\n  age: number;\r\n}\r\n\r\nexport const UserDataView = ({ name, age }: IProps) => (\r\n  <View style={styles.userDataView}>\r\n    <Text style={styles.normalText}>\r\n      {`Imię: `}\r\n      <Text style={styles.boldText}>{`${name}`}</Text>\r\n      {`, wiek: `}\r\n      <Text style={styles.boldText}>{`${age}`}</Text>\r\n    </Text>\r\n  </View>\r\n);\r\n","import { View, Text } from \"@react-pdf/renderer\";\r\n\r\nimport { COLORS } from \"styles/variables\";\r\nimport { styles } from \"common/PDF/PdfPage.styles\";\r\n\r\ninterface IProps {\r\n  periodicID: number;\r\n  start: string;\r\n  end: string;\r\n}\r\n\r\nexport const PeriodicTestInfoView = ({ periodicID, start, end }: IProps) => (\r\n  <View style={styles.periodicTestInfoView}>\r\n    <Text style={styles.periodicText}>\r\n      {`Pomiar okresowy`}\r\n      <Text style={{ color: COLORS.blue }}>{` #${periodicID}`}</Text>\r\n    </Text>\r\n    <Text style={styles.normalText}>{`(od ${start} do ${end})`}</Text>\r\n  </View>\r\n);\r\n","import { View, Text } from \"@react-pdf/renderer\";\r\n\r\nimport { IDailyTest } from \"common/interfaces\";\r\nimport { styles } from \"common/PDF/PdfPage.styles\";\r\n\r\ninterface IProps {\r\n  list: IDailyTest[];\r\n}\r\n\r\nexport const DailyTestsTableView = ({ list }: IProps) => {\r\n  const renderDailyTests = list.map((item) => {\r\n    const isOmmitedMorning = item.morning.omitted ? (\r\n      <Text style={styles.normalText}>---</Text>\r\n    ) : (\r\n      <>\r\n        <Text style={styles.boldText}>{item.morning.SYS}</Text>\r\n        <Text>/</Text>\r\n        <Text style={styles.boldText}>{item.morning.DIA}</Text> Puls:{\" \"}\r\n        {item.morning.PULSE}\r\n      </>\r\n    );\r\n    const isOmmitedEvenign = item.evening.omitted ? (\r\n      <Text style={styles.normalText}>---</Text>\r\n    ) : (\r\n      <>\r\n        <Text style={styles.boldText}>{item.evening.SYS}</Text>\r\n        <Text>/</Text>\r\n        <Text style={styles.boldText}>{item.evening.DIA}</Text> Puls:{\" \"}\r\n        {item.evening.PULSE}\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <View key={item.id} style={styles.tableContentView}>\r\n        <Text style={styles.tableContentText}>{`${item.date}`}</Text>\r\n        <Text style={styles.tableContentText}>{isOmmitedMorning}</Text>\r\n        <Text style={styles.tableContentText}>{isOmmitedEvenign}</Text>\r\n      </View>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.tableHeaderView}>\r\n        <Text style={styles.tableHeaderText}>DATA</Text>\r\n        <Text style={styles.tableHeaderText}>RANO</Text>\r\n        <Text style={styles.tableHeaderText}>WIECZÓR</Text>\r\n      </View>\r\n      {renderDailyTests}\r\n    </>\r\n  );\r\n};\r\n","import { View, Text } from \"@react-pdf/renderer\";\r\n\r\nimport { TimeOfDayAverageTypes } from \"common/constants\";\r\n\r\nimport { COLORS } from \"styles/variables\";\r\nimport { styles } from \"common/PDF/PdfPage.styles\";\r\n\r\ninterface IProps {\r\n  averageResults: {\r\n    morning: {\r\n      SYS: number;\r\n      DIA: number;\r\n      PULSE: number;\r\n    };\r\n    evening: {\r\n      SYS: number;\r\n      DIA: number;\r\n      PULSE: number;\r\n    };\r\n    total: {\r\n      SYS: number;\r\n      DIA: number;\r\n      PULSE: number;\r\n    };\r\n  };\r\n}\r\n\r\nexport const AverageResultsView = ({ averageResults }: IProps) => {\r\n  const getAverage = (timeOfDay: TimeOfDayAverageTypes) => {\r\n    return (\r\n      <>\r\n        <Text style={styles.boldText}>{averageResults[timeOfDay].SYS}</Text>\r\n        <Text>/</Text>\r\n        <Text style={styles.boldText}>\r\n          {averageResults[timeOfDay].DIA}\r\n        </Text>{\" \"}\r\n        Puls: {averageResults[timeOfDay].PULSE}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderAverageMorning = getAverage(TimeOfDayAverageTypes.morning);\r\n  const renderAverageEvening = getAverage(TimeOfDayAverageTypes.evening);\r\n  const renderAverageTotal = getAverage(TimeOfDayAverageTypes.total);\r\n\r\n  const renderAllAverageResults = (\r\n    <View style={styles.tableContentView}>\r\n      <Text style={{ ...styles.tableContentText, color: COLORS.blue }}>\r\n        {renderAverageTotal}\r\n      </Text>\r\n      <Text style={styles.tableContentText}>{renderAverageMorning}</Text>\r\n      <Text style={styles.tableContentText}>{renderAverageEvening}</Text>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.averageTitleView}>\r\n        <Text style={styles.averageTitleText}>ŚREDNIE WYNIKI</Text>\r\n      </View>\r\n      <View style={styles.tableHeaderView}>\r\n        <Text style={styles.tableHeaderText}>ŁĄCZNIE</Text>\r\n        <Text style={styles.tableHeaderText}>RANO</Text>\r\n        <Text style={styles.tableHeaderText}>WIECZÓR</Text>\r\n      </View>\r\n      {renderAllAverageResults}\r\n    </>\r\n  );\r\n};\r\n","import { View, Text } from \"@react-pdf/renderer\";\r\n\r\nimport { styles } from \"common/PDF/PdfPage.styles\";\r\n\r\nexport const FooterView = () => (\r\n  <View style={styles.footerView}>\r\n    <Text style={styles.fotterText}>\r\n      Wygenerowano za pomocą strony Badaj Ciśnienie\r\n      (https://mkphercog.github.io/checkthepressure/), niniejszy dokument jest\r\n      tylko zapisem okresowego pomiaru ciśnienia krwi pacjenta. Wszelkie\r\n      oznaczenia kolorystyczne używane na stronie (min, norma, max - względem\r\n      wieku) są tylko poglądowe i nie zastąpią konsultacji z lekarzem\r\n      prowadzącym. Autor strony: Marcin Hercog\r\n    </Text>\r\n  </View>\r\n);\r\n","import { Document, Page, View } from \"@react-pdf/renderer\";\r\n\r\nimport { IUser } from \"common/interfaces\";\r\nimport { anonymous } from \"common/constants\";\r\nimport { LogoView } from \"./PageViews/LogoView\";\r\nimport { UserDataView } from \"./PageViews/UserDataView\";\r\nimport { PeriodicTestInfoView } from \"./PageViews/PeriodicTestInfoView\";\r\nimport { DailyTestsTableView } from \"./PageViews/DailyTestsTableView\";\r\nimport { AverageResultsView } from \"./PageViews/AverageResultsView\";\r\nimport { FooterView } from \"./PageViews/FooterView\";\r\n\r\nimport { styles } from \"./PdfPage.styles\";\r\n\r\ninterface IProps {\r\n  user: IUser;\r\n  periodicID: number;\r\n}\r\n\r\nexport const MyDocument = ({ user, periodicID }: IProps) => {\r\n  const { name, age, periodicPressureTests } = user;\r\n  const test = periodicPressureTests.find((test) => test.id === periodicID);\r\n  const { start, end, list, averageResults } =\r\n    test || anonymous.periodicPressureTests[0];\r\n\r\n  return (\r\n    <Document>\r\n      <Page size=\"A4\" style={styles.page}>\r\n        <LogoView />\r\n        <UserDataView name={name} age={age} />\r\n        <PeriodicTestInfoView periodicID={periodicID} start={start} end={end} />\r\n        <DailyTestsTableView list={list} />\r\n        <AverageResultsView averageResults={averageResults} />\r\n        <View style={styles.freeSpaceView}></View>\r\n        <FooterView />\r\n      </Page>\r\n    </Document>\r\n  );\r\n};\r\n","import { PDFDownloadLink } from \"@react-pdf/renderer\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { COLORS, CORNER_RADIUS, TRANSITION_TIME } from \"styles/variables\";\r\n\r\nexport const PDFDownloadLinkStyled = styled(PDFDownloadLink)`\r\n  margin-bottom: 15px;\r\n  padding: 5px 10px;\r\n  border-radius: ${CORNER_RADIUS};\r\n  background-color: ${COLORS.darkGray};\r\n  color: ${COLORS.white};\r\n  font-weight: bold;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n\r\n  @media (min-width: 1024px) {\r\n    transition: ${TRANSITION_TIME};\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n      background-color: ${COLORS.darkGreen};\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { anonymous } from \"common/constants\";\r\nimport { IGlobalState } from \"common/interfaces\";\r\nimport { MyDocument } from \"./PdfPage\";\r\n\r\nimport { PDFDownloadLinkStyled } from \"./PdfPageGenerator.css\";\r\n\r\ninterface IProps {\r\n  userID: number;\r\n  periodicID: number;\r\n  startDate: string;\r\n  endDate: string;\r\n}\r\n\r\nexport const PdfPageGenerator: React.FC<IProps> = ({\r\n  userID,\r\n  periodicID,\r\n  startDate,\r\n  endDate,\r\n}) => {\r\n  const user = useSelector((state: IGlobalState) =>\r\n    state.profiles.users.find((user) => user.id === userID)\r\n  );\r\n\r\n  return (\r\n    <PDFDownloadLinkStyled\r\n      document={<MyDocument user={user || anonymous} periodicID={periodicID} />}\r\n      fileName={`Pomiar ciśnienia #${periodicID} (${startDate} - ${endDate}) - ${user?.name}.pdf`}\r\n    >\r\n      {({ blob, url, loading, error }) =>\r\n        loading ? \"Ładowanie...\" : \"Wygeneruj pdf z wynikami\"\r\n      }\r\n    </PDFDownloadLinkStyled>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Fieldset } from \"styles/mixins/Fieldset\";\r\nimport { PopupContentWrapper } from \"styles/mixins/Popups\";\r\n\r\nexport const Content = styled(PopupContentWrapper)`\r\n  justify-content: center;\r\n  flex-direction: column;\r\n\r\n  h1 {\r\n    font-size: 18px;\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 22px;\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FieldsetStyled = styled(Fieldset)`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex-wrap: nowrap;\r\n  margin-bottom: 10px;\r\n\r\n  @media (min-width: 768px) {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  p {\r\n    margin: 5px 15px;\r\n    font-size: 14px;\r\n    white-space: nowrap;\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 16px;\r\n    }\r\n\r\n    span {\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SysAndDiaColored = styled.span`\r\n  color: ${(props: { color: string }) => props.color};\r\n  font-weight: bold;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { TimeOfDayAverageTypes, MeasurementSymbols } from \"common/constants\";\r\n\r\nimport { Legend } from \"styles/mixins/Fieldset\";\r\nimport { FieldsetStyled, SysAndDiaColored } from \"./AverageResults.css\";\r\n\r\ninterface IProps {\r\n  timeOfDayName: string;\r\n  averageResults: {\r\n    morning: {\r\n      SYS: number;\r\n      DIA: number;\r\n      PULSE: number;\r\n    };\r\n    evening: { SYS: number; DIA: number; PULSE: number };\r\n    total: { SYS: number; DIA: number; PULSE: number };\r\n  };\r\n  resultName: TimeOfDayAverageTypes;\r\n  getSysDiaColor: Function;\r\n}\r\n\r\nexport const ResultsInFieldset: React.FC<IProps> = ({\r\n  timeOfDayName,\r\n  averageResults,\r\n  resultName,\r\n  getSysDiaColor,\r\n}) => (\r\n  <FieldsetStyled>\r\n    <Legend>{timeOfDayName}</Legend>\r\n    <p>\r\n      Ciśnienie:{\" \"}\r\n      <SysAndDiaColored\r\n        color={getSysDiaColor(\r\n          averageResults[resultName].SYS,\r\n          MeasurementSymbols.sys\r\n        )}\r\n      >\r\n        {averageResults[resultName].SYS}\r\n      </SysAndDiaColored>\r\n      /\r\n      <SysAndDiaColored\r\n        color={getSysDiaColor(\r\n          averageResults[resultName].DIA,\r\n          MeasurementSymbols.dia\r\n        )}\r\n      >\r\n        {averageResults[resultName].DIA}\r\n      </SysAndDiaColored>\r\n    </p>\r\n    <p>\r\n      PULS: <span>{averageResults[resultName].PULSE}</span>\r\n    </p>\r\n  </FieldsetStyled>\r\n);\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { IGlobalState, IPeriodicPressureTests } from \"common/interfaces\";\r\nimport { PdfPageGenerator } from \"common/PDF/PdfPageGenerator\";\r\nimport {\r\n  anonymous,\r\n  TimeOfDayAverageTypes,\r\n  TimeOfDayDisplayNames,\r\n  MeasurementSymbols,\r\n} from \"common/constants\";\r\nimport { SharedButton } from \"components/shared/SharedButton/SharedButton\";\r\nimport {\r\n  SharedButtonStyles,\r\n  SharedButtonIcons,\r\n} from \"components/shared/SharedButton/SharedButtonTypes\";\r\n\r\nimport { ResultsInFieldset } from \"./ResultsInFieldset\";\r\nimport { PopupWrapper, PopupTitleGreen } from \"styles/mixins/Popups\";\r\nimport { COLORS } from \"styles/variables\";\r\nimport { Content } from \"./AverageResults.css\";\r\n\r\ninterface IProps {\r\n  userID: number;\r\n  periodicTest: IPeriodicPressureTests;\r\n  setIsOpenAverageResultsPopup: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport const AverageResults: React.FC<IProps> = ({\r\n  userID,\r\n  periodicTest,\r\n  setIsOpenAverageResultsPopup,\r\n}) => {\r\n  const { id, averageResults, start, end } = periodicTest;\r\n\r\n  const userBloodPressureBasedOnAge = useSelector(\r\n    (state: IGlobalState) =>\r\n      state.profiles.users.find((user) => userID === user.id)\r\n        ?.userBloodPressureBasedOnAge\r\n  );\r\n  const { MIN, MAX } =\r\n    userBloodPressureBasedOnAge || anonymous.userBloodPressureBasedOnAge;\r\n\r\n  const getSysDiaColor = (value: number, type: MeasurementSymbols) => {\r\n    if (value === 0) return COLORS.black;\r\n    else if (\r\n      (value <= MIN.SYS && type === MeasurementSymbols.sys) ||\r\n      (value <= MIN.DIA && type === MeasurementSymbols.dia)\r\n    )\r\n      return COLORS.blue;\r\n    else if (\r\n      (value >= MAX.SYS && type === MeasurementSymbols.sys) ||\r\n      (value >= MAX.DIA && type === MeasurementSymbols.dia)\r\n    )\r\n      return COLORS.red;\r\n    return COLORS.darkGreen;\r\n  };\r\n\r\n  return (\r\n    <PopupWrapper>\r\n      <PopupTitleGreen>\r\n        <p>Podsumowanie pomiaru #{id}</p>\r\n      </PopupTitleGreen>\r\n      <Content>\r\n        <h1>Średnie wyniki</h1>\r\n        <div>\r\n          <ResultsInFieldset\r\n            timeOfDayName={TimeOfDayDisplayNames.morning}\r\n            averageResults={averageResults}\r\n            resultName={TimeOfDayAverageTypes.morning}\r\n            getSysDiaColor={getSysDiaColor}\r\n          />\r\n          <ResultsInFieldset\r\n            timeOfDayName={TimeOfDayDisplayNames.evening}\r\n            averageResults={averageResults}\r\n            resultName={TimeOfDayAverageTypes.evening}\r\n            getSysDiaColor={getSysDiaColor}\r\n          />\r\n          <ResultsInFieldset\r\n            timeOfDayName={TimeOfDayDisplayNames.total}\r\n            averageResults={averageResults}\r\n            resultName={TimeOfDayAverageTypes.total}\r\n            getSysDiaColor={getSysDiaColor}\r\n          />\r\n        </div>\r\n        <PdfPageGenerator\r\n          userID={userID}\r\n          periodicID={id}\r\n          startDate={start}\r\n          endDate={end}\r\n        />\r\n      </Content>\r\n      <SharedButton\r\n        onClick={() => setIsOpenAverageResultsPopup(false)}\r\n        styles={SharedButtonStyles.exit}\r\n        icon={SharedButtonIcons.exit}\r\n      />\r\n    </PopupWrapper>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Fieldset, Legend } from \"styles/mixins/Fieldset\";\r\nimport { LiElement } from \"styles/mixins/LiElement\";\r\nimport { COLORS } from \"styles/variables\";\r\n\r\nexport const Wrapper = styled(LiElement)`\r\n  @media (orientation: landscape) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    width: 60%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 50%;\r\n  }\r\n\r\n  h4 {\r\n    text-align: center;\r\n    padding: 5px 0;\r\n\r\n    @media (min-width: 768px) {\r\n      font-size: 19px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FieldsetStyled = styled(Fieldset)`\r\n  margin-bottom: 10px;\r\n  border-color: ${({ sys, dia, pulse }: IProps) =>\r\n    sys > 0 && dia > 0 && pulse > 0 ? COLORS.darkGreen : COLORS.red} !important;\r\n  border-color: ${({ omitted }: IProps) =>\r\n    omitted ? COLORS.gray : \"\"} !important;\r\n`;\r\n\r\nexport const MorningEvening = styled(Legend)`\r\n  p {\r\n    color: ${({ sys, dia, pulse }: IProps) =>\r\n      sys > 0 && dia > 0 && pulse > 0 ? COLORS.darkGreen : COLORS.red};\r\n    color: ${({ omitted }: IProps) => (omitted ? COLORS.gray : \"\")} !important;\r\n  }\r\n`;\r\n\r\nexport const SysDiaPuls = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  width: 100%;\r\n\r\n  p {\r\n    span {\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SysAndDiaColored = styled.span`\r\n  color: ${(props: { color: string }) => props.color};\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const Btns = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  width: 100%;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\ninterface IProps {\r\n  sys: number;\r\n  dia: number;\r\n  pulse: number;\r\n  omitted?: boolean;\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  anonymous,\r\n  TimeOfDayTypes,\r\n  TimeOfDayDisplayNames,\r\n  MeasurementSymbols,\r\n} from \"common/constants\";\r\nimport { IDailyTest, IGlobalState } from \"common/interfaces\";\r\nimport { SharedButton } from \"components/shared/SharedButton/SharedButton\";\r\n\r\nimport { COLORS } from \"styles/variables\";\r\nimport {\r\n  FieldsetStyled,\r\n  MorningEvening as MorningEveningStyled,\r\n  SysDiaPuls,\r\n  SysAndDiaColored,\r\n  Btns,\r\n} from \"./DailyTest.css\";\r\n\r\ninterface IProps {\r\n  userID: number;\r\n  dailyTest: IDailyTest;\r\n  timeOfDayType: TimeOfDayTypes;\r\n  editDailyTest: Function;\r\n  setOmittedDaily: Function;\r\n}\r\n\r\nexport const MorningEveningDetails: React.FC<IProps> = ({\r\n  userID,\r\n  dailyTest,\r\n  timeOfDayType,\r\n  editDailyTest,\r\n  setOmittedDaily,\r\n}) => {\r\n  const { id, date } = dailyTest;\r\n  const userBloodPressureBasedOnAge = useSelector(\r\n    (state: IGlobalState) =>\r\n      state.profiles.users.find((user) => userID === user.id)\r\n        ?.userBloodPressureBasedOnAge\r\n  );\r\n  const { MIN, MAX } =\r\n    userBloodPressureBasedOnAge || anonymous.userBloodPressureBasedOnAge;\r\n\r\n  const getSysDiaColor = (value: number, type: MeasurementSymbols) => {\r\n    if (value === 0) return COLORS.black;\r\n    else if (\r\n      (value <= MIN.SYS && type === MeasurementSymbols.sys) ||\r\n      (value <= MIN.DIA && type === MeasurementSymbols.dia)\r\n    )\r\n      return COLORS.blue;\r\n    else if (\r\n      (value >= MAX.SYS && type === MeasurementSymbols.sys) ||\r\n      (value >= MAX.DIA && type === MeasurementSymbols.dia)\r\n    )\r\n      return COLORS.red;\r\n    return COLORS.darkGreen;\r\n  };\r\n\r\n  return (\r\n    <FieldsetStyled\r\n      sys={dailyTest[timeOfDayType].SYS}\r\n      dia={dailyTest[timeOfDayType].DIA}\r\n      pulse={dailyTest[timeOfDayType].PULSE}\r\n      omitted={dailyTest[timeOfDayType].omitted}\r\n    >\r\n      <MorningEveningStyled\r\n        sys={dailyTest[timeOfDayType].SYS}\r\n        dia={dailyTest[timeOfDayType].DIA}\r\n        pulse={dailyTest[timeOfDayType].PULSE}\r\n        omitted={dailyTest[timeOfDayType].omitted}\r\n      >\r\n        <p>\r\n          {timeOfDayType === TimeOfDayTypes.morning\r\n            ? TimeOfDayDisplayNames.morning\r\n            : TimeOfDayDisplayNames.evening}\r\n        </p>\r\n      </MorningEveningStyled>\r\n      <SysDiaPuls>\r\n        <p>\r\n          Ciśnienie:{\" \"}\r\n          <SysAndDiaColored\r\n            color={\r\n              dailyTest[timeOfDayType].omitted\r\n                ? COLORS.gray\r\n                : getSysDiaColor(\r\n                    dailyTest[timeOfDayType].SYS,\r\n                    MeasurementSymbols.sys\r\n                  )\r\n            }\r\n          >\r\n            {dailyTest[timeOfDayType].SYS}\r\n          </SysAndDiaColored>\r\n          /\r\n          <SysAndDiaColored\r\n            color={\r\n              dailyTest[timeOfDayType].omitted\r\n                ? COLORS.gray\r\n                : getSysDiaColor(\r\n                    dailyTest[timeOfDayType].DIA,\r\n                    MeasurementSymbols.dia\r\n                  )\r\n            }\r\n          >\r\n            {dailyTest[timeOfDayType].DIA}\r\n          </SysAndDiaColored>\r\n        </p>\r\n        <p>\r\n          Puls: <span>{dailyTest[timeOfDayType].PULSE}</span>\r\n        </p>\r\n      </SysDiaPuls>\r\n      <Btns>\r\n        <SharedButton\r\n          onClick={() =>\r\n            editDailyTest(id, dailyTest[timeOfDayType].timeOfDay, date)\r\n          }\r\n          isDisabled={dailyTest[timeOfDayType].omitted}\r\n        >\r\n          Edytuj\r\n        </SharedButton>\r\n        <SharedButton\r\n          onClick={() =>\r\n            setOmittedDaily(\r\n              id,\r\n              dailyTest[timeOfDayType].timeOfDay,\r\n              !dailyTest[timeOfDayType].omitted\r\n            )\r\n          }\r\n        >\r\n          {dailyTest[timeOfDayType].omitted ? \"Przywróć\" : \"Pomiń\"}\r\n        </SharedButton>\r\n      </Btns>\r\n    </FieldsetStyled>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { IDailyTest } from \"common/interfaces\";\r\nimport { TimeOfDayTypes } from \"common/constants\";\r\n\r\nimport { MorningEveningDetails } from \"./MorningEveningDetails\";\r\nimport { Wrapper } from \"./DailyTest.css\";\r\n\r\ninterface IProps {\r\n  userID: number;\r\n  dailyTest: IDailyTest;\r\n  editDailyTest: Function;\r\n  setOmittedDaily: Function;\r\n}\r\n\r\nexport const DailyTest: React.FC<IProps> = ({\r\n  userID,\r\n  dailyTest,\r\n  editDailyTest,\r\n  setOmittedDaily,\r\n}) => {\r\n  const { id, date } = dailyTest;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <h4>\r\n        Dzień {id} - (<span>{date}</span>)\r\n      </h4>\r\n\r\n      <MorningEveningDetails\r\n        userID={userID}\r\n        dailyTest={dailyTest}\r\n        timeOfDayType={TimeOfDayTypes.morning}\r\n        editDailyTest={editDailyTest}\r\n        setOmittedDaily={setOmittedDaily}\r\n      />\r\n\r\n      <MorningEveningDetails\r\n        userID={userID}\r\n        dailyTest={dailyTest}\r\n        timeOfDayType={TimeOfDayTypes.evening}\r\n        editDailyTest={editDailyTest}\r\n        setOmittedDaily={setOmittedDaily}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Fieldset } from \"styles/mixins/Fieldset\";\r\nimport { COLORS, TRANSITION_TIME } from \"styles/variables\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 15px;\r\n  opacity: 0.95;\r\n  overflow: hidden;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 70%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 60%;\r\n  }\r\n`;\r\n\r\nexport const FieldsetStyled = styled(Fieldset)`\r\n  padding-bottom: 40px;\r\n`;\r\n\r\nexport const ControlPanel = styled.div`\r\n  display: flex;\r\n  padding: 5px 5px 0;\r\n\r\n  .buttons-wapper {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    width: 100%;\r\n\r\n    button {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const BackArrow = styled.button`\r\n  justify-self: flex-start;\r\n  background-color: transparent;\r\n  border: none;\r\n  outline: none;\r\n\r\n  i {\r\n    font-size: 28px;\r\n    color: ${COLORS.orange};\r\n\r\n    @media (min-width: 1024px) {\r\n      font-size: 30px;\r\n      cursor: pointer;\r\n      transition: ${TRANSITION_TIME};\r\n      :hover {\r\n        color: ${COLORS.darkGray};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// export const SummaryBtn = styled(GrayButton)`\r\n//   margin-left: auto;\r\n// `;\r\n\r\n// export const PdfBtn = styled(GrayButton)`\r\n//   margin-left: 10px;\r\n// `;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  setOmittedDailyTest,\r\n  updateNumberOfTotalAndDoneTestsAndState,\r\n  calculateAverageResults,\r\n} from \"store/actions/profilesAction\";\r\nimport { IPeriodicPressureTests } from \"common/interfaces\";\r\nimport { Portal, PortalTarget } from \"common/Portal/Portal\";\r\nimport { PeriodicTestStates, TimeOfDayTypes } from \"common/constants\";\r\nimport { EditDailyTest } from \"components/Popups/EditDailyTest/EditDailyTest\";\r\nimport { SharedButton } from \"components/shared/SharedButton/SharedButton\";\r\nimport { AverageResults } from \"components/Popups/AverageResults/AverageResults\";\r\n\r\nimport { DailyTest } from \"./DailyTest/DailyTest\";\r\nimport { Legend } from \"styles/mixins/Fieldset\";\r\nimport {\r\n  Wrapper,\r\n  FieldsetStyled,\r\n  ControlPanel,\r\n  BackArrow,\r\n} from \"./PeriodicTestDetails.css\";\r\n\r\ninterface IProps {\r\n  test: IPeriodicPressureTests;\r\n  userID: number;\r\n  backToPeriodicTestsList: () => void;\r\n}\r\n\r\nexport const PeriodicTestDetails: React.FC<IProps> = ({\r\n  test,\r\n  userID,\r\n  backToPeriodicTestsList,\r\n}) => {\r\n  const [isOpenPortal, setIsOpenPortal] = useState(false);\r\n  const [popup, setPopup] = useState<Object>({});\r\n  const dispatch = useDispatch();\r\n  const { list, id: periodicID, state, totalNumberOfTests } = test;\r\n  const testIsDone =\r\n    state === PeriodicTestStates.DONE && totalNumberOfTests !== 0\r\n      ? true\r\n      : false;\r\n\r\n  const renderList = list.map((item) => (\r\n    <DailyTest\r\n      userID={userID}\r\n      key={item.id}\r\n      dailyTest={item}\r\n      editDailyTest={(\r\n        dailyID: number,\r\n        timeOfDay: TimeOfDayTypes,\r\n        date: string\r\n      ) => {\r\n        setPopup(\r\n          <EditDailyTest\r\n            userID={userID}\r\n            periodicID={periodicID}\r\n            dailyID={dailyID}\r\n            timeOfDay={timeOfDay}\r\n            setIsOpenEditDailyTestPopup={setIsOpenPortal}\r\n            date={date}\r\n          />\r\n        );\r\n        setIsOpenPortal(true);\r\n      }}\r\n      setOmittedDaily={(\r\n        dailyID: number,\r\n        timeOfDay: TimeOfDayTypes,\r\n        omitted: boolean\r\n      ) => {\r\n        dispatch(\r\n          setOmittedDailyTest(userID, periodicID, dailyID, timeOfDay, omitted)\r\n        );\r\n        dispatch(updateNumberOfTotalAndDoneTestsAndState(userID, periodicID));\r\n      }}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FieldsetStyled>\r\n        <Legend>\r\n          Pomiar okresowy <span>#{periodicID}</span>\r\n        </Legend>\r\n        <ControlPanel>\r\n          <BackArrow onClick={backToPeriodicTestsList}>\r\n            <i className=\"fas fa-long-arrow-alt-left\"></i>\r\n          </BackArrow>\r\n          <div className=\"buttons-wapper\">\r\n            <SharedButton\r\n              onClick={() => {\r\n                dispatch(calculateAverageResults(userID, periodicID));\r\n                setPopup(\r\n                  <AverageResults\r\n                    userID={userID}\r\n                    periodicTest={test}\r\n                    setIsOpenAverageResultsPopup={setIsOpenPortal}\r\n                  />\r\n                );\r\n                setIsOpenPortal(true);\r\n              }}\r\n              isDisabled={!testIsDone}\r\n            >\r\n              Podsumowanie\r\n            </SharedButton>\r\n          </div>\r\n        </ControlPanel>\r\n        <ul>{renderList}</ul>\r\n      </FieldsetStyled>\r\n      {isOpenPortal ? (\r\n        <Portal target={PortalTarget.MODAL}>{popup}</Portal>\r\n      ) : null}\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport { IUser, IPeriodicPressureTests } from \"common/interfaces\";\r\nimport { emptyPeriodicTest } from \"common/constants\";\r\nimport { SharedPageWrapper } from \"components/shared/SharedPageWrapper/SharedPageWrapper\";\r\nimport { PeriodicTestsList } from \"./PeriodicTestsList/PeriodicTestsList\";\r\nimport { PeriodicTestDetails } from \"./PeriodicTestDetails/PeriodicTestDetails\";\r\n\r\ninterface IProps {\r\n  selectedUser: IUser;\r\n}\r\n\r\nexport const Measurements: React.FC<IProps> = ({ selectedUser }) => {\r\n  const [\r\n    openedPeriodicTest,\r\n    setOpenedPeriodicTest,\r\n  ] = useState<IPeriodicPressureTests>();\r\n  const [isOpenPeriodicTestDetails, setIsOpenPeriodicTestDetails] = useState(\r\n    false\r\n  );\r\n  const {\r\n    id,\r\n    periodicPressureTests,\r\n    nextAvailablePeriodicTestID,\r\n  } = selectedUser;\r\n\r\n  const handleOpenPeriodicTestDetails = (id: number) => {\r\n    const getOpenedPeriodicTest = periodicPressureTests.find(\r\n      (test) => id === test.id\r\n    );\r\n    setOpenedPeriodicTest(getOpenedPeriodicTest);\r\n    setIsOpenPeriodicTestDetails(true);\r\n  };\r\n\r\n  return (\r\n    <SharedPageWrapper>\r\n      {isOpenPeriodicTestDetails ? (\r\n        <PeriodicTestDetails\r\n          test={openedPeriodicTest || emptyPeriodicTest}\r\n          userID={id}\r\n          backToPeriodicTestsList={() => setIsOpenPeriodicTestDetails(false)}\r\n        />\r\n      ) : (\r\n        <PeriodicTestsList\r\n          userID={id}\r\n          tests={periodicPressureTests}\r\n          nextAvailablePeriodicTestID={nextAvailablePeriodicTestID}\r\n          openPeriodicTestDetails={handleOpenPeriodicTestDetails}\r\n        />\r\n      )}\r\n    </SharedPageWrapper>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Fieldset } from \"styles/mixins/Fieldset\";\r\nimport { COLORS, TRANSITION_TIME, CORNER_RADIUS } from \"styles/variables\";\r\n\r\nexport const FieldsetStyled = styled(Fieldset)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 90%;\r\n  margin: 20px 0;\r\n  overflow: auto;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 70%;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    width: 60%;\r\n  }\r\n\r\n  div {\r\n    margin: 30px 5px;\r\n    padding: 10px 20px;\r\n    background-color: ${COLORS.lightGray};\r\n    border-radius: ${CORNER_RADIUS};\r\n\r\n    p {\r\n      font-size: 14px;\r\n      text-align: center;\r\n\r\n      @media (min-width: 768px) {\r\n        font-size: 16px;\r\n      }\r\n\r\n      span {\r\n        font-weight: bold;\r\n        color: ${COLORS.blue};\r\n      }\r\n\r\n      a {\r\n        font-weight: bold;\r\n        text-decoration: none;\r\n        color: ${COLORS.darkGreen};\r\n\r\n        @media (min-width: 1024px) {\r\n          transition: ${TRANSITION_TIME};\r\n\r\n          :hover {\r\n            color: ${COLORS.green};\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { SharedPageWrapper } from \"components/shared/SharedPageWrapper/SharedPageWrapper\";\r\n\r\nimport { Legend } from \"styles/mixins/Fieldset\";\r\nimport { FieldsetStyled } from \"./Info.css\";\r\n\r\nexport const Info: React.FC = () => (\r\n  <SharedPageWrapper>\r\n    <FieldsetStyled>\r\n      <Legend>Informacje</Legend>\r\n      <div>\r\n        <p>\r\n          <span>Ważna uwaga!</span> Po usunięciu{\" \"}\r\n          <span>historii przeglądania w przeglądarce</span> zapisane dane w\r\n          aplikacji zostaną utracone, ponieważ strona nie wykorzystuje serwera\r\n          do przechowywania danych!\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <p>\r\n          Strona Badaj Ciśnienie jest tylko zapisem okresowych pomiarów\r\n          ciśnienia krwi użytkownika. Wszelkie oznaczenia kolorystyczne używane\r\n          na stronie (min, norma, max - względem wieku) są tylko poglądowe i nie\r\n          zastąpią <span>konsultacji z lekarzem prowadzącym.</span>\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <p>\r\n          Projekt i realizacja:{\" \"}\r\n          <a\r\n            href=\"https://mkphercog.github.io/mywebsite/#/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            Marcin Hercog\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </FieldsetStyled>\r\n  </SharedPageWrapper>\r\n);\r\n","import styled from \"styled-components\";\r\nimport { COLORS } from \"styles/variables\";\r\n\r\nexport const AppBG = styled.div`\r\n  position: relative;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  padding: 10px 5px;\r\n  background-color: ${COLORS.lightGray};\r\n\r\n  @media (min-width: 1024px) {\r\n    padding: 20px 10px 30px;\r\n  }\r\n`;\r\n\r\nexport const AppWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  height: 100%;\r\n  max-width: 1250px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const AppBottomBar = styled.div`\r\n  position: absolute;\r\n  height: 70px;\r\n  width: 100%;\r\n  bottom: 0;\r\n  left: 0;\r\n  background-color: ${COLORS.gray};\r\n`;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { COLORS, CORNER_RADIUS } from \"styles/variables\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n*{\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  font-family: 'Open Sans', sans-serif;\r\n\r\n  @media (min-width: 1024px) {\r\n    ::-webkit-scrollbar {\r\n      width: 10px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n      box-shadow: inset 0 0 6px #aaa;\r\n      border-radius: ${CORNER_RADIUS};\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n      border-radius: ${CORNER_RADIUS};\r\n      background-color: ${COLORS.gray};\r\n    }\r\n  }\r\n} \r\n`;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport { anonymous } from \"common/constants\";\r\nimport { IGlobalState } from \"common/interfaces\";\r\nimport { Navigation } from \"components/Navigation/Navigation\";\r\nimport { UserPressureBar } from \"components/UserPressureBar/UserPressureBar\";\r\nimport { ProfilesSelector } from \"components/ProfilesSelector/ProfilesSelector\";\r\nimport { Measurements } from \"components/Measurements/Measurements\";\r\nimport { Info } from \"components/Info/Info\";\r\n\r\nimport { AppBG, AppWrapper, AppBottomBar } from \"./App.css\";\r\nimport { GlobalStyles } from \"./index.css\";\r\n\r\nexport const App: React.FC = () => {\r\n  const getProfiles = useSelector((state: IGlobalState) => state.profiles);\r\n  const { users, selectedUserID } = getProfiles;\r\n  const selectedUser =\r\n    users.find((user) => selectedUserID === user.id) || anonymous;\r\n  const { name, age, userBloodPressureBasedOnAge } = selectedUser;\r\n\r\n  return (\r\n    <AppBG>\r\n      <AppBottomBar />\r\n      <GlobalStyles />\r\n      <AppWrapper>\r\n        <Navigation />\r\n        {selectedUser.id !== -1 ? (\r\n          <UserPressureBar\r\n            name={name}\r\n            age={age}\r\n            userBloodPressureBasedOnAge={userBloodPressureBasedOnAge}\r\n          />\r\n        ) : null}\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <ProfilesSelector />\r\n          </Route>\r\n          <Route path=\"/measurements\">\r\n            <Measurements selectedUser={selectedUser} />\r\n          </Route>\r\n          <Route path=\"/info\">\r\n            <Info />\r\n          </Route>\r\n        </Switch>\r\n      </AppWrapper>\r\n    </AppBG>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { store } from \"store/\";\r\nimport { App } from \"App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter basename=\"/\">\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}